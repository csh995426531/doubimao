{
	"id": "8cf63cb5ea029060f024a0badea901ef",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.24",
	"solcLongVersion": "0.8.24+commit.e11b9ed9",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/MyToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\";\nimport \"stl-contracts/ERC/ERC5169.sol\";\n\ncontract ERC721Mint is Ownable, ERC5169, ERC721Enumerable {\n    constructor()\n        ERC721(\"doubimao\", \"doubimao\") \n        Ownable(msg.sender)\n    {}\n\n    function supportsInterface(bytes4 interfaceId)\n        public\n        view\n        override(ERC5169, ERC721Enumerable)\n        returns (bool)\n    {\n        return\n            ERC721Enumerable.supportsInterface(interfaceId) ||\n            ERC5169.supportsInterface(interfaceId);\n    }\n\n    // limit set contracts to admin only\n    function _authorizeSetScripts(string[] memory)\n        internal\n        view\n        override(ERC5169)\n        onlyOwner\n    {}\n\n    function safeMint(address to, uint256 tokenId) public onlyOwner {\n        _safeMint(to, tokenId);\n    }\n}"
			},
			"stl-contracts/ERC/ERC5169.sol": {
				"content": "/* Attestation decode and validation */\n/* AlphaWallet 2021 - 2022 */\n// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.16;\n\nimport \"./IERC5169.sol\";\n\nabstract contract ERC5169 is IERC5169 {\n    string[] private _scriptURI;\n\n    function scriptURI() external view override returns (string[] memory) {\n        return _scriptURI;\n    }\n\n    function setScriptURI(string[] memory newScriptURI) external override {\n        _authorizeSetScripts(newScriptURI);\n\n        _scriptURI = newScriptURI;\n\n        emit ScriptUpdate(newScriptURI);\n    }\n\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC5169).interfaceId;\n    }\n\n    /**\n     * @dev Function that should revert when `msg.sender` is not authorized to set script URI. Called by\n     * {setScriptURI}.\n     *\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n     *\n     * ```solidity\n     * function _authorizeSetScripts(string[] memory) internal override onlyOwner {}\n     * ```\n     */\n    function _authorizeSetScripts(string[] memory newScriptURI) internal virtual;\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/ERC721Enumerable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC721} from \"../ERC721.sol\";\nimport {IERC721Enumerable} from \"./IERC721Enumerable.sol\";\nimport {IERC165} from \"../../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev This implements an optional extension of {ERC721} defined in the EIP that adds enumerability\n * of all the token ids in the contract as well as all token ids owned by each account.\n *\n * CAUTION: `ERC721` extensions that implement custom `balanceOf` logic, such as `ERC721Consecutive`,\n * interfere with enumerability and should not be used together with `ERC721Enumerable`.\n */\nabstract contract ERC721Enumerable is ERC721, IERC721Enumerable {\n    mapping(address owner => mapping(uint256 index => uint256)) private _ownedTokens;\n    mapping(uint256 tokenId => uint256) private _ownedTokensIndex;\n\n    uint256[] private _allTokens;\n    mapping(uint256 tokenId => uint256) private _allTokensIndex;\n\n    /**\n     * @dev An `owner`'s token query was out of bounds for `index`.\n     *\n     * NOTE: The owner being `address(0)` indicates a global out of bounds index.\n     */\n    error ERC721OutOfBoundsIndex(address owner, uint256 index);\n\n    /**\n     * @dev Batch mint is not allowed.\n     */\n    error ERC721EnumerableForbiddenBatchMint();\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(IERC165, ERC721) returns (bool) {\n        return interfaceId == type(IERC721Enumerable).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721Enumerable-tokenOfOwnerByIndex}.\n     */\n    function tokenOfOwnerByIndex(address owner, uint256 index) public view virtual returns (uint256) {\n        if (index >= balanceOf(owner)) {\n            revert ERC721OutOfBoundsIndex(owner, index);\n        }\n        return _ownedTokens[owner][index];\n    }\n\n    /**\n     * @dev See {IERC721Enumerable-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _allTokens.length;\n    }\n\n    /**\n     * @dev See {IERC721Enumerable-tokenByIndex}.\n     */\n    function tokenByIndex(uint256 index) public view virtual returns (uint256) {\n        if (index >= totalSupply()) {\n            revert ERC721OutOfBoundsIndex(address(0), index);\n        }\n        return _allTokens[index];\n    }\n\n    /**\n     * @dev See {ERC721-_update}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual override returns (address) {\n        address previousOwner = super._update(to, tokenId, auth);\n\n        if (previousOwner == address(0)) {\n            _addTokenToAllTokensEnumeration(tokenId);\n        } else if (previousOwner != to) {\n            _removeTokenFromOwnerEnumeration(previousOwner, tokenId);\n        }\n        if (to == address(0)) {\n            _removeTokenFromAllTokensEnumeration(tokenId);\n        } else if (previousOwner != to) {\n            _addTokenToOwnerEnumeration(to, tokenId);\n        }\n\n        return previousOwner;\n    }\n\n    /**\n     * @dev Private function to add a token to this extension's ownership-tracking data structures.\n     * @param to address representing the new owner of the given token ID\n     * @param tokenId uint256 ID of the token to be added to the tokens list of the given address\n     */\n    function _addTokenToOwnerEnumeration(address to, uint256 tokenId) private {\n        uint256 length = balanceOf(to) - 1;\n        _ownedTokens[to][length] = tokenId;\n        _ownedTokensIndex[tokenId] = length;\n    }\n\n    /**\n     * @dev Private function to add a token to this extension's token tracking data structures.\n     * @param tokenId uint256 ID of the token to be added to the tokens list\n     */\n    function _addTokenToAllTokensEnumeration(uint256 tokenId) private {\n        _allTokensIndex[tokenId] = _allTokens.length;\n        _allTokens.push(tokenId);\n    }\n\n    /**\n     * @dev Private function to remove a token from this extension's ownership-tracking data structures. Note that\n     * while the token is not assigned a new owner, the `_ownedTokensIndex` mapping is _not_ updated: this allows for\n     * gas optimizations e.g. when performing a transfer operation (avoiding double writes).\n     * This has O(1) time complexity, but alters the order of the _ownedTokens array.\n     * @param from address representing the previous owner of the given token ID\n     * @param tokenId uint256 ID of the token to be removed from the tokens list of the given address\n     */\n    function _removeTokenFromOwnerEnumeration(address from, uint256 tokenId) private {\n        // To prevent a gap in from's tokens array, we store the last token in the index of the token to delete, and\n        // then delete the last slot (swap and pop).\n\n        uint256 lastTokenIndex = balanceOf(from);\n        uint256 tokenIndex = _ownedTokensIndex[tokenId];\n\n        // When the token to delete is the last token, the swap operation is unnecessary\n        if (tokenIndex != lastTokenIndex) {\n            uint256 lastTokenId = _ownedTokens[from][lastTokenIndex];\n\n            _ownedTokens[from][tokenIndex] = lastTokenId; // Move the last token to the slot of the to-delete token\n            _ownedTokensIndex[lastTokenId] = tokenIndex; // Update the moved token's index\n        }\n\n        // This also deletes the contents at the last position of the array\n        delete _ownedTokensIndex[tokenId];\n        delete _ownedTokens[from][lastTokenIndex];\n    }\n\n    /**\n     * @dev Private function to remove a token from this extension's token tracking data structures.\n     * This has O(1) time complexity, but alters the order of the _allTokens array.\n     * @param tokenId uint256 ID of the token to be removed from the tokens list\n     */\n    function _removeTokenFromAllTokensEnumeration(uint256 tokenId) private {\n        // To prevent a gap in the tokens array, we store the last token in the index of the token to delete, and\n        // then delete the last slot (swap and pop).\n\n        uint256 lastTokenIndex = _allTokens.length - 1;\n        uint256 tokenIndex = _allTokensIndex[tokenId];\n\n        // When the token to delete is the last token, the swap operation is unnecessary. However, since this occurs so\n        // rarely (when the last minted token is burnt) that we still do the swap here to avoid the gas cost of adding\n        // an 'if' statement (like in _removeTokenFromOwnerEnumeration)\n        uint256 lastTokenId = _allTokens[lastTokenIndex];\n\n        _allTokens[tokenIndex] = lastTokenId; // Move the last token to the slot of the to-delete token\n        _allTokensIndex[lastTokenId] = tokenIndex; // Update the moved token's index\n\n        // This also deletes the contents at the last position of the array\n        delete _allTokensIndex[tokenId];\n        _allTokens.pop();\n    }\n\n    /**\n     * See {ERC721-_increaseBalance}. We need that to account tokens that were minted in batch\n     */\n    function _increaseBalance(address account, uint128 amount) internal virtual override {\n        if (amount > 0) {\n            revert ERC721EnumerableForbiddenBatchMint();\n        }\n        super._increaseBalance(account, amount);\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"./IERC721.sol\";\nimport {IERC721Receiver} from \"./IERC721Receiver.sol\";\nimport {IERC721Metadata} from \"./extensions/IERC721Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {Strings} from \"../../utils/Strings.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {IERC721Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    mapping(uint256 tokenId => address) private _owners;\n\n    mapping(address owner => uint256) private _balances;\n\n    mapping(uint256 tokenId => address) private _tokenApprovals;\n\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual returns (uint256) {\n        if (owner == address(0)) {\n            revert ERC721InvalidOwner(address(0));\n        }\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\n        return _requireOwned(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual {\n        _approve(to, tokenId, _msgSender());\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\n        _requireOwned(tokenId);\n\n        return _getApproved(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        address previousOwner = _update(to, tokenId, _msgSender());\n        if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\n        transferFrom(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     *\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n     * core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\n     */\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n     * particular (ignoring whether it is owned by `owner`).\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\n        return\n            spender != address(0) &&\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n     * Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n     * the `spender` for the specific `tokenId`.\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\n        if (!_isAuthorized(owner, spender, tokenId)) {\n            if (owner == address(0)) {\n                revert ERC721NonexistentToken(tokenId);\n            } else {\n                revert ERC721InsufficientApproval(spender, tokenId);\n            }\n        }\n    }\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n     *\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n     * remain consistent with one another.\n     */\n    function _increaseBalance(address account, uint128 value) internal virtual {\n        unchecked {\n            _balances[account] += value;\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\n        address from = _ownerOf(tokenId);\n\n        // Perform (optional) operator check\n        if (auth != address(0)) {\n            _checkAuthorized(from, auth, tokenId);\n        }\n\n        // Execute the update\n        if (from != address(0)) {\n            // Clear approval. No need to re-authorize or emit the Approval event\n            _approve(address(0), tokenId, address(0), false);\n\n            unchecked {\n                _balances[from] -= 1;\n            }\n        }\n\n        if (to != address(0)) {\n            unchecked {\n                _balances[to] += 1;\n            }\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        return from;\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner != address(0)) {\n            revert ERC721InvalidSender(address(0));\n        }\n    }\n\n    /**\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        _checkOnERC721Received(address(0), to, tokenId, data);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal {\n        address previousOwner = _update(address(0), tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        } else if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n     * are aware of the ERC721 standard to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `tokenId` token must exist and be owned by `from`.\n     * - `to` cannot be the zero address.\n     * - `from` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\n        _safeTransfer(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\n     *\n     * Emits an {Approval} event.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address to, uint256 tokenId, address auth) internal {\n        _approve(to, tokenId, auth, true);\n    }\n\n    /**\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n     * emitted in the context of transfers.\n     */\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\n        // Avoid reading the owner unless necessary\n        if (emitEvent || auth != address(0)) {\n            address owner = _requireOwned(tokenId);\n\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\n                revert ERC721InvalidApprover(auth);\n            }\n\n            if (emitEvent) {\n                emit Approval(owner, to, tokenId);\n            }\n        }\n\n        _tokenApprovals[tokenId] = to;\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Requirements:\n     * - operator can't be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC721InvalidOperator(operator);\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n     * Returns the owner.\n     *\n     * Overrides to ownership logic should be done to {_ownerOf}.\n     */\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\n        address owner = _ownerOf(tokenId);\n        if (owner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n        return owner;\n    }\n\n    /**\n     * @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n     * recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param data bytes optional data to send along with the call\n     */\n    function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {\n        if (to.code.length > 0) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\n                if (retval != IERC721Receiver.onERC721Received.selector) {\n                    revert ERC721InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert ERC721InvalidReceiver(to);\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"
			},
			"stl-contracts/ERC/IERC5169.sol": {
				"content": "/* Attestation decode and validation */\n/* AlphaWallet 2021 - 2022 */\n// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.16;\n\ninterface IERC5169 {\n    /// @dev This event emits when the scriptURI is updated,\n    /// so wallets implementing this interface can update a cached script\n    event ScriptUpdate(string[]);\n\n    /// @notice Get the scriptURI for the contract\n    /// @return The scriptURI\n    function scriptURI() external view returns (string[] memory);\n\n    /// @notice Update the scriptURI\n    /// emits event ScriptUpdate(string[])\n    function setScriptURI(string[] memory) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Enumerable.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Enumerable is IERC721 {\n    /**\n     * @dev Returns the total amount of tokens stored by the contract.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n     * Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\n     */\n    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256);\n\n    /**\n     * @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\n     * Use along with {totalSupply} to enumerate all tokens.\n     */\n    function tokenByIndex(uint256 index) external view returns (uint256);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ERC721": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"constructor": {
								"details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 323,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 327,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 331,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 337,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol": {
				"ERC721Enumerable": {
					"abi": [
						{
							"inputs": [],
							"name": "ERC721EnumerableForbiddenBatchMint",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "ERC721OutOfBoundsIndex",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenOfOwnerByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "This implements an optional extension of {ERC721} defined in the EIP that adds enumerability of all the token ids in the contract as well as all token ids owned by each account. CAUTION: `ERC721` extensions that implement custom `balanceOf` logic, such as `ERC721Consecutive`, interfere with enumerability and should not be used together with `ERC721Enumerable`.",
						"errors": {
							"ERC721EnumerableForbiddenBatchMint()": [
								{
									"details": "Batch mint is not allowed."
								}
							],
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721OutOfBoundsIndex(address,uint256)": [
								{
									"details": "An `owner`'s token query was out of bounds for `index`. NOTE: The owner being `address(0)` indicates a global out of bounds index."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenByIndex(uint256)": {
								"details": "See {IERC721Enumerable-tokenByIndex}."
							},
							"tokenOfOwnerByIndex(address,uint256)": {
								"details": "See {IERC721Enumerable-tokenOfOwnerByIndex}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"totalSupply()": {
								"details": "See {IERC721Enumerable-totalSupply}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenByIndex(uint256)": "4f6ccce7",
							"tokenOfOwnerByIndex(address,uint256)": "2f745c59",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ERC721EnumerableForbiddenBatchMint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"ERC721OutOfBoundsIndex\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This implements an optional extension of {ERC721} defined in the EIP that adds enumerability of all the token ids in the contract as well as all token ids owned by each account. CAUTION: `ERC721` extensions that implement custom `balanceOf` logic, such as `ERC721Consecutive`, interfere with enumerability and should not be used together with `ERC721Enumerable`.\",\"errors\":{\"ERC721EnumerableForbiddenBatchMint()\":[{\"details\":\"Batch mint is not allowed.\"}],\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721OutOfBoundsIndex(address,uint256)\":[{\"details\":\"An `owner`'s token query was out of bounds for `index`. NOTE: The owner being `address(0)` indicates a global out of bounds index.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenByIndex(uint256)\":{\"details\":\"See {IERC721Enumerable-tokenByIndex}.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"See {IERC721Enumerable-tokenOfOwnerByIndex}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"totalSupply()\":{\"details\":\"See {IERC721Enumerable-totalSupply}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":\"ERC721Enumerable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":{\"keccak256\":\"0x36797469c391ea5ba27408e6ca8adf0824ba6f3adea9c139be18bd6f63232c16\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0dcf8bb9f7c29d678de34a051b4a71cf27ae56464678696c6913cbbfc75d548a\",\"dweb:/ipfs/QmSfdgU9V2dXh9oajUxgF9hU1aPnpd1PEMtcchoANsCNmW\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0x3d6954a93ac198a2ffa384fa58ccf18e7e235263e051a394328002eff4e073de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1f58c799bd939d3951c94893e83ef86acd56989d1d7db7f9d180c515e29e28ff\",\"dweb:/ipfs/QmTgAxHAAys4kq9ZfU9YB24MWYoHLGAKSxnYUigPFrNW7g\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 323,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 327,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 331,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 337,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 1447,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable",
								"label": "_ownedTokens",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))"
							},
							{
								"astId": 1451,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable",
								"label": "_ownedTokensIndex",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 1454,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable",
								"label": "_allTokens",
								"offset": 0,
								"slot": "8",
								"type": "t_array(t_uint256)dyn_storage"
							},
							{
								"astId": 1458,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable",
								"label": "_allTokensIndex",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_uint256,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)dyn_storage": {
								"base": "t_uint256",
								"encoding": "dynamic_array",
								"label": "uint256[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(uint256 => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol": {
				"IERC721Enumerable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenOfOwnerByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"tokenByIndex(uint256)": {
								"details": "Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens."
							},
							"tokenOfOwnerByIndex(address,uint256)": {
								"details": "Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens."
							},
							"totalSupply()": {
								"details": "Returns the total amount of tokens stored by the contract."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional enumeration extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"tokenByIndex(uint256)": "4f6ccce7",
							"tokenOfOwnerByIndex(address,uint256)": "2f745c59",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"tokenByIndex(uint256)\":{\"details\":\"Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\"},\"totalSupply()\":{\"details\":\"Returns the total amount of tokens stored by the contract.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional enumeration extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":\"IERC721Enumerable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0x3d6954a93ac198a2ffa384fa58ccf18e7e235263e051a394328002eff4e073de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1f58c799bd939d3951c94893e83ef86acd56989d1d7db7f9d180c515e29e28ff\",\"dweb:/ipfs/QmTgAxHAAys4kq9ZfU9YB24MWYoHLGAKSxnYUigPFrNW7g\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "StringsInsufficientHexLength",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "String operations.",
						"errors": {
							"StringsInsufficientHexLength(uint256,uint256)": [
								{
									"details": "The `value` string doesn't fit in the specified `length`."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122026adcbf8e2380ffc9b7d53147d97877b9e32f7ae91acf305bb7af92d06dbd32864736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122026adcbf8e2380ffc9b7d53147d97877b9e32f7ae91acf305bb7af92d06dbd32864736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 0xAD 0xCB 0xF8 0xE2 CODESIZE 0xF 0xFC SWAP12 PUSH30 0x53147D97877B9E32F7AE91ACF305BB7AF92D06DBD32864736F6C63430008 XOR STOP CALLER ",
							"sourceMap": "251:2847:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122026adcbf8e2380ffc9b7d53147d97877b9e32f7ae91acf305bb7af92d06dbd32864736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 0xAD 0xCB 0xF8 0xE2 CODESIZE 0xF 0xFC SWAP12 PUSH30 0x53147D97877B9E32F7AE91ACF305BB7AF92D06DBD32864736F6C63430008 XOR STOP CALLER ",
							"sourceMap": "251:2847:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite",
								"toStringSigned(int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122026adcbf8e2380ffc9b7d53147d97877b9e32f7ae91acf305bb7af92d06dbd32864736f6c63430008180033",
									".code": [
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/MyToken.sol",
								"stl-contracts/ERC/ERC5169.sol",
								"stl-contracts/ERC/IERC5169.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122061ceb14b5a4b3a6c8adc362e00e2d7ce046ec7ea2cfe0af53cca1159a08eb93864736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122061ceb14b5a4b3a6c8adc362e00e2d7ce046ec7ea2cfe0af53cca1159a08eb93864736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH2 0xCEB1 0x4B GAS 0x4B GASPRICE PUSH13 0x8ADC362E00E2D7CE046EC7EA2C INVALID EXP CREATE2 EXTCODECOPY 0xCA GT MSIZE LOG0 DUP15 0xB9 CODESIZE PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "203:14914:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122061ceb14b5a4b3a6c8adc362e00e2d7ce046ec7ea2cfe0af53cca1159a08eb93864736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH2 0xCEB1 0x4B GAS 0x4B GASPRICE PUSH13 0x8ADC362E00E2D7CE046EC7EA2C INVALID EXP CREATE2 EXTCODECOPY 0xCA GT MSIZE LOG0 DUP15 0xB9 CODESIZE PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "203:14914:12:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "B"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "BYTE",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "ADDRESS",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE8",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122061ceb14b5a4b3a6c8adc362e00e2d7ce046ec7ea2cfe0af53cca1159a08eb93864736f6c63430008180033",
									".code": [
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSHDEPLOYADDRESS",
											"source": 12
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "REVERT",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/MyToken.sol",
								"stl-contracts/ERC/ERC5169.sol",
								"stl-contracts/ERC/IERC5169.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220272e3503abb061b2bf96f6b150982f7bcfaa915c12ef0670a2365959b2303c0264736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220272e3503abb061b2bf96f6b150982f7bcfaa915c12ef0670a2365959b2303c0264736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x27 0x2E CALLDATALOAD SUB 0xAB 0xB0 PUSH2 0xB2BF SWAP7 0xF6 0xB1 POP SWAP9 0x2F PUSH28 0xCFAA915C12EF0670A2365959B2303C0264736F6C6343000818003300 ",
							"sourceMap": "216:1047:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220272e3503abb061b2bf96f6b150982f7bcfaa915c12ef0670a2365959b2303c0264736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x27 0x2E CALLDATALOAD SUB 0xAB 0xB0 PUSH2 0xB2BF SWAP7 0xF6 0xB1 POP SWAP9 0x2F PUSH28 0xCFAA915C12EF0670A2365959B2303C0264736F6C6343000818003300 ",
							"sourceMap": "216:1047:13:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 13,
									"value": "B"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "BYTE",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "ADDRESS",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE8",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220272e3503abb061b2bf96f6b150982f7bcfaa915c12ef0670a2365959b2303c0264736f6c63430008180033",
									".code": [
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSHDEPLOYADDRESS",
											"source": 13
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "REVERT",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/MyToken.sol",
								"stl-contracts/ERC/ERC5169.sol",
								"stl-contracts/ERC/IERC5169.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/MyToken.sol": {
				"ERC721Mint": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "ERC721EnumerableForbiddenBatchMint",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "ERC721OutOfBoundsIndex",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string[]",
									"name": "",
									"type": "string[]"
								}
							],
							"name": "ScriptUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeMint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "scriptURI",
							"outputs": [
								{
									"internalType": "string[]",
									"name": "",
									"type": "string[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string[]",
									"name": "newScriptURI",
									"type": "string[]"
								}
							],
							"name": "setScriptURI",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenOfOwnerByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC721EnumerableForbiddenBatchMint()": [
								{
									"details": "Batch mint is not allowed."
								}
							],
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721OutOfBoundsIndex(address,uint256)": [
								{
									"details": "An `owner`'s token query was out of bounds for `index`. NOTE: The owner being `address(0)` indicates a global out of bounds index."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"ScriptUpdate(string[])": {
								"details": "This event emits when the scriptURI is updated, so wallets implementing this interface can update a cached script"
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"scriptURI()": {
								"returns": {
									"_0": "The scriptURI"
								}
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenByIndex(uint256)": {
								"details": "See {IERC721Enumerable-tokenByIndex}."
							},
							"tokenOfOwnerByIndex(address,uint256)": {
								"details": "See {IERC721Enumerable-tokenOfOwnerByIndex}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"totalSupply()": {
								"details": "See {IERC721Enumerable-totalSupply}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/MyToken.sol\":289:1015  contract ERC721Mint is Ownable, ERC5169, ERC721Enumerable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/MyToken.sol\":353:441  constructor()... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1381:1494  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x08\n  dup2\n  mstore\n  0x20\n  add\n  0x646f7562696d616f000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x08\n  dup2\n  mstore\n  0x20\n  add\n  0x646f7562696d616f000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"contracts/MyToken.sol\":423:433  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_6\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_7\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_6:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_9\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_10)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_9:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1455:1460  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1447:1452  _name */\n  0x02\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1447:1460  _name = name_ */\n  swap1\n  dup2\n  tag_12\n  swap2\n  swap1\n  tag_13\n  jump\t// in\ntag_12:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1480:1487  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1470:1477  _symbol */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1470:1487  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_14\n  swap2\n  swap1\n  tag_13\n  jump\t// in\ntag_14:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1381:1494  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"contracts/MyToken.sol\":289:1015  contract ERC721Mint is Ownable, ERC5169, ERC721Enumerable {... */\n  jump(tag_16)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:133   */\ntag_18:\n    /* \"#utility.yul\":44:51   */\n  0x00\n    /* \"#utility.yul\":84:126   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":77:82   */\n  dup3\n    /* \"#utility.yul\":73:127   */\n  and\n    /* \"#utility.yul\":62:127   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:133   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":139:235   */\ntag_19:\n    /* \"#utility.yul\":176:183   */\n  0x00\n    /* \"#utility.yul\":205:229   */\n  tag_44\n    /* \"#utility.yul\":223:228   */\n  dup3\n    /* \"#utility.yul\":205:229   */\n  tag_18\n  jump\t// in\ntag_44:\n    /* \"#utility.yul\":194:229   */\n  swap1\n  pop\n    /* \"#utility.yul\":139:235   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":241:359   */\ntag_20:\n    /* \"#utility.yul\":328:352   */\n  tag_46\n    /* \"#utility.yul\":346:351   */\n  dup2\n    /* \"#utility.yul\":328:352   */\n  tag_19\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":323:326   */\n  dup3\n    /* \"#utility.yul\":316:353   */\n  mstore\n    /* \"#utility.yul\":241:359   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":365:587   */\ntag_8:\n    /* \"#utility.yul\":458:462   */\n  0x00\n    /* \"#utility.yul\":496:498   */\n  0x20\n    /* \"#utility.yul\":485:494   */\n  dup3\n    /* \"#utility.yul\":481:499   */\n  add\n    /* \"#utility.yul\":473:499   */\n  swap1\n  pop\n    /* \"#utility.yul\":509:580   */\n  tag_48\n    /* \"#utility.yul\":577:578   */\n  0x00\n    /* \"#utility.yul\":566:575   */\n  dup4\n    /* \"#utility.yul\":562:579   */\n  add\n    /* \"#utility.yul\":553:559   */\n  dup5\n    /* \"#utility.yul\":509:580   */\n  tag_20\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":365:587   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":593:692   */\ntag_21:\n    /* \"#utility.yul\":645:651   */\n  0x00\n    /* \"#utility.yul\":679:684   */\n  dup2\n    /* \"#utility.yul\":673:685   */\n  mload\n    /* \"#utility.yul\":663:685   */\n  swap1\n  pop\n    /* \"#utility.yul\":593:692   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":698:878   */\ntag_22:\n    /* \"#utility.yul\":746:823   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":743:744   */\n  0x00\n    /* \"#utility.yul\":736:824   */\n  mstore\n    /* \"#utility.yul\":843:847   */\n  0x41\n    /* \"#utility.yul\":840:841   */\n  0x04\n    /* \"#utility.yul\":833:848   */\n  mstore\n    /* \"#utility.yul\":867:871   */\n  0x24\n    /* \"#utility.yul\":864:865   */\n  0x00\n    /* \"#utility.yul\":857:872   */\n  revert\n    /* \"#utility.yul\":884:1064   */\ntag_23:\n    /* \"#utility.yul\":932:1009   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":929:930   */\n  0x00\n    /* \"#utility.yul\":922:1010   */\n  mstore\n    /* \"#utility.yul\":1029:1033   */\n  0x22\n    /* \"#utility.yul\":1026:1027   */\n  0x04\n    /* \"#utility.yul\":1019:1034   */\n  mstore\n    /* \"#utility.yul\":1053:1057   */\n  0x24\n    /* \"#utility.yul\":1050:1051   */\n  0x00\n    /* \"#utility.yul\":1043:1058   */\n  revert\n    /* \"#utility.yul\":1070:1390   */\ntag_24:\n    /* \"#utility.yul\":1114:1120   */\n  0x00\n    /* \"#utility.yul\":1151:1152   */\n  0x02\n    /* \"#utility.yul\":1145:1149   */\n  dup3\n    /* \"#utility.yul\":1141:1153   */\n  div\n    /* \"#utility.yul\":1131:1153   */\n  swap1\n  pop\n    /* \"#utility.yul\":1198:1199   */\n  0x01\n    /* \"#utility.yul\":1192:1196   */\n  dup3\n    /* \"#utility.yul\":1188:1200   */\n  and\n    /* \"#utility.yul\":1219:1237   */\n  dup1\n    /* \"#utility.yul\":1209:1290   */\n  tag_53\n  jumpi\n    /* \"#utility.yul\":1275:1279   */\n  0x7f\n    /* \"#utility.yul\":1267:1273   */\n  dup3\n    /* \"#utility.yul\":1263:1280   */\n  and\n    /* \"#utility.yul\":1253:1280   */\n  swap2\n  pop\n    /* \"#utility.yul\":1209:1290   */\ntag_53:\n    /* \"#utility.yul\":1337:1339   */\n  0x20\n    /* \"#utility.yul\":1329:1335   */\n  dup3\n    /* \"#utility.yul\":1326:1340   */\n  lt\n    /* \"#utility.yul\":1306:1324   */\n  dup2\n    /* \"#utility.yul\":1303:1341   */\n  sub\n    /* \"#utility.yul\":1300:1384   */\n  tag_54\n  jumpi\n    /* \"#utility.yul\":1356:1374   */\n  tag_55\n  tag_23\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":1300:1384   */\ntag_54:\n    /* \"#utility.yul\":1121:1390   */\n  pop\n    /* \"#utility.yul\":1070:1390   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1396:1537   */\ntag_25:\n    /* \"#utility.yul\":1445:1449   */\n  0x00\n    /* \"#utility.yul\":1468:1471   */\n  dup2\n    /* \"#utility.yul\":1460:1471   */\n  swap1\n  pop\n    /* \"#utility.yul\":1491:1494   */\n  dup2\n    /* \"#utility.yul\":1488:1489   */\n  0x00\n    /* \"#utility.yul\":1481:1495   */\n  mstore\n    /* \"#utility.yul\":1525:1529   */\n  0x20\n    /* \"#utility.yul\":1522:1523   */\n  0x00\n    /* \"#utility.yul\":1512:1530   */\n  keccak256\n    /* \"#utility.yul\":1504:1530   */\n  swap1\n  pop\n    /* \"#utility.yul\":1396:1537   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1543:1636   */\ntag_26:\n    /* \"#utility.yul\":1580:1586   */\n  0x00\n    /* \"#utility.yul\":1627:1629   */\n  0x20\n    /* \"#utility.yul\":1622:1624   */\n  0x1f\n    /* \"#utility.yul\":1615:1620   */\n  dup4\n    /* \"#utility.yul\":1611:1625   */\n  add\n    /* \"#utility.yul\":1607:1630   */\n  div\n    /* \"#utility.yul\":1597:1630   */\n  swap1\n  pop\n    /* \"#utility.yul\":1543:1636   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1642:1749   */\ntag_27:\n    /* \"#utility.yul\":1686:1694   */\n  0x00\n    /* \"#utility.yul\":1736:1741   */\n  dup3\n    /* \"#utility.yul\":1730:1734   */\n  dup3\n    /* \"#utility.yul\":1726:1742   */\n  shl\n    /* \"#utility.yul\":1705:1742   */\n  swap1\n  pop\n    /* \"#utility.yul\":1642:1749   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1755:2148   */\ntag_28:\n    /* \"#utility.yul\":1824:1830   */\n  0x00\n    /* \"#utility.yul\":1874:1875   */\n  0x08\n    /* \"#utility.yul\":1862:1872   */\n  dup4\n    /* \"#utility.yul\":1858:1876   */\n  mul\n    /* \"#utility.yul\":1897:1994   */\n  tag_60\n    /* \"#utility.yul\":1927:1993   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1916:1925   */\n  dup3\n    /* \"#utility.yul\":1897:1994   */\n  tag_27\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":2015:2054   */\n  tag_61\n    /* \"#utility.yul\":2045:2053   */\n  dup7\n    /* \"#utility.yul\":2034:2043   */\n  dup4\n    /* \"#utility.yul\":2015:2054   */\n  tag_27\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":2003:2054   */\n  swap6\n  pop\n    /* \"#utility.yul\":2087:2091   */\n  dup1\n    /* \"#utility.yul\":2083:2092   */\n  not\n    /* \"#utility.yul\":2076:2081   */\n  dup5\n    /* \"#utility.yul\":2072:2093   */\n  and\n    /* \"#utility.yul\":2063:2093   */\n  swap4\n  pop\n    /* \"#utility.yul\":2136:2140   */\n  dup1\n    /* \"#utility.yul\":2126:2134   */\n  dup7\n    /* \"#utility.yul\":2122:2141   */\n  and\n    /* \"#utility.yul\":2115:2120   */\n  dup5\n    /* \"#utility.yul\":2112:2142   */\n  or\n    /* \"#utility.yul\":2102:2142   */\n  swap3\n  pop\n    /* \"#utility.yul\":1831:2148   */\n  pop\n  pop\n    /* \"#utility.yul\":1755:2148   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2154:2231   */\ntag_29:\n    /* \"#utility.yul\":2191:2198   */\n  0x00\n    /* \"#utility.yul\":2220:2225   */\n  dup2\n    /* \"#utility.yul\":2209:2225   */\n  swap1\n  pop\n    /* \"#utility.yul\":2154:2231   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2237:2297   */\ntag_30:\n    /* \"#utility.yul\":2265:2268   */\n  0x00\n    /* \"#utility.yul\":2286:2291   */\n  dup2\n    /* \"#utility.yul\":2279:2291   */\n  swap1\n  pop\n    /* \"#utility.yul\":2237:2297   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2303:2445   */\ntag_31:\n    /* \"#utility.yul\":2353:2362   */\n  0x00\n    /* \"#utility.yul\":2386:2439   */\n  tag_65\n    /* \"#utility.yul\":2404:2438   */\n  tag_66\n    /* \"#utility.yul\":2413:2437   */\n  tag_67\n    /* \"#utility.yul\":2431:2436   */\n  dup5\n    /* \"#utility.yul\":2413:2437   */\n  tag_29\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":2404:2438   */\n  tag_30\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":2386:2439   */\n  tag_29\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":2373:2439   */\n  swap1\n  pop\n    /* \"#utility.yul\":2303:2445   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2451:2526   */\ntag_32:\n    /* \"#utility.yul\":2494:2497   */\n  0x00\n    /* \"#utility.yul\":2515:2520   */\n  dup2\n    /* \"#utility.yul\":2508:2520   */\n  swap1\n  pop\n    /* \"#utility.yul\":2451:2526   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2532:2801   */\ntag_33:\n    /* \"#utility.yul\":2642:2681   */\n  tag_70\n    /* \"#utility.yul\":2673:2680   */\n  dup4\n    /* \"#utility.yul\":2642:2681   */\n  tag_31\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":2703:2794   */\n  tag_71\n    /* \"#utility.yul\":2752:2793   */\n  tag_72\n    /* \"#utility.yul\":2776:2792   */\n  dup3\n    /* \"#utility.yul\":2752:2793   */\n  tag_32\n  jump\t// in\ntag_72:\n    /* \"#utility.yul\":2744:2750   */\n  dup5\n    /* \"#utility.yul\":2737:2741   */\n  dup5\n    /* \"#utility.yul\":2731:2742   */\n  sload\n    /* \"#utility.yul\":2703:2794   */\n  tag_28\n  jump\t// in\ntag_71:\n    /* \"#utility.yul\":2697:2701   */\n  dup3\n    /* \"#utility.yul\":2690:2795   */\n  sstore\n    /* \"#utility.yul\":2608:2801   */\n  pop\n    /* \"#utility.yul\":2532:2801   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2807:2880   */\ntag_34:\n    /* \"#utility.yul\":2852:2855   */\n  0x00\n    /* \"#utility.yul\":2807:2880   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":2886:3075   */\ntag_35:\n    /* \"#utility.yul\":2963:2995   */\n  tag_75\n  tag_34\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":3004:3069   */\n  tag_76\n    /* \"#utility.yul\":3062:3068   */\n  dup2\n    /* \"#utility.yul\":3054:3060   */\n  dup5\n    /* \"#utility.yul\":3048:3052   */\n  dup5\n    /* \"#utility.yul\":3004:3069   */\n  tag_33\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":2939:3075   */\n  pop\n    /* \"#utility.yul\":2886:3075   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3081:3267   */\ntag_36:\n    /* \"#utility.yul\":3141:3261   */\ntag_78:\n    /* \"#utility.yul\":3158:3161   */\n  dup2\n    /* \"#utility.yul\":3151:3156   */\n  dup2\n    /* \"#utility.yul\":3148:3162   */\n  lt\n    /* \"#utility.yul\":3141:3261   */\n  iszero\n  tag_80\n  jumpi\n    /* \"#utility.yul\":3212:3251   */\n  tag_81\n    /* \"#utility.yul\":3249:3250   */\n  0x00\n    /* \"#utility.yul\":3242:3247   */\n  dup3\n    /* \"#utility.yul\":3212:3251   */\n  tag_35\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":3185:3186   */\n  0x01\n    /* \"#utility.yul\":3178:3183   */\n  dup2\n    /* \"#utility.yul\":3174:3187   */\n  add\n    /* \"#utility.yul\":3165:3187   */\n  swap1\n  pop\n    /* \"#utility.yul\":3141:3261   */\n  jump(tag_78)\ntag_80:\n    /* \"#utility.yul\":3081:3267   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3273:3816   */\ntag_37:\n    /* \"#utility.yul\":3374:3376   */\n  0x1f\n    /* \"#utility.yul\":3369:3372   */\n  dup3\n    /* \"#utility.yul\":3366:3377   */\n  gt\n    /* \"#utility.yul\":3363:3809   */\n  iszero\n  tag_83\n  jumpi\n    /* \"#utility.yul\":3408:3446   */\n  tag_84\n    /* \"#utility.yul\":3440:3445   */\n  dup2\n    /* \"#utility.yul\":3408:3446   */\n  tag_25\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":3492:3521   */\n  tag_85\n    /* \"#utility.yul\":3510:3520   */\n  dup5\n    /* \"#utility.yul\":3492:3521   */\n  tag_26\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":3482:3490   */\n  dup2\n    /* \"#utility.yul\":3478:3522   */\n  add\n    /* \"#utility.yul\":3675:3677   */\n  0x20\n    /* \"#utility.yul\":3663:3673   */\n  dup6\n    /* \"#utility.yul\":3660:3678   */\n  lt\n    /* \"#utility.yul\":3657:3706   */\n  iszero\n  tag_86\n  jumpi\n    /* \"#utility.yul\":3696:3704   */\n  dup2\n    /* \"#utility.yul\":3681:3704   */\n  swap1\n  pop\n    /* \"#utility.yul\":3657:3706   */\ntag_86:\n    /* \"#utility.yul\":3719:3799   */\n  tag_87\n    /* \"#utility.yul\":3775:3797   */\n  tag_88\n    /* \"#utility.yul\":3793:3796   */\n  dup6\n    /* \"#utility.yul\":3775:3797   */\n  tag_26\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":3765:3773   */\n  dup4\n    /* \"#utility.yul\":3761:3798   */\n  add\n    /* \"#utility.yul\":3748:3759   */\n  dup3\n    /* \"#utility.yul\":3719:3799   */\n  tag_36\n  jump\t// in\ntag_87:\n    /* \"#utility.yul\":3378:3809   */\n  pop\n  pop\n    /* \"#utility.yul\":3363:3809   */\ntag_83:\n    /* \"#utility.yul\":3273:3816   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3822:3939   */\ntag_38:\n    /* \"#utility.yul\":3876:3884   */\n  0x00\n    /* \"#utility.yul\":3926:3931   */\n  dup3\n    /* \"#utility.yul\":3920:3924   */\n  dup3\n    /* \"#utility.yul\":3916:3932   */\n  shr\n    /* \"#utility.yul\":3895:3932   */\n  swap1\n  pop\n    /* \"#utility.yul\":3822:3939   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3945:4114   */\ntag_39:\n    /* \"#utility.yul\":3989:3995   */\n  0x00\n    /* \"#utility.yul\":4022:4073   */\n  tag_91\n    /* \"#utility.yul\":4070:4071   */\n  0x00\n    /* \"#utility.yul\":4066:4072   */\n  not\n    /* \"#utility.yul\":4058:4063   */\n  dup5\n    /* \"#utility.yul\":4055:4056   */\n  0x08\n    /* \"#utility.yul\":4051:4064   */\n  mul\n    /* \"#utility.yul\":4022:4073   */\n  tag_38\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":4018:4074   */\n  not\n    /* \"#utility.yul\":4103:4107   */\n  dup1\n    /* \"#utility.yul\":4097:4101   */\n  dup4\n    /* \"#utility.yul\":4093:4108   */\n  and\n    /* \"#utility.yul\":4083:4108   */\n  swap2\n  pop\n    /* \"#utility.yul\":3996:4114   */\n  pop\n    /* \"#utility.yul\":3945:4114   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4119:4414   */\ntag_40:\n    /* \"#utility.yul\":4195:4199   */\n  0x00\n    /* \"#utility.yul\":4341:4370   */\n  tag_93\n    /* \"#utility.yul\":4366:4369   */\n  dup4\n    /* \"#utility.yul\":4360:4364   */\n  dup4\n    /* \"#utility.yul\":4341:4370   */\n  tag_39\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":4333:4370   */\n  swap2\n  pop\n    /* \"#utility.yul\":4403:4406   */\n  dup3\n    /* \"#utility.yul\":4400:4401   */\n  0x02\n    /* \"#utility.yul\":4396:4407   */\n  mul\n    /* \"#utility.yul\":4390:4394   */\n  dup3\n    /* \"#utility.yul\":4387:4408   */\n  or\n    /* \"#utility.yul\":4379:4408   */\n  swap1\n  pop\n    /* \"#utility.yul\":4119:4414   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4419:5814   */\ntag_13:\n    /* \"#utility.yul\":4536:4573   */\n  tag_95\n    /* \"#utility.yul\":4569:4572   */\n  dup3\n    /* \"#utility.yul\":4536:4573   */\n  tag_21\n  jump\t// in\ntag_95:\n    /* \"#utility.yul\":4638:4656   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4630:4636   */\n  dup2\n    /* \"#utility.yul\":4627:4657   */\n  gt\n    /* \"#utility.yul\":4624:4680   */\n  iszero\n  tag_96\n  jumpi\n    /* \"#utility.yul\":4660:4678   */\n  tag_97\n  tag_22\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":4624:4680   */\ntag_96:\n    /* \"#utility.yul\":4704:4742   */\n  tag_98\n    /* \"#utility.yul\":4736:4740   */\n  dup3\n    /* \"#utility.yul\":4730:4741   */\n  sload\n    /* \"#utility.yul\":4704:4742   */\n  tag_24\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":4789:4856   */\n  tag_99\n    /* \"#utility.yul\":4849:4855   */\n  dup3\n    /* \"#utility.yul\":4841:4847   */\n  dup3\n    /* \"#utility.yul\":4835:4839   */\n  dup6\n    /* \"#utility.yul\":4789:4856   */\n  tag_37\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":4883:4884   */\n  0x00\n    /* \"#utility.yul\":4907:4911   */\n  0x20\n    /* \"#utility.yul\":4894:4911   */\n  swap1\n  pop\n    /* \"#utility.yul\":4939:4941   */\n  0x1f\n    /* \"#utility.yul\":4931:4937   */\n  dup4\n    /* \"#utility.yul\":4928:4942   */\n  gt\n    /* \"#utility.yul\":4956:4957   */\n  0x01\n    /* \"#utility.yul\":4951:5569   */\n  dup2\n  eq\n  tag_101\n  jumpi\n    /* \"#utility.yul\":5613:5614   */\n  0x00\n    /* \"#utility.yul\":5630:5636   */\n  dup5\n    /* \"#utility.yul\":5627:5704   */\n  iszero\n  tag_102\n  jumpi\n    /* \"#utility.yul\":5679:5688   */\n  dup3\n    /* \"#utility.yul\":5674:5677   */\n  dup8\n    /* \"#utility.yul\":5670:5689   */\n  add\n    /* \"#utility.yul\":5664:5690   */\n  mload\n    /* \"#utility.yul\":5655:5690   */\n  swap1\n  pop\n    /* \"#utility.yul\":5627:5704   */\ntag_102:\n    /* \"#utility.yul\":5730:5797   */\n  tag_103\n    /* \"#utility.yul\":5790:5796   */\n  dup6\n    /* \"#utility.yul\":5783:5788   */\n  dup3\n    /* \"#utility.yul\":5730:5797   */\n  tag_40\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":5724:5728   */\n  dup7\n    /* \"#utility.yul\":5717:5798   */\n  sstore\n    /* \"#utility.yul\":5586:5808   */\n  pop\n    /* \"#utility.yul\":4921:5808   */\n  jump(tag_100)\n    /* \"#utility.yul\":4951:5569   */\ntag_101:\n    /* \"#utility.yul\":5003:5007   */\n  0x1f\n    /* \"#utility.yul\":4999:5008   */\n  not\n    /* \"#utility.yul\":4991:4997   */\n  dup5\n    /* \"#utility.yul\":4987:5009   */\n  and\n    /* \"#utility.yul\":5037:5074   */\n  tag_104\n    /* \"#utility.yul\":5069:5073   */\n  dup7\n    /* \"#utility.yul\":5037:5074   */\n  tag_25\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":5096:5097   */\n  0x00\n    /* \"#utility.yul\":5110:5318   */\ntag_105:\n    /* \"#utility.yul\":5124:5131   */\n  dup3\n    /* \"#utility.yul\":5121:5122   */\n  dup2\n    /* \"#utility.yul\":5118:5132   */\n  lt\n    /* \"#utility.yul\":5110:5318   */\n  iszero\n  tag_107\n  jumpi\n    /* \"#utility.yul\":5203:5212   */\n  dup5\n    /* \"#utility.yul\":5198:5201   */\n  dup10\n    /* \"#utility.yul\":5194:5213   */\n  add\n    /* \"#utility.yul\":5188:5214   */\n  mload\n    /* \"#utility.yul\":5180:5186   */\n  dup3\n    /* \"#utility.yul\":5173:5215   */\n  sstore\n    /* \"#utility.yul\":5254:5255   */\n  0x01\n    /* \"#utility.yul\":5246:5252   */\n  dup3\n    /* \"#utility.yul\":5242:5256   */\n  add\n    /* \"#utility.yul\":5232:5256   */\n  swap2\n  pop\n    /* \"#utility.yul\":5301:5303   */\n  0x20\n    /* \"#utility.yul\":5290:5299   */\n  dup6\n    /* \"#utility.yul\":5286:5304   */\n  add\n    /* \"#utility.yul\":5273:5304   */\n  swap5\n  pop\n    /* \"#utility.yul\":5147:5151   */\n  0x20\n    /* \"#utility.yul\":5144:5145   */\n  dup2\n    /* \"#utility.yul\":5140:5152   */\n  add\n    /* \"#utility.yul\":5135:5152   */\n  swap1\n  pop\n    /* \"#utility.yul\":5110:5318   */\n  jump(tag_105)\ntag_107:\n    /* \"#utility.yul\":5346:5352   */\n  dup7\n    /* \"#utility.yul\":5337:5344   */\n  dup4\n    /* \"#utility.yul\":5334:5353   */\n  lt\n    /* \"#utility.yul\":5331:5510   */\n  iszero\n  tag_108\n  jumpi\n    /* \"#utility.yul\":5404:5413   */\n  dup5\n    /* \"#utility.yul\":5399:5402   */\n  dup10\n    /* \"#utility.yul\":5395:5414   */\n  add\n    /* \"#utility.yul\":5389:5415   */\n  mload\n    /* \"#utility.yul\":5447:5495   */\n  tag_109\n    /* \"#utility.yul\":5489:5493   */\n  0x1f\n    /* \"#utility.yul\":5481:5487   */\n  dup10\n    /* \"#utility.yul\":5477:5494   */\n  and\n    /* \"#utility.yul\":5466:5475   */\n  dup3\n    /* \"#utility.yul\":5447:5495   */\n  tag_39\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":5439:5445   */\n  dup4\n    /* \"#utility.yul\":5432:5496   */\n  sstore\n    /* \"#utility.yul\":5354:5510   */\n  pop\n    /* \"#utility.yul\":5331:5510   */\ntag_108:\n    /* \"#utility.yul\":5556:5557   */\n  0x01\n    /* \"#utility.yul\":5552:5553   */\n  0x02\n    /* \"#utility.yul\":5544:5550   */\n  dup9\n    /* \"#utility.yul\":5540:5554   */\n  mul\n    /* \"#utility.yul\":5536:5558   */\n  add\n    /* \"#utility.yul\":5530:5534   */\n  dup9\n    /* \"#utility.yul\":5523:5559   */\n  sstore\n    /* \"#utility.yul\":4958:5569   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4921:5808   */\ntag_100:\n  pop\n    /* \"#utility.yul\":4511:5814   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4419:5814   */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/MyToken.sol\":289:1015  contract ERC721Mint is Ownable, ERC5169, ERC721Enumerable {... */\ntag_16:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/MyToken.sol\":289:1015  contract ERC721Mint is Ownable, ERC5169, ERC721Enumerable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_25\n      jumpi\n      dup1\n      0xa22cb465\n      gt\n      tag_26\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xe3d61eb3\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_24\n      jumpi\n      jump(tag_2)\n    tag_26:\n      dup1\n      0x70a08231\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xa1448194\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_25:\n      dup1\n      0x23b872dd\n      gt\n      tag_27\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x2f745c59\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x4bb30912\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x4f6ccce7\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x6352211e\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_27:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/MyToken.sol\":447:730  function supportsInterface(bytes4 interfaceId)... */\n    tag_3:\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2365:2454  function name() public view virtual returns (string memory) {... */\n    tag_4:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3497:3651  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_5:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3323:3436  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_6:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n    tag_44:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2062:2164  function totalSupply() public view virtual returns (uint256) {... */\n    tag_7:\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4143:4721  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_8:\n      tag_52\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_53\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      tag_55\n      jump\t// in\n    tag_52:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1736:1991  function tokenOfOwnerByIndex(address owner, uint256 index) public view virtual returns (uint256) {... */\n    tag_9:\n      tag_56\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_57\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_57:\n      tag_58\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      tag_59\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4787:4919  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_10:\n      tag_60\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_61\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_61:\n      tag_62\n      jump\t// in\n    tag_60:\n      stop\n        /* \"stl-contracts/ERC/ERC5169.sol\":233:337  function scriptURI() external view override returns (string[] memory) {... */\n    tag_11:\n      tag_63\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      tag_65\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2236:2462  function tokenByIndex(uint256 index) public view virtual returns (uint256) {... */\n    tag_12:\n      tag_67\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_68\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_68:\n      tag_69\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      tag_70\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2185:2303  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_13:\n      tag_71\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_72\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_72:\n      tag_73\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      tag_74\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1920:2128  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_14:\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_76\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n      tag_78\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      tag_79\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_15:\n      tag_80\n      tag_81\n      jump\t// in\n    tag_80:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_16:\n      tag_82\n      tag_83\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      tag_84\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2518:2611  function symbol() public view virtual returns (string memory) {... */\n    tag_17:\n      tag_85\n      tag_86\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      tag_87\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MyToken.sol\":910:1013  function safeMint(address to, uint256 tokenId) public onlyOwner {... */\n    tag_18:\n      tag_88\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_89\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_89:\n      tag_90\n      jump\t// in\n    tag_88:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3718:3862  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_19:\n      tag_91\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_92\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_92:\n      tag_94\n      jump\t// in\n    tag_91:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4985:5193  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_20:\n      tag_95\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_96\n      swap2\n      swap1\n      tag_97\n      jump\t// in\n    tag_96:\n      tag_98\n      jump\t// in\n    tag_95:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2677:2932  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n    tag_21:\n      tag_99\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_100\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_100:\n      tag_101\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      tag_102\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_102:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"stl-contracts/ERC/ERC5169.sol\":343:542  function setScriptURI(string[] memory newScriptURI) external override {... */\n    tag_22:\n      tag_103\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_104\n      swap2\n      swap1\n      tag_105\n      jump\t// in\n    tag_104:\n      tag_106\n      jump\t// in\n    tag_103:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3928:4081  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_23:\n      tag_107\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_108\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_108:\n      tag_110\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      tag_111\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_111:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_24:\n      tag_112\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_113\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_113:\n      tag_114\n      jump\t// in\n    tag_112:\n      stop\n        /* \"contracts/MyToken.sol\":447:730  function supportsInterface(bytes4 interfaceId)... */\n    tag_31:\n        /* \"contracts/MyToken.sol\":583:587  bool */\n      0x00\n        /* \"contracts/MyToken.sol\":622:669  ERC721Enumerable.supportsInterface(interfaceId) */\n      tag_116\n        /* \"contracts/MyToken.sol\":657:668  interfaceId */\n      dup3\n        /* \"contracts/MyToken.sol\":622:656  ERC721Enumerable.supportsInterface */\n      tag_117\n        /* \"contracts/MyToken.sol\":622:669  ERC721Enumerable.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_116:\n        /* \"contracts/MyToken.sol\":622:723  ERC721Enumerable.supportsInterface(interfaceId) ||... */\n      dup1\n      tag_118\n      jumpi\n      pop\n        /* \"contracts/MyToken.sol\":685:723  ERC5169.supportsInterface(interfaceId) */\n      tag_119\n        /* \"contracts/MyToken.sol\":711:722  interfaceId */\n      dup3\n        /* \"contracts/MyToken.sol\":685:710  ERC5169.supportsInterface */\n      tag_120\n        /* \"contracts/MyToken.sol\":685:723  ERC5169.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_119:\n        /* \"contracts/MyToken.sol\":622:723  ERC721Enumerable.supportsInterface(interfaceId) ||... */\n    tag_118:\n        /* \"contracts/MyToken.sol\":603:723  return... */\n      swap1\n      pop\n        /* \"contracts/MyToken.sol\":447:730  function supportsInterface(bytes4 interfaceId)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2365:2454  function name() public view virtual returns (string memory) {... */\n    tag_35:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2410:2423  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2442:2447  _name */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2435:2447  return _name */\n      dup1\n      sload\n      tag_122\n      swap1\n      tag_123\n      jump\t// in\n    tag_122:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_124\n      swap1\n      tag_123\n      jump\t// in\n    tag_124:\n      dup1\n      iszero\n      tag_125\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_126\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_125)\n    tag_126:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_127:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_127\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_125:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2365:2454  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3497:3651  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_41:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3564:3571  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3583:3605  _requireOwned(tokenId) */\n      tag_129\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3597:3604  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3583:3596  _requireOwned */\n      tag_130\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3583:3605  _requireOwned(tokenId) */\n      jump\t// in\n    tag_129:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3623:3644  _getApproved(tokenId) */\n      tag_131\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3636:3643  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3623:3635  _getApproved */\n      tag_132\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3623:3644  _getApproved(tokenId) */\n      jump\t// in\n    tag_131:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3616:3644  return _getApproved(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3497:3651  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3323:3436  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_47:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3394:3429  _approve(to, tokenId, _msgSender()) */\n      tag_134\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3403:3405  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3407:3414  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3416:3428  _msgSender() */\n      tag_135\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3416:3426  _msgSender */\n      tag_136\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3416:3428  _msgSender() */\n      jump\t// in\n    tag_135:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3394:3402  _approve */\n      tag_137\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3394:3429  _approve(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_134:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3323:3436  function approve(address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2062:2164  function totalSupply() public view virtual returns (uint256) {... */\n    tag_49:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2114:2121  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2140:2150  _allTokens */\n      0x0a\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2140:2157  _allTokens.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2133:2157  return _allTokens.length */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2062:2164  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4143:4721  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_55:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4251:4252  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4237:4253  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4237:4239  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4237:4253  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4233:4320  if (to == address(0)) {... */\n      tag_140\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4306:4307  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4276:4309  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_141\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_141:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4233:4320  if (to == address(0)) {... */\n    tag_140:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4538:4559  address previousOwner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4562:4596  _update(to, tokenId, _msgSender()) */\n      tag_142\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4570:4572  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4574:4581  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4583:4595  _msgSender() */\n      tag_143\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4583:4593  _msgSender */\n      tag_136\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4583:4595  _msgSender() */\n      jump\t// in\n    tag_143:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4562:4569  _update */\n      tag_144\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4562:4596  _update(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_142:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4538:4596  address previousOwner = _update(to, tokenId, _msgSender()) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4627:4631  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4610:4631  previousOwner != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4610:4623  previousOwner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4610:4631  previousOwner != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4606:4715  if (previousOwner != from) {... */\n      tag_145\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4675:4679  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4681:4688  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4690:4703  previousOwner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4654:4704  ERC721IncorrectOwner(from, tokenId, previousOwner) */\n      mload(0x40)\n      0x64283d7b00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_146\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_147\n      jump\t// in\n    tag_146:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4606:4715  if (previousOwner != from) {... */\n    tag_145:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4223:4721  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4143:4721  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1736:1991  function tokenOfOwnerByIndex(address owner, uint256 index) public view virtual returns (uint256) {... */\n    tag_58:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1824:1831  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1856:1872  balanceOf(owner) */\n      tag_149\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1866:1871  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1856:1865  balanceOf */\n      tag_78\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1856:1872  balanceOf(owner) */\n      jump\t// in\n    tag_149:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1847:1852  index */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1847:1872  index >= balanceOf(owner) */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1843:1942  if (index >= balanceOf(owner)) {... */\n      tag_150\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1918:1923  owner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1925:1930  index */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1895:1931  ERC721OutOfBoundsIndex(owner, index) */\n      mload(0x40)\n      0xa57d13dc00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_151\n      swap3\n      swap2\n      swap1\n      tag_152\n      jump\t// in\n    tag_151:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1843:1942  if (index >= balanceOf(owner)) {... */\n    tag_150:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1958:1970  _ownedTokens */\n      0x08\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1958:1977  _ownedTokens[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1971:1976  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1958:1977  _ownedTokens[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1958:1984  _ownedTokens[owner][index] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1978:1983  index */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1958:1984  _ownedTokens[owner][index] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1951:1984  return _ownedTokens[owner][index] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1736:1991  function tokenOfOwnerByIndex(address owner, uint256 index) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4787:4919  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_62:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4912  safeTransferFrom(from, to, tokenId, \"\") */\n      tag_154\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4890:4894  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4896:4898  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4900:4907  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4912  safeTransferFrom(from, to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4889  safeTransferFrom */\n      tag_98\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4912  safeTransferFrom(from, to, tokenId, \"\") */\n      jump\t// in\n    tag_154:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4787:4919  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"stl-contracts/ERC/ERC5169.sol\":233:337  function scriptURI() external view override returns (string[] memory) {... */\n    tag_64:\n        /* \"stl-contracts/ERC/ERC5169.sol\":286:301  string[] memory */\n      0x60\n        /* \"stl-contracts/ERC/ERC5169.sol\":320:330  _scriptURI */\n      0x01\n        /* \"stl-contracts/ERC/ERC5169.sol\":313:330  return _scriptURI */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      swap1\n    tag_156:\n      dup3\n      dup3\n      lt\n      iszero\n      tag_157\n      jumpi\n      dup4\n      dup3\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      dup1\n      sload\n      tag_159\n      swap1\n      tag_123\n      jump\t// in\n    tag_159:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_160\n      swap1\n      tag_123\n      jump\t// in\n    tag_160:\n      dup1\n      iszero\n      tag_161\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_162\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_161)\n    tag_162:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_163:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_163\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_161:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      add\n      swap1\n      jump(tag_156)\n    tag_157:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"stl-contracts/ERC/ERC5169.sol\":233:337  function scriptURI() external view override returns (string[] memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2236:2462  function tokenByIndex(uint256 index) public view virtual returns (uint256) {... */\n    tag_69:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2302:2309  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2334:2347  totalSupply() */\n      tag_165\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2334:2345  totalSupply */\n      tag_49\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2334:2347  totalSupply() */\n      jump\t// in\n    tag_165:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2325:2330  index */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2325:2347  index >= totalSupply() */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2321:2422  if (index >= totalSupply()) {... */\n      tag_166\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2401:2402  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2405:2410  index */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2370:2411  ERC721OutOfBoundsIndex(address(0), index) */\n      mload(0x40)\n      0xa57d13dc00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_167\n      swap3\n      swap2\n      swap1\n      tag_152\n      jump\t// in\n    tag_167:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2321:2422  if (index >= totalSupply()) {... */\n    tag_166:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2438:2448  _allTokens */\n      0x0a\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2449:2454  index */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2438:2455  _allTokens[index] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_168\n      jumpi\n      tag_169\n      tag_170\n      jump\t// in\n    tag_169:\n    tag_168:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2431:2455  return _allTokens[index] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2236:2462  function tokenByIndex(uint256 index) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2185:2303  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_73:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2248:2255  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2274:2296  _requireOwned(tokenId) */\n      tag_173\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2288:2295  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2274:2287  _requireOwned */\n      tag_130\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2274:2296  _requireOwned(tokenId) */\n      jump\t// in\n    tag_173:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2267:2296  return _requireOwned(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2185:2303  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1920:2128  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_78:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1983:1990  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2023:2024  0 */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2006:2025  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2006:2011  owner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2006:2025  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2002:2089  if (owner == address(0)) {... */\n      tag_175\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2075:2076  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2048:2078  ERC721InvalidOwner(address(0)) */\n      mload(0x40)\n      0x89c62b6400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_176\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_176:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2002:2089  if (owner == address(0)) {... */\n    tag_175:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2105:2114  _balances */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2105:2121  _balances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2115:2120  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2105:2121  _balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2098:2121  return _balances[owner] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1920:2128  function balanceOf(address owner) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_81:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_178\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_179\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_178:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_181\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_182\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_181:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_83:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2518:2611  function symbol() public view virtual returns (string memory) {... */\n    tag_86:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2565:2578  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2597:2604  _symbol */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2590:2604  return _symbol */\n      dup1\n      sload\n      tag_185\n      swap1\n      tag_123\n      jump\t// in\n    tag_185:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_186\n      swap1\n      tag_123\n      jump\t// in\n    tag_186:\n      dup1\n      iszero\n      tag_187\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_188\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_187)\n    tag_188:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_189:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_189\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_187:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2518:2611  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/MyToken.sol\":910:1013  function safeMint(address to, uint256 tokenId) public onlyOwner {... */\n    tag_90:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_191\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_179\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_191:\n        /* \"contracts/MyToken.sol\":984:1006  _safeMint(to, tokenId) */\n      tag_193\n        /* \"contracts/MyToken.sol\":994:996  to */\n      dup3\n        /* \"contracts/MyToken.sol\":998:1005  tokenId */\n      dup3\n        /* \"contracts/MyToken.sol\":984:993  _safeMint */\n      tag_194\n        /* \"contracts/MyToken.sol\":984:1006  _safeMint(to, tokenId) */\n      jump\t// in\n    tag_193:\n        /* \"contracts/MyToken.sol\":910:1013  function safeMint(address to, uint256 tokenId) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3718:3862  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_94:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3803:3855  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_196\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3822:3834  _msgSender() */\n      tag_197\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3822:3832  _msgSender */\n      tag_136\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3822:3834  _msgSender() */\n      jump\t// in\n    tag_197:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3836:3844  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3846:3854  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3803:3821  _setApprovalForAll */\n      tag_198\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3803:3855  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_196:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3718:3862  function setApprovalForAll(address operator, bool approved) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4985:5193  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_98:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5098:5129  transferFrom(from, to, tokenId) */\n      tag_200\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5111:5115  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5117:5119  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5121:5128  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5098:5110  transferFrom */\n      tag_55\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5098:5129  transferFrom(from, to, tokenId) */\n      jump\t// in\n    tag_200:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5139:5186  _checkOnERC721Received(from, to, tokenId, data) */\n      tag_201\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5162:5166  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5168:5170  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5172:5179  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5181:5185  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5139:5161  _checkOnERC721Received */\n      tag_202\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5139:5186  _checkOnERC721Received(from, to, tokenId, data) */\n      jump\t// in\n    tag_201:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4985:5193  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2677:2932  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n    tag_101:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2741:2754  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2766:2788  _requireOwned(tokenId) */\n      tag_204\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2780:2787  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2766:2779  _requireOwned */\n      tag_130\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2766:2788  _requireOwned(tokenId) */\n      jump\t// in\n    tag_204:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2799:2820  string memory baseURI */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2823:2833  _baseURI() */\n      tag_205\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2823:2831  _baseURI */\n      tag_206\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2823:2833  _baseURI() */\n      jump\t// in\n    tag_205:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2799:2833  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2874:2875  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2856:2863  baseURI */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2850:2871  bytes(baseURI).length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2850:2875  bytes(baseURI).length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2850:2925  bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n      tag_207\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_208)\n    tag_207:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2892:2899  baseURI */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2901:2919  tokenId.toString() */\n      tag_209\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2901:2908  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2901:2917  tokenId.toString */\n      tag_210\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2901:2919  tokenId.toString() */\n      jump\t// in\n    tag_209:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2878:2920  string.concat(baseURI, tokenId.toString()) */\n      add(0x20, mload(0x40))\n      tag_211\n      swap3\n      swap2\n      swap1\n      tag_212\n      jump\t// in\n    tag_211:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2850:2925  bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n    tag_208:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2843:2925  return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2677:2932  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"stl-contracts/ERC/ERC5169.sol\":343:542  function setScriptURI(string[] memory newScriptURI) external override {... */\n    tag_106:\n        /* \"stl-contracts/ERC/ERC5169.sol\":423:457  _authorizeSetScripts(newScriptURI) */\n      tag_214\n        /* \"stl-contracts/ERC/ERC5169.sol\":444:456  newScriptURI */\n      dup2\n        /* \"stl-contracts/ERC/ERC5169.sol\":423:443  _authorizeSetScripts */\n      tag_215\n        /* \"stl-contracts/ERC/ERC5169.sol\":423:457  _authorizeSetScripts(newScriptURI) */\n      jump\t// in\n    tag_214:\n        /* \"stl-contracts/ERC/ERC5169.sol\":481:493  newScriptURI */\n      dup1\n        /* \"stl-contracts/ERC/ERC5169.sol\":468:478  _scriptURI */\n      0x01\n        /* \"stl-contracts/ERC/ERC5169.sol\":468:493  _scriptURI = newScriptURI */\n      swap1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      tag_216\n      swap3\n      swap2\n      swap1\n      tag_217\n      jump\t// in\n    tag_216:\n      pop\n        /* \"stl-contracts/ERC/ERC5169.sol\":509:535  ScriptUpdate(newScriptURI) */\n      0x9538911740e5519a40db77fb5f637de0d56cdd804318d81ae270cc24fbd8479e\n        /* \"stl-contracts/ERC/ERC5169.sol\":522:534  newScriptURI */\n      dup2\n        /* \"stl-contracts/ERC/ERC5169.sol\":509:535  ScriptUpdate(newScriptURI) */\n      mload(0x40)\n      tag_218\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_218:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"stl-contracts/ERC/ERC5169.sol\":343:542  function setScriptURI(string[] memory newScriptURI) external override {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3928:4081  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_110:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4016:4020  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4057  _operatorApprovals */\n      0x07\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4064  _operatorApprovals[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4058:4063  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4064  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4074  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4065:4073  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4074  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4032:4074  return _operatorApprovals[owner][operator] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3928:4081  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_114:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_221\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_179\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_221:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_223\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_224\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_224:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_223:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_225\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_182\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_225:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1435:1657  function supportsInterface(bytes4 interfaceId) public view virtual override(IERC165, ERC721) returns (bool) {... */\n    tag_117:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1537:1541  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1575:1610  type(IERC721Enumerable).interfaceId */\n      0x780e9d6300000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1560:1610  interfaceId == type(IERC721Enumerable).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1560:1571  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1560:1610  interfaceId == type(IERC721Enumerable).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1560:1650  interfaceId == type(IERC721Enumerable).interfaceId || super.supportsInterface(interfaceId) */\n      dup1\n      tag_227\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1614:1650  super.supportsInterface(interfaceId) */\n      tag_228\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1638:1649  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1614:1637  super.supportsInterface */\n      tag_229\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1614:1650  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_228:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1560:1650  interfaceId == type(IERC721Enumerable).interfaceId || super.supportsInterface(interfaceId) */\n    tag_227:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1553:1650  return interfaceId == type(IERC721Enumerable).interfaceId || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1435:1657  function supportsInterface(bytes4 interfaceId) public view virtual override(IERC165, ERC721) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"stl-contracts/ERC/ERC5169.sol\":548:695  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_120:\n        /* \"stl-contracts/ERC/ERC5169.sol\":624:628  bool */\n      0x00\n        /* \"stl-contracts/ERC/ERC5169.sol\":662:688  type(IERC5169).interfaceId */\n      0xa86517a100000000000000000000000000000000000000000000000000000000\n        /* \"stl-contracts/ERC/ERC5169.sol\":647:688  interfaceId == type(IERC5169).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"stl-contracts/ERC/ERC5169.sol\":647:658  interfaceId */\n      dup3\n        /* \"stl-contracts/ERC/ERC5169.sol\":647:688  interfaceId == type(IERC5169).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"stl-contracts/ERC/ERC5169.sol\":640:688  return interfaceId == type(IERC5169).interfaceId */\n      swap1\n      pop\n        /* \"stl-contracts/ERC/ERC5169.sol\":548:695  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16138:16379  function _requireOwned(uint256 tokenId) internal view returns (address) {... */\n    tag_130:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16201:16208  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16220:16233  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16236:16253  _ownerOf(tokenId) */\n      tag_232\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16245:16252  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16236:16244  _ownerOf */\n      tag_233\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16236:16253  _ownerOf(tokenId) */\n      jump\t// in\n    tag_232:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16220:16253  address owner = _ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16284:16285  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16267:16286  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16267:16272  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16267:16286  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16263:16351  if (owner == address(0)) {... */\n      tag_234\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16332:16339  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16309:16340  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      0x7e27328900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_235\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_235:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16263:16351  if (owner == address(0)) {... */\n    tag_234:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16367:16372  owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16360:16372  return owner */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16138:16379  function _requireOwned(uint256 tokenId) internal view returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5938:6065  function _getApproved(uint256 tokenId) internal view virtual returns (address) {... */\n    tag_132:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6008:6015  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6049  _tokenApprovals */\n      0x06\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6058  _tokenApprovals[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6050:6057  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6058  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6027:6058  return _tokenApprovals[tokenId] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5938:6065  function _getApproved(uint256 tokenId) internal view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_136:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14418:14538  function _approve(address to, uint256 tokenId, address auth) internal {... */\n    tag_137:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14498:14531  _approve(to, tokenId, auth, true) */\n      tag_239\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14507:14509  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14511:14518  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14520:14524  auth */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14526:14530  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14498:14506  _approve */\n      tag_240\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14498:14531  _approve(to, tokenId, auth, true) */\n      jump\t// in\n    tag_239:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14418:14538  function _approve(address to, uint256 tokenId, address auth) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2518:3143  function _update(address to, uint256 tokenId, address auth) internal virtual override returns (address) {... */\n    tag_144:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2613:2620  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2632:2653  address previousOwner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2656:2688  super._update(to, tokenId, auth) */\n      tag_242\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2670:2672  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2674:2681  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2683:2687  auth */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2656:2669  super._update */\n      tag_243\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2656:2688  super._update(to, tokenId, auth) */\n      jump\t// in\n    tag_242:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2632:2688  address previousOwner = super._update(to, tokenId, auth) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2728:2729  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2703:2730  previousOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2703:2716  previousOwner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2703:2730  previousOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2699:2909  if (previousOwner == address(0)) {... */\n      tag_244\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2746:2786  _addTokenToAllTokensEnumeration(tokenId) */\n      tag_245\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2778:2785  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2746:2777  _addTokenToAllTokensEnumeration */\n      tag_246\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2746:2786  _addTokenToAllTokensEnumeration(tokenId) */\n      jump\t// in\n    tag_245:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2699:2909  if (previousOwner == address(0)) {... */\n      jump(tag_247)\n    tag_244:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2824:2826  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2807:2826  previousOwner != to */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2807:2820  previousOwner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2807:2826  previousOwner != to */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2803:2909  if (previousOwner != to) {... */\n      tag_248\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2842:2898  _removeTokenFromOwnerEnumeration(previousOwner, tokenId) */\n      tag_249\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2875:2888  previousOwner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2890:2897  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2842:2874  _removeTokenFromOwnerEnumeration */\n      tag_250\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2842:2898  _removeTokenFromOwnerEnumeration(previousOwner, tokenId) */\n      jump\t// in\n    tag_249:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2803:2909  if (previousOwner != to) {... */\n    tag_248:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2699:2909  if (previousOwner == address(0)) {... */\n    tag_247:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2936:2937  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2922:2938  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2922:2924  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2922:2938  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2918:3106  if (to == address(0)) {... */\n      tag_251\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2954:2999  _removeTokenFromAllTokensEnumeration(tokenId) */\n      tag_252\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2991:2998  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2954:2990  _removeTokenFromAllTokensEnumeration */\n      tag_253\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2954:2999  _removeTokenFromAllTokensEnumeration(tokenId) */\n      jump\t// in\n    tag_252:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2918:3106  if (to == address(0)) {... */\n      jump(tag_254)\n    tag_251:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3037:3039  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3020:3039  previousOwner != to */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3020:3033  previousOwner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3020:3039  previousOwner != to */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3016:3106  if (previousOwner != to) {... */\n      tag_255\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3055:3095  _addTokenToOwnerEnumeration(to, tokenId) */\n      tag_256\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3083:3085  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3087:3094  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3055:3082  _addTokenToOwnerEnumeration */\n      tag_257\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3055:3095  _addTokenToOwnerEnumeration(to, tokenId) */\n      jump\t// in\n    tag_256:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3016:3106  if (previousOwner != to) {... */\n    tag_255:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2918:3106  if (to == address(0)) {... */\n    tag_254:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3123:3136  previousOwner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3116:3136  return previousOwner */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2518:3143  function _update(address to, uint256 tokenId, address auth) internal virtual override returns (address) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_179:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_259\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_136\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_259:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_260\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_83\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_260:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_261\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_262\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_136\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_262:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_263\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_263:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_261:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_182:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10633:10733  function _safeMint(address to, uint256 tokenId) internal {... */\n    tag_194:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10700:10726  _safeMint(to, tokenId, \"\") */\n      tag_266\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10710:10712  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10714:10721  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10700:10726  _safeMint(to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10700:10709  _safeMint */\n      tag_267\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10700:10726  _safeMint(to, tokenId, \"\") */\n      jump\t// in\n    tag_266:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10633:10733  function _safeMint(address to, uint256 tokenId) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15591:15903  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n    tag_198:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15718:15719  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15698:15720  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15698:15706  operator */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15698:15720  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15694:15785  if (operator == address(0)) {... */\n      tag_269\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15765:15773  operator */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15743:15774  ERC721InvalidOperator(operator) */\n      mload(0x40)\n      0x5b08ba1800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_270\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_270:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15694:15785  if (operator == address(0)) {... */\n    tag_269:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15832:15840  approved */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15812  _operatorApprovals */\n      0x07\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15819  _operatorApprovals[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15813:15818  owner */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15819  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15829  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15820:15828  operator */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15829  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15840  _operatorApprovals[owner][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15877:15885  operator */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15855:15896  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15870:15875  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15855:15896  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15887:15895  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15855:15896  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      tag_271\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_271:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15591:15903  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16918:17700  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {... */\n    tag_202:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17051:17052  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17034:17036  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17034:17048  to.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17034:17052  to.code.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17030:17694  if (to.code.length > 0) {... */\n      iszero\n      tag_273\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17088:17090  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17072:17108  IERC721Receiver(to).onERC721Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x150b7a02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17109:17121  _msgSender() */\n      tag_274\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17109:17119  _msgSender */\n      tag_136\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17109:17121  _msgSender() */\n      jump\t// in\n    tag_274:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17123:17127  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17129:17136  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17138:17142  data */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17072:17143  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_275\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_276\n      jump\t// in\n    tag_275:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_277\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_278\n      swap2\n      swap1\n      tag_279\n      jump\t// in\n    tag_278:\n      0x01\n    tag_277:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17068:17684  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n      tag_280\n      jumpi\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_285\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_284)\n    tag_285:\n      0x60\n      swap2\n      pop\n    tag_284:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17398:17399  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17381:17387  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17381:17394  reason.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17381:17399  reason.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17377:17670  if (reason.length == 0) {... */\n      tag_286\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17452:17454  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17430:17455  ERC721InvalidReceiver(to) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_287\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_287:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17377:17670  if (reason.length == 0) {... */\n    tag_286:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17622:17628  reason */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17616:17629  mload(reason) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17607:17613  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17603:17605  32 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17599:17614  add(32, reason) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17592:17630  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17068:17684  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n    tag_280:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17200:17241  IERC721Receiver.onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17190:17241  retval != IERC721Receiver.onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17190:17196  retval */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17190:17241  retval != IERC721Receiver.onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17186:17316  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n      tag_290\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17294:17296  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17272:17297  ERC721InvalidReceiver(to) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_291\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_291:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17186:17316  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n    tag_290:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17144:17330  returns (bytes4 retval) {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17030:17694  if (to.code.length > 0) {... */\n    tag_273:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16918:17700  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3174:3266  function _baseURI() internal view virtual returns (string memory) {... */\n    tag_206:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3225:3238  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3250:3259  return \"\" */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3174:3266  function _baseURI() internal view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":637:1335  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_210:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":693:706  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":742:756  uint256 length */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":779:780  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:776  Math.log10(value) */\n      tag_294\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":770:775  value */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:769  Math.log10 */\n      tag_295\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:776  Math.log10(value) */\n      jump\t// in\n    tag_294:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:780  Math.log10(value) + 1 */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":742:780  uint256 length = Math.log10(value) + 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":794:814  string memory buffer */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":828:834  length */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":817:835  new string(length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_296\n      jumpi\n      tag_297\n      tag_298\n      jump\t// in\n    tag_297:\n    tag_296:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_299\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_299:\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":794:835  string memory buffer = new string(length) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":849:860  uint256 ptr */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":975:981  length */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":971:973  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":967:982  add(32, length) */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":959:965  buffer */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":955:983  add(buffer, add(32, length)) */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":948:983  ptr := add(buffer, add(32, length)) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n    tag_300:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1017:1021  true */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n      iszero\n      tag_301\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1041:1046  ptr-- */\n      dup1\n      dup1\n      0x01\n      swap1\n      sub\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1180:1190  HEX_DIGITS */\n      0x3031323334353637383961626364656600000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1175:1177  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1168:1173  value */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1164:1178  mod(value, 10) */\n      mod\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1159:1191  byte(mod(value, 10), HEX_DIGITS) */\n      byte\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1154:1157  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1146:1192  mstore8(ptr, byte(mod(value, 10), HEX_DIGITS)) */\n      mstore8\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1236:1238  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1227:1238  value /= 10 */\n      dup6\n      dup2\n      tag_302\n      jumpi\n      tag_303\n      tag_304\n      jump\t// in\n    tag_303:\n    tag_302:\n      div\n      swap5\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1269:1270  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1260:1265  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1260:1270  value == 0 */\n      sub\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n      tag_300\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1256:1277  if (value == 0) break */\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n    tag_301:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1312:1318  buffer */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1305:1318  return buffer */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":637:1335  function toString(uint256 value) internal pure returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/MyToken.sol\":777:904  function _authorizeSetScripts(string[] memory)... */\n    tag_215:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_307\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_179\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_307:\n        /* \"contracts/MyToken.sol\":777:904  function _authorizeSetScripts(string[] memory)... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1561:1861  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_229:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1663:1667  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1713:1738  type(IERC721).interfaceId */\n      0x80ac58cd00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1738  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1709  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1738  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1802  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_310\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1769:1802  type(IERC721Metadata).interfaceId */\n      0x5b5e139f00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1754:1802  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1754:1765  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1754:1802  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1802  interfaceId == type(IERC721).interfaceId ||... */\n    tag_310:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1854  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_311\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1818:1854  super.supportsInterface(interfaceId) */\n      tag_312\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1842:1853  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1818:1841  super.supportsInterface */\n      tag_313\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1818:1854  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_312:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1854  interfaceId == type(IERC721).interfaceId ||... */\n    tag_311:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1679:1854  return... */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1561:1861  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5707:5822  function _ownerOf(uint256 tokenId) internal view virtual returns (address) {... */\n    tag_233:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5773:5780  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5806  _owners */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5815  _owners[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5807:5814  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5815  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5792:5815  return _owners[tokenId] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5707:5822  function _ownerOf(uint256 tokenId) internal view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14720:15382  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n    tag_240:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14880:14889  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14880:14911  emitEvent || auth != address(0) */\n      dup1\n      tag_316\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14909:14910  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14893:14911  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14893:14897  auth */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14893:14911  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14880:14911  emitEvent || auth != address(0) */\n    tag_316:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14876:15336  if (emitEvent || auth != address(0)) {... */\n      iszero\n      tag_317\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14927:14940  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14943:14965  _requireOwned(tokenId) */\n      tag_318\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14957:14964  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14943:14956  _requireOwned */\n      tag_130\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14943:14965  _requireOwned(tokenId) */\n      jump\t// in\n    tag_318:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14927:14965  address owner = _requireOwned(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15109:15110  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15111  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15097  auth */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15111  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15128  auth != address(0) && owner != auth */\n      dup1\n      iszero\n      tag_319\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15124:15128  auth */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15115:15128  owner != auth */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15115:15120  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15115:15128  owner != auth */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15128  auth != address(0) && owner != auth */\n    tag_319:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15162  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n      dup1\n      iszero\n      tag_320\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15133:15162  isApprovedForAll(owner, auth) */\n      tag_321\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15150:15155  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15157:15161  auth */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15133:15149  isApprovedForAll */\n      tag_110\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15133:15162  isApprovedForAll(owner, auth) */\n      jump\t// in\n    tag_321:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15132:15162  !isApprovedForAll(owner, auth) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15162  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n    tag_320:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15089:15231  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n      iszero\n      tag_322\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15211:15215  auth */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15189:15216  ERC721InvalidApprover(auth) */\n      mload(0x40)\n      0xa9fbf51f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_323\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_323:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15089:15231  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n    tag_322:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15249:15258  emitEvent */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15245:15326  if (emitEvent) {... */\n      iszero\n      tag_324\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15303:15310  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15299:15301  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15283:15311  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15292:15297  owner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15283:15311  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15245:15326  if (emitEvent) {... */\n    tag_324:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14913:15336  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14876:15336  if (emitEvent || auth != address(0)) {... */\n    tag_317:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15373:15375  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15361  _tokenApprovals */\n      0x06\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15370  _tokenApprovals[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15362:15369  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15370  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15375  _tokenApprovals[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14720:15382  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8838:9633  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n    tag_243:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8924:8931  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8943:8955  address from */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8958:8975  _ownerOf(tokenId) */\n      tag_326\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8967:8974  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8958:8966  _ownerOf */\n      tag_233\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8958:8975  _ownerOf(tokenId) */\n      jump\t// in\n    tag_326:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8943:8975  address from = _ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9051:9052  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9035:9053  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9035:9039  auth */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9035:9053  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9031:9117  if (auth != address(0)) {... */\n      tag_327\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9069:9106  _checkAuthorized(from, auth, tokenId) */\n      tag_328\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9086:9090  from */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9092:9096  auth */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9098:9105  tokenId */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9069:9085  _checkAuthorized */\n      tag_329\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9069:9106  _checkAuthorized(from, auth, tokenId) */\n      jump\t// in\n    tag_328:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9031:9117  if (auth != address(0)) {... */\n    tag_327:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9177:9178  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9161:9179  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9161:9165  from */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9161:9179  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9157:9413  if (from != address(0)) {... */\n      tag_330\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9277:9325  _approve(address(0), tokenId, address(0), false) */\n      tag_331\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9294:9295  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9298:9305  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9315:9316  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9319:9324  false */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9277:9285  _approve */\n      tag_240\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9277:9325  _approve(address(0), tokenId, address(0), false) */\n      jump\t// in\n    tag_331:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9387:9388  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9377  _balances */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9383  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9378:9382  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9383  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9388  _balances[from] -= 1 */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9157:9413  if (from != address(0)) {... */\n    tag_330:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9441:9442  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9427:9443  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9427:9429  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9427:9443  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9423:9530  if (to != address(0)) {... */\n      tag_332\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9504:9505  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9496  _balances */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9500  _balances[to] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9497:9499  to */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9500  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9505  _balances[to] += 1 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9423:9530  if (to != address(0)) {... */\n    tag_332:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9559:9561  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9547  _owners */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9556  _owners[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9548:9555  tokenId */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9556  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9561  _owners[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9596:9603  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9592:9594  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9577:9604  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9586:9590  from */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9577:9604  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9622:9626  from */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9615:9626  return from */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8838:9633  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3846:4007  function _addTokenToAllTokensEnumeration(uint256 tokenId) private {... */\n    tag_246:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3949:3959  _allTokens */\n      0x0a\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3949:3966  _allTokens.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3922:3937  _allTokensIndex */\n      0x0b\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3922:3946  _allTokensIndex[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3938:3945  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3922:3946  _allTokensIndex[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3922:3966  _allTokensIndex[tokenId] = _allTokens.length */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3976:3986  _allTokens */\n      0x0a\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3992:3999  tokenId */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3976:4000  _allTokens.push(tokenId) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3846:4007  function _addTokenToAllTokensEnumeration(uint256 tokenId) private {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":4624:5583  function _removeTokenFromOwnerEnumeration(address from, uint256 tokenId) private {... */\n    tag_250:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":4886:4908  uint256 lastTokenIndex */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":4911:4926  balanceOf(from) */\n      tag_336\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":4921:4925  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":4911:4920  balanceOf */\n      tag_78\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":4911:4926  balanceOf(from) */\n      jump\t// in\n    tag_336:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":4886:4926  uint256 lastTokenIndex = balanceOf(from) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":4936:4954  uint256 tokenIndex */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":4957:4974  _ownedTokensIndex */\n      0x09\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":4957:4983  _ownedTokensIndex[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":4975:4982  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":4957:4983  _ownedTokensIndex[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":4936:4983  uint256 tokenIndex = _ownedTokensIndex[tokenId] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5101:5115  lastTokenIndex */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5087:5097  tokenIndex */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5087:5115  tokenIndex != lastTokenIndex */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5083:5406  if (tokenIndex != lastTokenIndex) {... */\n      tag_337\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5131:5150  uint256 lastTokenId */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5153:5165  _ownedTokens */\n      0x08\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5153:5171  _ownedTokens[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5166:5170  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5153:5171  _ownedTokens[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5153:5187  _ownedTokens[from][lastTokenIndex] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5172:5186  lastTokenIndex */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5153:5187  _ownedTokens[from][lastTokenIndex] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5131:5187  uint256 lastTokenId = _ownedTokens[from][lastTokenIndex] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5235:5246  lastTokenId */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5202:5214  _ownedTokens */\n      0x08\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5202:5220  _ownedTokens[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5215:5219  from */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5202:5220  _ownedTokens[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5202:5232  _ownedTokens[from][tokenIndex] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5221:5231  tokenIndex */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5202:5232  _ownedTokens[from][tokenIndex] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5202:5246  _ownedTokens[from][tokenIndex] = lastTokenId */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5351:5361  tokenIndex */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5318:5335  _ownedTokensIndex */\n      0x09\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5318:5348  _ownedTokensIndex[lastTokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5336:5347  lastTokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5318:5348  _ownedTokensIndex[lastTokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5318:5361  _ownedTokensIndex[lastTokenId] = tokenIndex */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5117:5406  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5083:5406  if (tokenIndex != lastTokenIndex) {... */\n    tag_337:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5499:5516  _ownedTokensIndex */\n      0x09\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5499:5525  _ownedTokensIndex[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5517:5524  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5499:5525  _ownedTokensIndex[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5492:5525  delete _ownedTokensIndex[tokenId] */\n      0x00\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5542:5554  _ownedTokens */\n      0x08\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5542:5560  _ownedTokens[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5555:5559  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5542:5560  _ownedTokens[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5542:5576  _ownedTokens[from][lastTokenIndex] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5561:5575  lastTokenIndex */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5542:5576  _ownedTokens[from][lastTokenIndex] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5535:5576  delete _ownedTokens[from][lastTokenIndex] */\n      0x00\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":4705:5583  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":4624:5583  function _removeTokenFromOwnerEnumeration(address from, uint256 tokenId) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5871:6932  function _removeTokenFromAllTokensEnumeration(uint256 tokenId) private {... */\n    tag_253:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6120:6142  uint256 lastTokenIndex */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6165:6166  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6145:6155  _allTokens */\n      0x0a\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6145:6162  _allTokens.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6145:6166  _allTokens.length - 1 */\n      tag_339\n      swap2\n      swap1\n      tag_340\n      jump\t// in\n    tag_339:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6120:6166  uint256 lastTokenIndex = _allTokens.length - 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6176:6194  uint256 tokenIndex */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6197:6212  _allTokensIndex */\n      0x0b\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6197:6221  _allTokensIndex[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6213:6220  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6197:6221  _allTokensIndex[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6176:6221  uint256 tokenIndex = _allTokensIndex[tokenId] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6543:6562  uint256 lastTokenId */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6565:6575  _allTokens */\n      0x0a\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6576:6590  lastTokenIndex */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6565:6591  _allTokens[lastTokenIndex] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_341\n      jumpi\n      tag_342\n      tag_170\n      jump\t// in\n    tag_342:\n    tag_341:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6543:6591  uint256 lastTokenId = _allTokens[lastTokenIndex] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6627:6638  lastTokenId */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6602:6612  _allTokens */\n      0x0a\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6613:6623  tokenIndex */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6602:6624  _allTokens[tokenIndex] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_344\n      jumpi\n      tag_345\n      tag_170\n      jump\t// in\n    tag_345:\n    tag_344:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6602:6638  _allTokens[tokenIndex] = lastTokenId */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6737:6747  tokenIndex */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6706:6721  _allTokensIndex */\n      0x0b\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6706:6734  _allTokensIndex[lastTokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6722:6733  lastTokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6706:6734  _allTokensIndex[lastTokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6706:6747  _allTokensIndex[lastTokenId] = tokenIndex */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6875:6890  _allTokensIndex */\n      0x0b\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6875:6899  _allTokensIndex[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6891:6898  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6875:6899  _allTokensIndex[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6868:6899  delete _allTokensIndex[tokenId] */\n      0x00\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6909:6919  _allTokens */\n      0x0a\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6909:6925  _allTokens.pop() */\n      dup1\n      sload\n      dup1\n      tag_347\n      jumpi\n      tag_348\n      tag_349\n      jump\t// in\n    tag_348:\n    tag_347:\n      0x01\n      swap1\n      sub\n      dup2\n      dup2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sstore\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5942:6932  {... */\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5871:6932  function _removeTokenFromAllTokensEnumeration(uint256 tokenId) private {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3437:3651  function _addTokenToOwnerEnumeration(address to, uint256 tokenId) private {... */\n    tag_257:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3521:3535  uint256 length */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3554:3555  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3538:3551  balanceOf(to) */\n      tag_352\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3548:3550  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3538:3547  balanceOf */\n      tag_78\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3538:3551  balanceOf(to) */\n      jump\t// in\n    tag_352:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3538:3555  balanceOf(to) - 1 */\n      tag_353\n      swap2\n      swap1\n      tag_340\n      jump\t// in\n    tag_353:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3521:3555  uint256 length = balanceOf(to) - 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3592:3599  tokenId */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3565:3577  _ownedTokens */\n      0x08\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3565:3581  _ownedTokens[to] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3578:3580  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3565:3581  _ownedTokens[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3565:3589  _ownedTokens[to][length] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3582:3588  length */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3565:3589  _ownedTokens[to][length] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3565:3599  _ownedTokens[to][length] = tokenId */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3638:3644  length */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3609:3626  _ownedTokensIndex */\n      0x09\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3609:3635  _ownedTokensIndex[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3627:3634  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3609:3635  _ownedTokensIndex[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3609:3644  _ownedTokensIndex[tokenId] = length */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3511:3651  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3437:3651  function _addTokenToOwnerEnumeration(address to, uint256 tokenId) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10954:11136  function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {... */\n    tag_267:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11048:11066  _mint(to, tokenId) */\n      tag_355\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11054:11056  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11058:11065  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11048:11053  _mint */\n      tag_356\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11048:11066  _mint(to, tokenId) */\n      jump\t// in\n    tag_355:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11076:11129  _checkOnERC721Received(address(0), to, tokenId, data) */\n      tag_357\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11107:11108  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11111:11113  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11115:11122  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11124:11128  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11076:11098  _checkOnERC721Received */\n      tag_202\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11076:11129  _checkOnERC721Received(address(0), to, tokenId, data) */\n      jump\t// in\n    tag_357:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10954:11136  function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12214:13130  function log10(uint256 value) internal pure returns (uint256) {... */\n    tag_295:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12267:12274  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12286:12300  uint256 result */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12303:12304  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12286:12304  uint256 result = 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12351:12359  10 ** 64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12342:12347  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12342:12359  value >= 10 ** 64 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12338:12441  if (value >= 10 ** 64) {... */\n      tag_359\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12388:12396  10 ** 64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12379:12396  value /= 10 ** 64 */\n      dup4\n      dup2\n      tag_360\n      jumpi\n      tag_361\n      tag_304\n      jump\t// in\n    tag_361:\n    tag_360:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12424:12426  64 */\n      0x40\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12414:12426  result += 64 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12338:12441  if (value >= 10 ** 64) {... */\n    tag_359:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12467:12475  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12458:12463  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12458:12475  value >= 10 ** 32 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12454:12557  if (value >= 10 ** 32) {... */\n      tag_362\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12504:12512  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12495:12512  value /= 10 ** 32 */\n      dup4\n      dup2\n      tag_363\n      jumpi\n      tag_364\n      tag_304\n      jump\t// in\n    tag_364:\n    tag_363:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12540:12542  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12530:12542  result += 32 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12454:12557  if (value >= 10 ** 32) {... */\n    tag_362:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12583:12591  10 ** 16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12574:12579  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12574:12591  value >= 10 ** 16 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12570:12673  if (value >= 10 ** 16) {... */\n      tag_365\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12620:12628  10 ** 16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12611:12628  value /= 10 ** 16 */\n      dup4\n      dup2\n      tag_366\n      jumpi\n      tag_367\n      tag_304\n      jump\t// in\n    tag_367:\n    tag_366:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12656:12658  16 */\n      0x10\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12646:12658  result += 16 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12570:12673  if (value >= 10 ** 16) {... */\n    tag_365:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12699:12706  10 ** 8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12690:12695  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12690:12706  value >= 10 ** 8 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12686:12786  if (value >= 10 ** 8) {... */\n      tag_368\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12735:12742  10 ** 8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12726:12742  value /= 10 ** 8 */\n      dup4\n      dup2\n      tag_369\n      jumpi\n      tag_370\n      tag_304\n      jump\t// in\n    tag_370:\n    tag_369:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12770:12771  8 */\n      0x08\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12760:12771  result += 8 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12686:12786  if (value >= 10 ** 8) {... */\n    tag_368:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12812:12819  10 ** 4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12803:12808  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12803:12819  value >= 10 ** 4 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12799:12899  if (value >= 10 ** 4) {... */\n      tag_371\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12848:12855  10 ** 4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12839:12855  value /= 10 ** 4 */\n      dup4\n      dup2\n      tag_372\n      jumpi\n      tag_373\n      tag_304\n      jump\t// in\n    tag_373:\n    tag_372:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12883:12884  4 */\n      0x04\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12873:12884  result += 4 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12799:12899  if (value >= 10 ** 4) {... */\n    tag_371:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12925:12932  10 ** 2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12916:12921  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12916:12932  value >= 10 ** 2 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12912:13012  if (value >= 10 ** 2) {... */\n      tag_374\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12961:12968  10 ** 2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12952:12968  value /= 10 ** 2 */\n      dup4\n      dup2\n      tag_375\n      jumpi\n      tag_376\n      tag_304\n      jump\t// in\n    tag_376:\n    tag_375:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12996:12997  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12986:12997  result += 2 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12912:13012  if (value >= 10 ** 2) {... */\n    tag_374:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13038:13045  10 ** 1 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13029:13034  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13029:13045  value >= 10 ** 1 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13025:13091  if (value >= 10 ** 1) {... */\n      tag_377\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13075:13076  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13065:13076  result += 1 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13025:13091  if (value >= 10 ** 1) {... */\n    tag_377:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13117:13123  result */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13110:13123  return result */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12214:13130  function log10(uint256 value) internal pure returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_313:\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":838:842  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":876:901  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:872  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":854:901  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7082:7450  function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {... */\n    tag_329:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7194:7232  _isAuthorized(owner, spender, tokenId) */\n      tag_380\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7208:7213  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7215:7222  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7224:7231  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7194:7207  _isAuthorized */\n      tag_381\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7194:7232  _isAuthorized(owner, spender, tokenId) */\n      jump\t// in\n    tag_380:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7189:7444  if (!_isAuthorized(owner, spender, tokenId)) {... */\n      tag_382\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7269:7270  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7252:7271  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7252:7257  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7252:7271  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7248:7434  if (owner == address(0)) {... */\n      tag_383\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7321:7328  tokenId */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7298:7329  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      0x7e27328900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_384\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_384:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7248:7434  if (owner == address(0)) {... */\n    tag_383:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7402:7409  spender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7411:7418  tokenId */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7375:7419  ERC721InsufficientApproval(spender, tokenId) */\n      mload(0x40)\n      0x177e802f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_386\n      swap3\n      swap2\n      swap1\n      tag_152\n      jump\t// in\n    tag_386:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7189:7444  if (!_isAuthorized(owner, spender, tokenId)) {... */\n    tag_382:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7082:7450  function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9955:10282  function _mint(address to, uint256 tokenId) internal {... */\n    tag_356:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10036:10037  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10022:10038  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10022:10024  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10022:10038  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10018:10105  if (to == address(0)) {... */\n      tag_388\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10091:10092  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10061:10094  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_389\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_389:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10018:10105  if (to == address(0)) {... */\n    tag_388:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10114:10135  address previousOwner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10138:10170  _update(to, tokenId, address(0)) */\n      tag_390\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10146:10148  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10150:10157  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10167:10168  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10138:10145  _update */\n      tag_144\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10138:10170  _update(to, tokenId, address(0)) */\n      jump\t// in\n    tag_390:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10114:10170  address previousOwner = _update(to, tokenId, address(0)) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10209:10210  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10184:10211  previousOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10184:10197  previousOwner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10184:10211  previousOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10180:10276  if (previousOwner != address(0)) {... */\n      tag_391\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10262:10263  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10234:10265  ERC721InvalidSender(address(0)) */\n      mload(0x40)\n      0x73c6ac6e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_392\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_392:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10180:10276  if (previousOwner != address(0)) {... */\n    tag_391:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10008:10282  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9955:10282  function _mint(address to, uint256 tokenId) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6376:6648  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_381:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6479:6483  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6533:6534  0 */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6535  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6521  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6535  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6641  spender != address(0) &&... */\n      dup1\n      iszero\n      tag_394\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6561:6568  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6568  owner == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6557  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6568  owner == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6604  owner == spender || isApprovedForAll(owner, spender) */\n      dup1\n      tag_395\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6572:6604  isApprovedForAll(owner, spender) */\n      tag_396\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6589:6594  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6596:6603  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6572:6588  isApprovedForAll */\n      tag_110\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6572:6604  isApprovedForAll(owner, spender) */\n      jump\t// in\n    tag_396:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6604  owner == spender || isApprovedForAll(owner, spender) */\n    tag_395:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6640  owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender */\n      dup1\n      tag_397\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6633:6640  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6640  _getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6629  _getApproved(tokenId) */\n      tag_398\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6621:6628  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6620  _getApproved */\n      tag_132\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6629  _getApproved(tokenId) */\n      jump\t// in\n    tag_398:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6640  _getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6640  owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender */\n    tag_397:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6641  spender != address(0) &&... */\n    tag_394:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6495:6641  return... */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6376:6648  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n    tag_217:\n      dup3\n      dup1\n      sload\n      dup3\n      dup3\n      sstore\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      dup2\n      add\n      swap3\n      dup3\n      iszero\n      tag_399\n      jumpi\n      swap2\n      0x20\n      mul\n      dup3\n      add\n    tag_400:\n      dup3\n      dup2\n      gt\n      iszero\n      tag_401\n      jumpi\n      dup3\n      mload\n      dup3\n      swap1\n      dup2\n      tag_402\n      swap2\n      swap1\n      tag_403\n      jump\t// in\n    tag_402:\n      pop\n      swap2\n      0x20\n      add\n      swap2\n      swap1\n      0x01\n      add\n      swap1\n      jump(tag_400)\n    tag_401:\n    tag_399:\n      pop\n      swap1\n      pop\n      tag_404\n      swap2\n      swap1\n      tag_405\n      jump\t// in\n    tag_404:\n      pop\n      swap1\n      jump\t// out\n    tag_405:\n    tag_406:\n      dup1\n      dup3\n      gt\n      iszero\n      tag_407\n      jumpi\n      0x00\n      dup2\n      dup2\n      tag_408\n      swap2\n      swap1\n      tag_409\n      jump\t// in\n    tag_408:\n      pop\n      0x01\n      add\n      jump(tag_406)\n    tag_407:\n      pop\n      swap1\n      jump\t// out\n    tag_409:\n      pop\n      dup1\n      sload\n      tag_410\n      swap1\n      tag_123\n      jump\t// in\n    tag_410:\n      0x00\n      dup3\n      sstore\n      dup1\n      0x1f\n      lt\n      tag_412\n      jumpi\n      pop\n      jump(tag_411)\n    tag_412:\n      0x1f\n      add\n      0x20\n      swap1\n      div\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      dup2\n      add\n      swap1\n      tag_413\n      swap2\n      swap1\n      tag_414\n      jump\t// in\n    tag_413:\n    tag_411:\n      pop\n      jump\t// out\n    tag_414:\n    tag_415:\n      dup1\n      dup3\n      gt\n      iszero\n      tag_416\n      jumpi\n      0x00\n      dup2\n      0x00\n      swap1\n      sstore\n      pop\n      0x01\n      add\n      jump(tag_415)\n    tag_416:\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_417:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_418:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_419:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_420:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_421:\n        /* \"#utility.yul\":561:584   */\n      tag_493\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_420\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_494\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_494:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_422:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_496\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_421\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_30:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_498\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_499\n      tag_418\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":833:952   */\n    tag_498:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_500\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_422\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_423:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_424:\n        /* \"#utility.yul\":1268:1289   */\n      tag_503\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_423\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_33:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_505\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_424\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1617   */\n    tag_425:\n        /* \"#utility.yul\":1570:1576   */\n      0x00\n        /* \"#utility.yul\":1604:1609   */\n      dup2\n        /* \"#utility.yul\":1598:1610   */\n      mload\n        /* \"#utility.yul\":1588:1610   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1623:1792   */\n    tag_426:\n        /* \"#utility.yul\":1707:1718   */\n      0x00\n        /* \"#utility.yul\":1741:1747   */\n      dup3\n        /* \"#utility.yul\":1736:1739   */\n      dup3\n        /* \"#utility.yul\":1729:1748   */\n      mstore\n        /* \"#utility.yul\":1781:1785   */\n      0x20\n        /* \"#utility.yul\":1776:1779   */\n      dup3\n        /* \"#utility.yul\":1772:1786   */\n      add\n        /* \"#utility.yul\":1757:1786   */\n      swap1\n      pop\n        /* \"#utility.yul\":1623:1792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1798:2044   */\n    tag_427:\n        /* \"#utility.yul\":1879:1880   */\n      0x00\n        /* \"#utility.yul\":1889:2002   */\n    tag_509:\n        /* \"#utility.yul\":1903:1909   */\n      dup4\n        /* \"#utility.yul\":1900:1901   */\n      dup2\n        /* \"#utility.yul\":1897:1910   */\n      lt\n        /* \"#utility.yul\":1889:2002   */\n      iszero\n      tag_511\n      jumpi\n        /* \"#utility.yul\":1988:1989   */\n      dup1\n        /* \"#utility.yul\":1983:1986   */\n      dup3\n        /* \"#utility.yul\":1979:1990   */\n      add\n        /* \"#utility.yul\":1973:1991   */\n      mload\n        /* \"#utility.yul\":1969:1970   */\n      dup2\n        /* \"#utility.yul\":1964:1967   */\n      dup5\n        /* \"#utility.yul\":1960:1971   */\n      add\n        /* \"#utility.yul\":1953:1992   */\n      mstore\n        /* \"#utility.yul\":1925:1927   */\n      0x20\n        /* \"#utility.yul\":1922:1923   */\n      dup2\n        /* \"#utility.yul\":1918:1928   */\n      add\n        /* \"#utility.yul\":1913:1928   */\n      swap1\n      pop\n        /* \"#utility.yul\":1889:2002   */\n      jump(tag_509)\n    tag_511:\n        /* \"#utility.yul\":2036:2037   */\n      0x00\n        /* \"#utility.yul\":2027:2033   */\n      dup5\n        /* \"#utility.yul\":2022:2025   */\n      dup5\n        /* \"#utility.yul\":2018:2034   */\n      add\n        /* \"#utility.yul\":2011:2038   */\n      mstore\n        /* \"#utility.yul\":1860:2044   */\n      pop\n        /* \"#utility.yul\":1798:2044   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2050:2152   */\n    tag_428:\n        /* \"#utility.yul\":2091:2097   */\n      0x00\n        /* \"#utility.yul\":2142:2144   */\n      0x1f\n        /* \"#utility.yul\":2138:2145   */\n      not\n        /* \"#utility.yul\":2133:2135   */\n      0x1f\n        /* \"#utility.yul\":2126:2131   */\n      dup4\n        /* \"#utility.yul\":2122:2136   */\n      add\n        /* \"#utility.yul\":2118:2146   */\n      and\n        /* \"#utility.yul\":2108:2146   */\n      swap1\n      pop\n        /* \"#utility.yul\":2050:2152   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2158:2535   */\n    tag_429:\n        /* \"#utility.yul\":2246:2249   */\n      0x00\n        /* \"#utility.yul\":2274:2313   */\n      tag_514\n        /* \"#utility.yul\":2307:2312   */\n      dup3\n        /* \"#utility.yul\":2274:2313   */\n      tag_425\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":2329:2400   */\n      tag_515\n        /* \"#utility.yul\":2393:2399   */\n      dup2\n        /* \"#utility.yul\":2388:2391   */\n      dup6\n        /* \"#utility.yul\":2329:2400   */\n      tag_426\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":2322:2400   */\n      swap4\n      pop\n        /* \"#utility.yul\":2409:2474   */\n      tag_516\n        /* \"#utility.yul\":2467:2473   */\n      dup2\n        /* \"#utility.yul\":2462:2465   */\n      dup6\n        /* \"#utility.yul\":2455:2459   */\n      0x20\n        /* \"#utility.yul\":2448:2453   */\n      dup7\n        /* \"#utility.yul\":2444:2460   */\n      add\n        /* \"#utility.yul\":2409:2474   */\n      tag_427\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":2499:2528   */\n      tag_517\n        /* \"#utility.yul\":2521:2527   */\n      dup2\n        /* \"#utility.yul\":2499:2528   */\n      tag_428\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":2494:2497   */\n      dup5\n        /* \"#utility.yul\":2490:2529   */\n      add\n        /* \"#utility.yul\":2483:2529   */\n      swap2\n      pop\n        /* \"#utility.yul\":2250:2535   */\n      pop\n        /* \"#utility.yul\":2158:2535   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2541:2854   */\n    tag_37:\n        /* \"#utility.yul\":2654:2658   */\n      0x00\n        /* \"#utility.yul\":2692:2694   */\n      0x20\n        /* \"#utility.yul\":2681:2690   */\n      dup3\n        /* \"#utility.yul\":2677:2695   */\n      add\n        /* \"#utility.yul\":2669:2695   */\n      swap1\n      pop\n        /* \"#utility.yul\":2741:2750   */\n      dup2\n        /* \"#utility.yul\":2735:2739   */\n      dup2\n        /* \"#utility.yul\":2731:2751   */\n      sub\n        /* \"#utility.yul\":2727:2728   */\n      0x00\n        /* \"#utility.yul\":2716:2725   */\n      dup4\n        /* \"#utility.yul\":2712:2729   */\n      add\n        /* \"#utility.yul\":2705:2752   */\n      mstore\n        /* \"#utility.yul\":2769:2847   */\n      tag_519\n        /* \"#utility.yul\":2842:2846   */\n      dup2\n        /* \"#utility.yul\":2833:2839   */\n      dup5\n        /* \"#utility.yul\":2769:2847   */\n      tag_429\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":2761:2847   */\n      swap1\n      pop\n        /* \"#utility.yul\":2541:2854   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2860:2937   */\n    tag_430:\n        /* \"#utility.yul\":2897:2904   */\n      0x00\n        /* \"#utility.yul\":2926:2931   */\n      dup2\n        /* \"#utility.yul\":2915:2931   */\n      swap1\n      pop\n        /* \"#utility.yul\":2860:2937   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2943:3065   */\n    tag_431:\n        /* \"#utility.yul\":3016:3040   */\n      tag_522\n        /* \"#utility.yul\":3034:3039   */\n      dup2\n        /* \"#utility.yul\":3016:3040   */\n      tag_430\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":3009:3014   */\n      dup2\n        /* \"#utility.yul\":3006:3041   */\n      eq\n        /* \"#utility.yul\":2996:3059   */\n      tag_523\n      jumpi\n        /* \"#utility.yul\":3055:3056   */\n      0x00\n        /* \"#utility.yul\":3052:3053   */\n      dup1\n        /* \"#utility.yul\":3045:3057   */\n      revert\n        /* \"#utility.yul\":2996:3059   */\n    tag_523:\n        /* \"#utility.yul\":2943:3065   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3071:3210   */\n    tag_432:\n        /* \"#utility.yul\":3117:3122   */\n      0x00\n        /* \"#utility.yul\":3155:3161   */\n      dup2\n        /* \"#utility.yul\":3142:3162   */\n      calldataload\n        /* \"#utility.yul\":3133:3162   */\n      swap1\n      pop\n        /* \"#utility.yul\":3171:3204   */\n      tag_525\n        /* \"#utility.yul\":3198:3203   */\n      dup2\n        /* \"#utility.yul\":3171:3204   */\n      tag_431\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":3071:3210   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3216:3545   */\n    tag_40:\n        /* \"#utility.yul\":3275:3281   */\n      0x00\n        /* \"#utility.yul\":3324:3326   */\n      0x20\n        /* \"#utility.yul\":3312:3321   */\n      dup3\n        /* \"#utility.yul\":3303:3310   */\n      dup5\n        /* \"#utility.yul\":3299:3322   */\n      sub\n        /* \"#utility.yul\":3295:3327   */\n      slt\n        /* \"#utility.yul\":3292:3411   */\n      iszero\n      tag_527\n      jumpi\n        /* \"#utility.yul\":3330:3409   */\n      tag_528\n      tag_418\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":3292:3411   */\n    tag_527:\n        /* \"#utility.yul\":3450:3451   */\n      0x00\n        /* \"#utility.yul\":3475:3528   */\n      tag_529\n        /* \"#utility.yul\":3520:3527   */\n      dup5\n        /* \"#utility.yul\":3511:3517   */\n      dup3\n        /* \"#utility.yul\":3500:3509   */\n      dup6\n        /* \"#utility.yul\":3496:3518   */\n      add\n        /* \"#utility.yul\":3475:3528   */\n      tag_432\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":3465:3528   */\n      swap2\n      pop\n        /* \"#utility.yul\":3421:3538   */\n      pop\n        /* \"#utility.yul\":3216:3545   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3551:3677   */\n    tag_433:\n        /* \"#utility.yul\":3588:3595   */\n      0x00\n        /* \"#utility.yul\":3628:3670   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3621:3626   */\n      dup3\n        /* \"#utility.yul\":3617:3671   */\n      and\n        /* \"#utility.yul\":3606:3671   */\n      swap1\n      pop\n        /* \"#utility.yul\":3551:3677   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3683:3779   */\n    tag_434:\n        /* \"#utility.yul\":3720:3727   */\n      0x00\n        /* \"#utility.yul\":3749:3773   */\n      tag_532\n        /* \"#utility.yul\":3767:3772   */\n      dup3\n        /* \"#utility.yul\":3749:3773   */\n      tag_433\n      jump\t// in\n    tag_532:\n        /* \"#utility.yul\":3738:3773   */\n      swap1\n      pop\n        /* \"#utility.yul\":3683:3779   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3785:3903   */\n    tag_435:\n        /* \"#utility.yul\":3872:3896   */\n      tag_534\n        /* \"#utility.yul\":3890:3895   */\n      dup2\n        /* \"#utility.yul\":3872:3896   */\n      tag_434\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":3867:3870   */\n      dup3\n        /* \"#utility.yul\":3860:3897   */\n      mstore\n        /* \"#utility.yul\":3785:3903   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3909:4131   */\n    tag_43:\n        /* \"#utility.yul\":4002:4006   */\n      0x00\n        /* \"#utility.yul\":4040:4042   */\n      0x20\n        /* \"#utility.yul\":4029:4038   */\n      dup3\n        /* \"#utility.yul\":4025:4043   */\n      add\n        /* \"#utility.yul\":4017:4043   */\n      swap1\n      pop\n        /* \"#utility.yul\":4053:4124   */\n      tag_536\n        /* \"#utility.yul\":4121:4122   */\n      0x00\n        /* \"#utility.yul\":4110:4119   */\n      dup4\n        /* \"#utility.yul\":4106:4123   */\n      add\n        /* \"#utility.yul\":4097:4103   */\n      dup5\n        /* \"#utility.yul\":4053:4124   */\n      tag_435\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":3909:4131   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4137:4259   */\n    tag_436:\n        /* \"#utility.yul\":4210:4234   */\n      tag_538\n        /* \"#utility.yul\":4228:4233   */\n      dup2\n        /* \"#utility.yul\":4210:4234   */\n      tag_434\n      jump\t// in\n    tag_538:\n        /* \"#utility.yul\":4203:4208   */\n      dup2\n        /* \"#utility.yul\":4200:4235   */\n      eq\n        /* \"#utility.yul\":4190:4253   */\n      tag_539\n      jumpi\n        /* \"#utility.yul\":4249:4250   */\n      0x00\n        /* \"#utility.yul\":4246:4247   */\n      dup1\n        /* \"#utility.yul\":4239:4251   */\n      revert\n        /* \"#utility.yul\":4190:4253   */\n    tag_539:\n        /* \"#utility.yul\":4137:4259   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4265:4404   */\n    tag_437:\n        /* \"#utility.yul\":4311:4316   */\n      0x00\n        /* \"#utility.yul\":4349:4355   */\n      dup2\n        /* \"#utility.yul\":4336:4356   */\n      calldataload\n        /* \"#utility.yul\":4327:4356   */\n      swap1\n      pop\n        /* \"#utility.yul\":4365:4398   */\n      tag_541\n        /* \"#utility.yul\":4392:4397   */\n      dup2\n        /* \"#utility.yul\":4365:4398   */\n      tag_436\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":4265:4404   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4410:4884   */\n    tag_46:\n        /* \"#utility.yul\":4478:4484   */\n      0x00\n        /* \"#utility.yul\":4486:4492   */\n      dup1\n        /* \"#utility.yul\":4535:4537   */\n      0x40\n        /* \"#utility.yul\":4523:4532   */\n      dup4\n        /* \"#utility.yul\":4514:4521   */\n      dup6\n        /* \"#utility.yul\":4510:4533   */\n      sub\n        /* \"#utility.yul\":4506:4538   */\n      slt\n        /* \"#utility.yul\":4503:4622   */\n      iszero\n      tag_543\n      jumpi\n        /* \"#utility.yul\":4541:4620   */\n      tag_544\n      tag_418\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":4503:4622   */\n    tag_543:\n        /* \"#utility.yul\":4661:4662   */\n      0x00\n        /* \"#utility.yul\":4686:4739   */\n      tag_545\n        /* \"#utility.yul\":4731:4738   */\n      dup6\n        /* \"#utility.yul\":4722:4728   */\n      dup3\n        /* \"#utility.yul\":4711:4720   */\n      dup7\n        /* \"#utility.yul\":4707:4729   */\n      add\n        /* \"#utility.yul\":4686:4739   */\n      tag_437\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":4676:4739   */\n      swap3\n      pop\n        /* \"#utility.yul\":4632:4749   */\n      pop\n        /* \"#utility.yul\":4788:4790   */\n      0x20\n        /* \"#utility.yul\":4814:4867   */\n      tag_546\n        /* \"#utility.yul\":4859:4866   */\n      dup6\n        /* \"#utility.yul\":4850:4856   */\n      dup3\n        /* \"#utility.yul\":4839:4848   */\n      dup7\n        /* \"#utility.yul\":4835:4857   */\n      add\n        /* \"#utility.yul\":4814:4867   */\n      tag_432\n      jump\t// in\n    tag_546:\n        /* \"#utility.yul\":4804:4867   */\n      swap2\n      pop\n        /* \"#utility.yul\":4759:4877   */\n      pop\n        /* \"#utility.yul\":4410:4884   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4890:5008   */\n    tag_438:\n        /* \"#utility.yul\":4977:5001   */\n      tag_548\n        /* \"#utility.yul\":4995:5000   */\n      dup2\n        /* \"#utility.yul\":4977:5001   */\n      tag_430\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":4972:4975   */\n      dup3\n        /* \"#utility.yul\":4965:5002   */\n      mstore\n        /* \"#utility.yul\":4890:5008   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5014:5236   */\n    tag_51:\n        /* \"#utility.yul\":5107:5111   */\n      0x00\n        /* \"#utility.yul\":5145:5147   */\n      0x20\n        /* \"#utility.yul\":5134:5143   */\n      dup3\n        /* \"#utility.yul\":5130:5148   */\n      add\n        /* \"#utility.yul\":5122:5148   */\n      swap1\n      pop\n        /* \"#utility.yul\":5158:5229   */\n      tag_550\n        /* \"#utility.yul\":5226:5227   */\n      0x00\n        /* \"#utility.yul\":5215:5224   */\n      dup4\n        /* \"#utility.yul\":5211:5228   */\n      add\n        /* \"#utility.yul\":5202:5208   */\n      dup5\n        /* \"#utility.yul\":5158:5229   */\n      tag_438\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":5014:5236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5242:5861   */\n    tag_54:\n        /* \"#utility.yul\":5319:5325   */\n      0x00\n        /* \"#utility.yul\":5327:5333   */\n      dup1\n        /* \"#utility.yul\":5335:5341   */\n      0x00\n        /* \"#utility.yul\":5384:5386   */\n      0x60\n        /* \"#utility.yul\":5372:5381   */\n      dup5\n        /* \"#utility.yul\":5363:5370   */\n      dup7\n        /* \"#utility.yul\":5359:5382   */\n      sub\n        /* \"#utility.yul\":5355:5387   */\n      slt\n        /* \"#utility.yul\":5352:5471   */\n      iszero\n      tag_552\n      jumpi\n        /* \"#utility.yul\":5390:5469   */\n      tag_553\n      tag_418\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":5352:5471   */\n    tag_552:\n        /* \"#utility.yul\":5510:5511   */\n      0x00\n        /* \"#utility.yul\":5535:5588   */\n      tag_554\n        /* \"#utility.yul\":5580:5587   */\n      dup7\n        /* \"#utility.yul\":5571:5577   */\n      dup3\n        /* \"#utility.yul\":5560:5569   */\n      dup8\n        /* \"#utility.yul\":5556:5578   */\n      add\n        /* \"#utility.yul\":5535:5588   */\n      tag_437\n      jump\t// in\n    tag_554:\n        /* \"#utility.yul\":5525:5588   */\n      swap4\n      pop\n        /* \"#utility.yul\":5481:5598   */\n      pop\n        /* \"#utility.yul\":5637:5639   */\n      0x20\n        /* \"#utility.yul\":5663:5716   */\n      tag_555\n        /* \"#utility.yul\":5708:5715   */\n      dup7\n        /* \"#utility.yul\":5699:5705   */\n      dup3\n        /* \"#utility.yul\":5688:5697   */\n      dup8\n        /* \"#utility.yul\":5684:5706   */\n      add\n        /* \"#utility.yul\":5663:5716   */\n      tag_437\n      jump\t// in\n    tag_555:\n        /* \"#utility.yul\":5653:5716   */\n      swap3\n      pop\n        /* \"#utility.yul\":5608:5726   */\n      pop\n        /* \"#utility.yul\":5765:5767   */\n      0x40\n        /* \"#utility.yul\":5791:5844   */\n      tag_556\n        /* \"#utility.yul\":5836:5843   */\n      dup7\n        /* \"#utility.yul\":5827:5833   */\n      dup3\n        /* \"#utility.yul\":5816:5825   */\n      dup8\n        /* \"#utility.yul\":5812:5834   */\n      add\n        /* \"#utility.yul\":5791:5844   */\n      tag_432\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":5781:5844   */\n      swap2\n      pop\n        /* \"#utility.yul\":5736:5854   */\n      pop\n        /* \"#utility.yul\":5242:5861   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5867:5991   */\n    tag_439:\n        /* \"#utility.yul\":5944:5950   */\n      0x00\n        /* \"#utility.yul\":5978:5983   */\n      dup2\n        /* \"#utility.yul\":5972:5984   */\n      mload\n        /* \"#utility.yul\":5962:5984   */\n      swap1\n      pop\n        /* \"#utility.yul\":5867:5991   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5997:6191   */\n    tag_440:\n        /* \"#utility.yul\":6106:6117   */\n      0x00\n        /* \"#utility.yul\":6140:6146   */\n      dup3\n        /* \"#utility.yul\":6135:6138   */\n      dup3\n        /* \"#utility.yul\":6128:6147   */\n      mstore\n        /* \"#utility.yul\":6180:6184   */\n      0x20\n        /* \"#utility.yul\":6175:6178   */\n      dup3\n        /* \"#utility.yul\":6171:6185   */\n      add\n        /* \"#utility.yul\":6156:6185   */\n      swap1\n      pop\n        /* \"#utility.yul\":5997:6191   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6197:6339   */\n    tag_441:\n        /* \"#utility.yul\":6274:6278   */\n      0x00\n        /* \"#utility.yul\":6297:6300   */\n      dup2\n        /* \"#utility.yul\":6289:6300   */\n      swap1\n      pop\n        /* \"#utility.yul\":6327:6331   */\n      0x20\n        /* \"#utility.yul\":6322:6325   */\n      dup3\n        /* \"#utility.yul\":6318:6332   */\n      add\n        /* \"#utility.yul\":6310:6332   */\n      swap1\n      pop\n        /* \"#utility.yul\":6197:6339   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6345:6504   */\n    tag_442:\n        /* \"#utility.yul\":6419:6430   */\n      0x00\n        /* \"#utility.yul\":6453:6459   */\n      dup3\n        /* \"#utility.yul\":6448:6451   */\n      dup3\n        /* \"#utility.yul\":6441:6460   */\n      mstore\n        /* \"#utility.yul\":6493:6497   */\n      0x20\n        /* \"#utility.yul\":6488:6491   */\n      dup3\n        /* \"#utility.yul\":6484:6498   */\n      add\n        /* \"#utility.yul\":6469:6498   */\n      swap1\n      pop\n        /* \"#utility.yul\":6345:6504   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6510:6867   */\n    tag_443:\n        /* \"#utility.yul\":6588:6591   */\n      0x00\n        /* \"#utility.yul\":6616:6655   */\n      tag_562\n        /* \"#utility.yul\":6649:6654   */\n      dup3\n        /* \"#utility.yul\":6616:6655   */\n      tag_425\n      jump\t// in\n    tag_562:\n        /* \"#utility.yul\":6671:6732   */\n      tag_563\n        /* \"#utility.yul\":6725:6731   */\n      dup2\n        /* \"#utility.yul\":6720:6723   */\n      dup6\n        /* \"#utility.yul\":6671:6732   */\n      tag_442\n      jump\t// in\n    tag_563:\n        /* \"#utility.yul\":6664:6732   */\n      swap4\n      pop\n        /* \"#utility.yul\":6741:6806   */\n      tag_564\n        /* \"#utility.yul\":6799:6805   */\n      dup2\n        /* \"#utility.yul\":6794:6797   */\n      dup6\n        /* \"#utility.yul\":6787:6791   */\n      0x20\n        /* \"#utility.yul\":6780:6785   */\n      dup7\n        /* \"#utility.yul\":6776:6792   */\n      add\n        /* \"#utility.yul\":6741:6806   */\n      tag_427\n      jump\t// in\n    tag_564:\n        /* \"#utility.yul\":6831:6860   */\n      tag_565\n        /* \"#utility.yul\":6853:6859   */\n      dup2\n        /* \"#utility.yul\":6831:6860   */\n      tag_428\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":6826:6829   */\n      dup5\n        /* \"#utility.yul\":6822:6861   */\n      add\n        /* \"#utility.yul\":6815:6861   */\n      swap2\n      pop\n        /* \"#utility.yul\":6592:6867   */\n      pop\n        /* \"#utility.yul\":6510:6867   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6873:7069   */\n    tag_444:\n        /* \"#utility.yul\":6962:6972   */\n      0x00\n        /* \"#utility.yul\":6997:7063   */\n      tag_567\n        /* \"#utility.yul\":7059:7062   */\n      dup4\n        /* \"#utility.yul\":7051:7057   */\n      dup4\n        /* \"#utility.yul\":6997:7063   */\n      tag_443\n      jump\t// in\n    tag_567:\n        /* \"#utility.yul\":6983:7063   */\n      swap1\n      pop\n        /* \"#utility.yul\":6873:7069   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7075:7198   */\n    tag_445:\n        /* \"#utility.yul\":7155:7159   */\n      0x00\n        /* \"#utility.yul\":7187:7191   */\n      0x20\n        /* \"#utility.yul\":7182:7185   */\n      dup3\n        /* \"#utility.yul\":7178:7192   */\n      add\n        /* \"#utility.yul\":7170:7192   */\n      swap1\n      pop\n        /* \"#utility.yul\":7075:7198   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7232:8223   */\n    tag_446:\n        /* \"#utility.yul\":7371:7374   */\n      0x00\n        /* \"#utility.yul\":7400:7464   */\n      tag_570\n        /* \"#utility.yul\":7458:7463   */\n      dup3\n        /* \"#utility.yul\":7400:7464   */\n      tag_439\n      jump\t// in\n    tag_570:\n        /* \"#utility.yul\":7480:7576   */\n      tag_571\n        /* \"#utility.yul\":7569:7575   */\n      dup2\n        /* \"#utility.yul\":7564:7567   */\n      dup6\n        /* \"#utility.yul\":7480:7576   */\n      tag_440\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":7473:7576   */\n      swap4\n      pop\n        /* \"#utility.yul\":7602:7605   */\n      dup4\n        /* \"#utility.yul\":7647:7651   */\n      0x20\n        /* \"#utility.yul\":7639:7645   */\n      dup3\n        /* \"#utility.yul\":7635:7652   */\n      mul\n        /* \"#utility.yul\":7630:7633   */\n      dup6\n        /* \"#utility.yul\":7626:7653   */\n      add\n        /* \"#utility.yul\":7677:7743   */\n      tag_572\n        /* \"#utility.yul\":7737:7742   */\n      dup6\n        /* \"#utility.yul\":7677:7743   */\n      tag_441\n      jump\t// in\n    tag_572:\n        /* \"#utility.yul\":7766:7773   */\n      dup1\n        /* \"#utility.yul\":7797:7798   */\n      0x00\n        /* \"#utility.yul\":7782:8178   */\n    tag_573:\n        /* \"#utility.yul\":7807:7813   */\n      dup6\n        /* \"#utility.yul\":7804:7805   */\n      dup2\n        /* \"#utility.yul\":7801:7814   */\n      lt\n        /* \"#utility.yul\":7782:8178   */\n      iszero\n      tag_575\n      jumpi\n        /* \"#utility.yul\":7878:7887   */\n      dup5\n        /* \"#utility.yul\":7872:7876   */\n      dup5\n        /* \"#utility.yul\":7868:7888   */\n      sub\n        /* \"#utility.yul\":7863:7866   */\n      dup10\n        /* \"#utility.yul\":7856:7889   */\n      mstore\n        /* \"#utility.yul\":7929:7935   */\n      dup2\n        /* \"#utility.yul\":7923:7936   */\n      mload\n        /* \"#utility.yul\":7957:8041   */\n      tag_576\n        /* \"#utility.yul\":8036:8040   */\n      dup6\n        /* \"#utility.yul\":8021:8034   */\n      dup3\n        /* \"#utility.yul\":7957:8041   */\n      tag_444\n      jump\t// in\n    tag_576:\n        /* \"#utility.yul\":7949:8041   */\n      swap5\n      pop\n        /* \"#utility.yul\":8064:8134   */\n      tag_577\n        /* \"#utility.yul\":8127:8133   */\n      dup4\n        /* \"#utility.yul\":8064:8134   */\n      tag_445\n      jump\t// in\n    tag_577:\n        /* \"#utility.yul\":8054:8134   */\n      swap3\n      pop\n        /* \"#utility.yul\":8163:8167   */\n      0x20\n        /* \"#utility.yul\":8158:8161   */\n      dup11\n        /* \"#utility.yul\":8154:8168   */\n      add\n        /* \"#utility.yul\":8147:8168   */\n      swap10\n      pop\n        /* \"#utility.yul\":7842:8178   */\n      pop\n        /* \"#utility.yul\":7829:7830   */\n      0x01\n        /* \"#utility.yul\":7826:7827   */\n      dup2\n        /* \"#utility.yul\":7822:7831   */\n      add\n        /* \"#utility.yul\":7817:7831   */\n      swap1\n      pop\n        /* \"#utility.yul\":7782:8178   */\n      jump(tag_573)\n    tag_575:\n        /* \"#utility.yul\":7786:7800   */\n      pop\n        /* \"#utility.yul\":8194:8198   */\n      dup3\n        /* \"#utility.yul\":8187:8198   */\n      swap8\n      pop\n        /* \"#utility.yul\":8214:8217   */\n      dup8\n        /* \"#utility.yul\":8207:8217   */\n      swap6\n      pop\n        /* \"#utility.yul\":7376:8223   */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":7232:8223   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8229:8642   */\n    tag_66:\n        /* \"#utility.yul\":8392:8396   */\n      0x00\n        /* \"#utility.yul\":8430:8432   */\n      0x20\n        /* \"#utility.yul\":8419:8428   */\n      dup3\n        /* \"#utility.yul\":8415:8433   */\n      add\n        /* \"#utility.yul\":8407:8433   */\n      swap1\n      pop\n        /* \"#utility.yul\":8479:8488   */\n      dup2\n        /* \"#utility.yul\":8473:8477   */\n      dup2\n        /* \"#utility.yul\":8469:8489   */\n      sub\n        /* \"#utility.yul\":8465:8466   */\n      0x00\n        /* \"#utility.yul\":8454:8463   */\n      dup4\n        /* \"#utility.yul\":8450:8467   */\n      add\n        /* \"#utility.yul\":8443:8490   */\n      mstore\n        /* \"#utility.yul\":8507:8635   */\n      tag_579\n        /* \"#utility.yul\":8630:8634   */\n      dup2\n        /* \"#utility.yul\":8621:8627   */\n      dup5\n        /* \"#utility.yul\":8507:8635   */\n      tag_446\n      jump\t// in\n    tag_579:\n        /* \"#utility.yul\":8499:8635   */\n      swap1\n      pop\n        /* \"#utility.yul\":8229:8642   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8648:8977   */\n    tag_77:\n        /* \"#utility.yul\":8707:8713   */\n      0x00\n        /* \"#utility.yul\":8756:8758   */\n      0x20\n        /* \"#utility.yul\":8744:8753   */\n      dup3\n        /* \"#utility.yul\":8735:8742   */\n      dup5\n        /* \"#utility.yul\":8731:8754   */\n      sub\n        /* \"#utility.yul\":8727:8759   */\n      slt\n        /* \"#utility.yul\":8724:8843   */\n      iszero\n      tag_581\n      jumpi\n        /* \"#utility.yul\":8762:8841   */\n      tag_582\n      tag_418\n      jump\t// in\n    tag_582:\n        /* \"#utility.yul\":8724:8843   */\n    tag_581:\n        /* \"#utility.yul\":8882:8883   */\n      0x00\n        /* \"#utility.yul\":8907:8960   */\n      tag_583\n        /* \"#utility.yul\":8952:8959   */\n      dup5\n        /* \"#utility.yul\":8943:8949   */\n      dup3\n        /* \"#utility.yul\":8932:8941   */\n      dup6\n        /* \"#utility.yul\":8928:8950   */\n      add\n        /* \"#utility.yul\":8907:8960   */\n      tag_437\n      jump\t// in\n    tag_583:\n        /* \"#utility.yul\":8897:8960   */\n      swap2\n      pop\n        /* \"#utility.yul\":8853:8970   */\n      pop\n        /* \"#utility.yul\":8648:8977   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8983:9099   */\n    tag_447:\n        /* \"#utility.yul\":9053:9074   */\n      tag_585\n        /* \"#utility.yul\":9068:9073   */\n      dup2\n        /* \"#utility.yul\":9053:9074   */\n      tag_423\n      jump\t// in\n    tag_585:\n        /* \"#utility.yul\":9046:9051   */\n      dup2\n        /* \"#utility.yul\":9043:9075   */\n      eq\n        /* \"#utility.yul\":9033:9093   */\n      tag_586\n      jumpi\n        /* \"#utility.yul\":9089:9090   */\n      0x00\n        /* \"#utility.yul\":9086:9087   */\n      dup1\n        /* \"#utility.yul\":9079:9091   */\n      revert\n        /* \"#utility.yul\":9033:9093   */\n    tag_586:\n        /* \"#utility.yul\":8983:9099   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9105:9238   */\n    tag_448:\n        /* \"#utility.yul\":9148:9153   */\n      0x00\n        /* \"#utility.yul\":9186:9192   */\n      dup2\n        /* \"#utility.yul\":9173:9193   */\n      calldataload\n        /* \"#utility.yul\":9164:9193   */\n      swap1\n      pop\n        /* \"#utility.yul\":9202:9232   */\n      tag_588\n        /* \"#utility.yul\":9226:9231   */\n      dup2\n        /* \"#utility.yul\":9202:9232   */\n      tag_447\n      jump\t// in\n    tag_588:\n        /* \"#utility.yul\":9105:9238   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9244:9712   */\n    tag_93:\n        /* \"#utility.yul\":9309:9315   */\n      0x00\n        /* \"#utility.yul\":9317:9323   */\n      dup1\n        /* \"#utility.yul\":9366:9368   */\n      0x40\n        /* \"#utility.yul\":9354:9363   */\n      dup4\n        /* \"#utility.yul\":9345:9352   */\n      dup6\n        /* \"#utility.yul\":9341:9364   */\n      sub\n        /* \"#utility.yul\":9337:9369   */\n      slt\n        /* \"#utility.yul\":9334:9453   */\n      iszero\n      tag_590\n      jumpi\n        /* \"#utility.yul\":9372:9451   */\n      tag_591\n      tag_418\n      jump\t// in\n    tag_591:\n        /* \"#utility.yul\":9334:9453   */\n    tag_590:\n        /* \"#utility.yul\":9492:9493   */\n      0x00\n        /* \"#utility.yul\":9517:9570   */\n      tag_592\n        /* \"#utility.yul\":9562:9569   */\n      dup6\n        /* \"#utility.yul\":9553:9559   */\n      dup3\n        /* \"#utility.yul\":9542:9551   */\n      dup7\n        /* \"#utility.yul\":9538:9560   */\n      add\n        /* \"#utility.yul\":9517:9570   */\n      tag_437\n      jump\t// in\n    tag_592:\n        /* \"#utility.yul\":9507:9570   */\n      swap3\n      pop\n        /* \"#utility.yul\":9463:9580   */\n      pop\n        /* \"#utility.yul\":9619:9621   */\n      0x20\n        /* \"#utility.yul\":9645:9695   */\n      tag_593\n        /* \"#utility.yul\":9687:9694   */\n      dup6\n        /* \"#utility.yul\":9678:9684   */\n      dup3\n        /* \"#utility.yul\":9667:9676   */\n      dup7\n        /* \"#utility.yul\":9663:9685   */\n      add\n        /* \"#utility.yul\":9645:9695   */\n      tag_448\n      jump\t// in\n    tag_593:\n        /* \"#utility.yul\":9635:9695   */\n      swap2\n      pop\n        /* \"#utility.yul\":9590:9705   */\n      pop\n        /* \"#utility.yul\":9244:9712   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9718:9835   */\n    tag_449:\n        /* \"#utility.yul\":9827:9828   */\n      0x00\n        /* \"#utility.yul\":9824:9825   */\n      dup1\n        /* \"#utility.yul\":9817:9829   */\n      revert\n        /* \"#utility.yul\":9841:9958   */\n    tag_450:\n        /* \"#utility.yul\":9950:9951   */\n      0x00\n        /* \"#utility.yul\":9947:9948   */\n      dup1\n        /* \"#utility.yul\":9940:9952   */\n      revert\n        /* \"#utility.yul\":9964:10144   */\n    tag_298:\n        /* \"#utility.yul\":10012:10089   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10009:10010   */\n      0x00\n        /* \"#utility.yul\":10002:10090   */\n      mstore\n        /* \"#utility.yul\":10109:10113   */\n      0x41\n        /* \"#utility.yul\":10106:10107   */\n      0x04\n        /* \"#utility.yul\":10099:10114   */\n      mstore\n        /* \"#utility.yul\":10133:10137   */\n      0x24\n        /* \"#utility.yul\":10130:10131   */\n      0x00\n        /* \"#utility.yul\":10123:10138   */\n      revert\n        /* \"#utility.yul\":10150:10431   */\n    tag_451:\n        /* \"#utility.yul\":10233:10260   */\n      tag_598\n        /* \"#utility.yul\":10255:10259   */\n      dup3\n        /* \"#utility.yul\":10233:10260   */\n      tag_428\n      jump\t// in\n    tag_598:\n        /* \"#utility.yul\":10225:10231   */\n      dup2\n        /* \"#utility.yul\":10221:10261   */\n      add\n        /* \"#utility.yul\":10363:10369   */\n      dup2\n        /* \"#utility.yul\":10351:10361   */\n      dup2\n        /* \"#utility.yul\":10348:10370   */\n      lt\n        /* \"#utility.yul\":10327:10345   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10315:10325   */\n      dup3\n        /* \"#utility.yul\":10312:10346   */\n      gt\n        /* \"#utility.yul\":10309:10371   */\n      or\n        /* \"#utility.yul\":10306:10394   */\n      iszero\n      tag_599\n      jumpi\n        /* \"#utility.yul\":10374:10392   */\n      tag_600\n      tag_298\n      jump\t// in\n    tag_600:\n        /* \"#utility.yul\":10306:10394   */\n    tag_599:\n        /* \"#utility.yul\":10414:10424   */\n      dup1\n        /* \"#utility.yul\":10410:10412   */\n      0x40\n        /* \"#utility.yul\":10403:10425   */\n      mstore\n        /* \"#utility.yul\":10193:10431   */\n      pop\n        /* \"#utility.yul\":10150:10431   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10437:10566   */\n    tag_452:\n        /* \"#utility.yul\":10471:10477   */\n      0x00\n        /* \"#utility.yul\":10498:10518   */\n      tag_602\n      tag_417\n      jump\t// in\n    tag_602:\n        /* \"#utility.yul\":10488:10518   */\n      swap1\n      pop\n        /* \"#utility.yul\":10527:10560   */\n      tag_603\n        /* \"#utility.yul\":10555:10559   */\n      dup3\n        /* \"#utility.yul\":10547:10553   */\n      dup3\n        /* \"#utility.yul\":10527:10560   */\n      tag_451\n      jump\t// in\n    tag_603:\n        /* \"#utility.yul\":10437:10566   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10572:10879   */\n    tag_453:\n        /* \"#utility.yul\":10633:10637   */\n      0x00\n        /* \"#utility.yul\":10723:10741   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10715:10721   */\n      dup3\n        /* \"#utility.yul\":10712:10742   */\n      gt\n        /* \"#utility.yul\":10709:10765   */\n      iszero\n      tag_605\n      jumpi\n        /* \"#utility.yul\":10745:10763   */\n      tag_606\n      tag_298\n      jump\t// in\n    tag_606:\n        /* \"#utility.yul\":10709:10765   */\n    tag_605:\n        /* \"#utility.yul\":10783:10812   */\n      tag_607\n        /* \"#utility.yul\":10805:10811   */\n      dup3\n        /* \"#utility.yul\":10783:10812   */\n      tag_428\n      jump\t// in\n    tag_607:\n        /* \"#utility.yul\":10775:10812   */\n      swap1\n      pop\n        /* \"#utility.yul\":10867:10871   */\n      0x20\n        /* \"#utility.yul\":10861:10865   */\n      dup2\n        /* \"#utility.yul\":10857:10872   */\n      add\n        /* \"#utility.yul\":10849:10872   */\n      swap1\n      pop\n        /* \"#utility.yul\":10572:10879   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10885:11031   */\n    tag_454:\n        /* \"#utility.yul\":10982:10988   */\n      dup3\n        /* \"#utility.yul\":10977:10980   */\n      dup2\n        /* \"#utility.yul\":10972:10975   */\n      dup4\n        /* \"#utility.yul\":10959:10989   */\n      calldatacopy\n        /* \"#utility.yul\":11023:11024   */\n      0x00\n        /* \"#utility.yul\":11014:11020   */\n      dup4\n        /* \"#utility.yul\":11009:11012   */\n      dup4\n        /* \"#utility.yul\":11005:11021   */\n      add\n        /* \"#utility.yul\":10998:11025   */\n      mstore\n        /* \"#utility.yul\":10885:11031   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11037:11460   */\n    tag_455:\n        /* \"#utility.yul\":11114:11119   */\n      0x00\n        /* \"#utility.yul\":11139:11204   */\n      tag_610\n        /* \"#utility.yul\":11155:11203   */\n      tag_611\n        /* \"#utility.yul\":11196:11202   */\n      dup5\n        /* \"#utility.yul\":11155:11203   */\n      tag_453\n      jump\t// in\n    tag_611:\n        /* \"#utility.yul\":11139:11204   */\n      tag_452\n      jump\t// in\n    tag_610:\n        /* \"#utility.yul\":11130:11204   */\n      swap1\n      pop\n        /* \"#utility.yul\":11227:11233   */\n      dup3\n        /* \"#utility.yul\":11220:11225   */\n      dup2\n        /* \"#utility.yul\":11213:11234   */\n      mstore\n        /* \"#utility.yul\":11265:11269   */\n      0x20\n        /* \"#utility.yul\":11258:11263   */\n      dup2\n        /* \"#utility.yul\":11254:11270   */\n      add\n        /* \"#utility.yul\":11303:11306   */\n      dup5\n        /* \"#utility.yul\":11294:11300   */\n      dup5\n        /* \"#utility.yul\":11289:11292   */\n      dup5\n        /* \"#utility.yul\":11285:11301   */\n      add\n        /* \"#utility.yul\":11282:11307   */\n      gt\n        /* \"#utility.yul\":11279:11391   */\n      iszero\n      tag_612\n      jumpi\n        /* \"#utility.yul\":11310:11389   */\n      tag_613\n      tag_450\n      jump\t// in\n    tag_613:\n        /* \"#utility.yul\":11279:11391   */\n    tag_612:\n        /* \"#utility.yul\":11400:11454   */\n      tag_614\n        /* \"#utility.yul\":11447:11453   */\n      dup5\n        /* \"#utility.yul\":11442:11445   */\n      dup3\n        /* \"#utility.yul\":11437:11440   */\n      dup6\n        /* \"#utility.yul\":11400:11454   */\n      tag_454\n      jump\t// in\n    tag_614:\n        /* \"#utility.yul\":11120:11460   */\n      pop\n        /* \"#utility.yul\":11037:11460   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11479:11817   */\n    tag_456:\n        /* \"#utility.yul\":11534:11539   */\n      0x00\n        /* \"#utility.yul\":11583:11586   */\n      dup3\n        /* \"#utility.yul\":11576:11580   */\n      0x1f\n        /* \"#utility.yul\":11568:11574   */\n      dup4\n        /* \"#utility.yul\":11564:11581   */\n      add\n        /* \"#utility.yul\":11560:11587   */\n      slt\n        /* \"#utility.yul\":11550:11672   */\n      tag_616\n      jumpi\n        /* \"#utility.yul\":11591:11670   */\n      tag_617\n      tag_449\n      jump\t// in\n    tag_617:\n        /* \"#utility.yul\":11550:11672   */\n    tag_616:\n        /* \"#utility.yul\":11708:11714   */\n      dup2\n        /* \"#utility.yul\":11695:11715   */\n      calldataload\n        /* \"#utility.yul\":11733:11811   */\n      tag_618\n        /* \"#utility.yul\":11807:11810   */\n      dup5\n        /* \"#utility.yul\":11799:11805   */\n      dup3\n        /* \"#utility.yul\":11792:11796   */\n      0x20\n        /* \"#utility.yul\":11784:11790   */\n      dup7\n        /* \"#utility.yul\":11780:11797   */\n      add\n        /* \"#utility.yul\":11733:11811   */\n      tag_455\n      jump\t// in\n    tag_618:\n        /* \"#utility.yul\":11724:11811   */\n      swap2\n      pop\n        /* \"#utility.yul\":11540:11817   */\n      pop\n        /* \"#utility.yul\":11479:11817   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11823:12766   */\n    tag_97:\n        /* \"#utility.yul\":11918:11924   */\n      0x00\n        /* \"#utility.yul\":11926:11932   */\n      dup1\n        /* \"#utility.yul\":11934:11940   */\n      0x00\n        /* \"#utility.yul\":11942:11948   */\n      dup1\n        /* \"#utility.yul\":11991:11994   */\n      0x80\n        /* \"#utility.yul\":11979:11988   */\n      dup6\n        /* \"#utility.yul\":11970:11977   */\n      dup8\n        /* \"#utility.yul\":11966:11989   */\n      sub\n        /* \"#utility.yul\":11962:11995   */\n      slt\n        /* \"#utility.yul\":11959:12079   */\n      iszero\n      tag_620\n      jumpi\n        /* \"#utility.yul\":11998:12077   */\n      tag_621\n      tag_418\n      jump\t// in\n    tag_621:\n        /* \"#utility.yul\":11959:12079   */\n    tag_620:\n        /* \"#utility.yul\":12118:12119   */\n      0x00\n        /* \"#utility.yul\":12143:12196   */\n      tag_622\n        /* \"#utility.yul\":12188:12195   */\n      dup8\n        /* \"#utility.yul\":12179:12185   */\n      dup3\n        /* \"#utility.yul\":12168:12177   */\n      dup9\n        /* \"#utility.yul\":12164:12186   */\n      add\n        /* \"#utility.yul\":12143:12196   */\n      tag_437\n      jump\t// in\n    tag_622:\n        /* \"#utility.yul\":12133:12196   */\n      swap5\n      pop\n        /* \"#utility.yul\":12089:12206   */\n      pop\n        /* \"#utility.yul\":12245:12247   */\n      0x20\n        /* \"#utility.yul\":12271:12324   */\n      tag_623\n        /* \"#utility.yul\":12316:12323   */\n      dup8\n        /* \"#utility.yul\":12307:12313   */\n      dup3\n        /* \"#utility.yul\":12296:12305   */\n      dup9\n        /* \"#utility.yul\":12292:12314   */\n      add\n        /* \"#utility.yul\":12271:12324   */\n      tag_437\n      jump\t// in\n    tag_623:\n        /* \"#utility.yul\":12261:12324   */\n      swap4\n      pop\n        /* \"#utility.yul\":12216:12334   */\n      pop\n        /* \"#utility.yul\":12373:12375   */\n      0x40\n        /* \"#utility.yul\":12399:12452   */\n      tag_624\n        /* \"#utility.yul\":12444:12451   */\n      dup8\n        /* \"#utility.yul\":12435:12441   */\n      dup3\n        /* \"#utility.yul\":12424:12433   */\n      dup9\n        /* \"#utility.yul\":12420:12442   */\n      add\n        /* \"#utility.yul\":12399:12452   */\n      tag_432\n      jump\t// in\n    tag_624:\n        /* \"#utility.yul\":12389:12452   */\n      swap3\n      pop\n        /* \"#utility.yul\":12344:12462   */\n      pop\n        /* \"#utility.yul\":12529:12531   */\n      0x60\n        /* \"#utility.yul\":12518:12527   */\n      dup6\n        /* \"#utility.yul\":12514:12532   */\n      add\n        /* \"#utility.yul\":12501:12533   */\n      calldataload\n        /* \"#utility.yul\":12560:12578   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":12552:12558   */\n      dup2\n        /* \"#utility.yul\":12549:12579   */\n      gt\n        /* \"#utility.yul\":12546:12663   */\n      iszero\n      tag_625\n      jumpi\n        /* \"#utility.yul\":12582:12661   */\n      tag_626\n      tag_419\n      jump\t// in\n    tag_626:\n        /* \"#utility.yul\":12546:12663   */\n    tag_625:\n        /* \"#utility.yul\":12687:12749   */\n      tag_627\n        /* \"#utility.yul\":12741:12748   */\n      dup8\n        /* \"#utility.yul\":12732:12738   */\n      dup3\n        /* \"#utility.yul\":12721:12730   */\n      dup9\n        /* \"#utility.yul\":12717:12739   */\n      add\n        /* \"#utility.yul\":12687:12749   */\n      tag_456\n      jump\t// in\n    tag_627:\n        /* \"#utility.yul\":12677:12749   */\n      swap2\n      pop\n        /* \"#utility.yul\":12472:12759   */\n      pop\n        /* \"#utility.yul\":11823:12766   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12772:13093   */\n    tag_457:\n        /* \"#utility.yul\":12859:12863   */\n      0x00\n        /* \"#utility.yul\":12949:12967   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":12941:12947   */\n      dup3\n        /* \"#utility.yul\":12938:12968   */\n      gt\n        /* \"#utility.yul\":12935:12991   */\n      iszero\n      tag_629\n      jumpi\n        /* \"#utility.yul\":12971:12989   */\n      tag_630\n      tag_298\n      jump\t// in\n    tag_630:\n        /* \"#utility.yul\":12935:12991   */\n    tag_629:\n        /* \"#utility.yul\":13021:13025   */\n      0x20\n        /* \"#utility.yul\":13013:13019   */\n      dup3\n        /* \"#utility.yul\":13009:13026   */\n      mul\n        /* \"#utility.yul\":13001:13026   */\n      swap1\n      pop\n        /* \"#utility.yul\":13081:13085   */\n      0x20\n        /* \"#utility.yul\":13075:13079   */\n      dup2\n        /* \"#utility.yul\":13071:13086   */\n      add\n        /* \"#utility.yul\":13063:13086   */\n      swap1\n      pop\n        /* \"#utility.yul\":12772:13093   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13099:13216   */\n    tag_458:\n        /* \"#utility.yul\":13208:13209   */\n      0x00\n        /* \"#utility.yul\":13205:13206   */\n      dup1\n        /* \"#utility.yul\":13198:13210   */\n      revert\n        /* \"#utility.yul\":13222:13530   */\n    tag_459:\n        /* \"#utility.yul\":13284:13288   */\n      0x00\n        /* \"#utility.yul\":13374:13392   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":13366:13372   */\n      dup3\n        /* \"#utility.yul\":13363:13393   */\n      gt\n        /* \"#utility.yul\":13360:13416   */\n      iszero\n      tag_633\n      jumpi\n        /* \"#utility.yul\":13396:13414   */\n      tag_634\n      tag_298\n      jump\t// in\n    tag_634:\n        /* \"#utility.yul\":13360:13416   */\n    tag_633:\n        /* \"#utility.yul\":13434:13463   */\n      tag_635\n        /* \"#utility.yul\":13456:13462   */\n      dup3\n        /* \"#utility.yul\":13434:13463   */\n      tag_428\n      jump\t// in\n    tag_635:\n        /* \"#utility.yul\":13426:13463   */\n      swap1\n      pop\n        /* \"#utility.yul\":13518:13522   */\n      0x20\n        /* \"#utility.yul\":13512:13516   */\n      dup2\n        /* \"#utility.yul\":13508:13523   */\n      add\n        /* \"#utility.yul\":13500:13523   */\n      swap1\n      pop\n        /* \"#utility.yul\":13222:13530   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13536:13961   */\n    tag_460:\n        /* \"#utility.yul\":13614:13619   */\n      0x00\n        /* \"#utility.yul\":13639:13705   */\n      tag_637\n        /* \"#utility.yul\":13655:13704   */\n      tag_638\n        /* \"#utility.yul\":13697:13703   */\n      dup5\n        /* \"#utility.yul\":13655:13704   */\n      tag_459\n      jump\t// in\n    tag_638:\n        /* \"#utility.yul\":13639:13705   */\n      tag_452\n      jump\t// in\n    tag_637:\n        /* \"#utility.yul\":13630:13705   */\n      swap1\n      pop\n        /* \"#utility.yul\":13728:13734   */\n      dup3\n        /* \"#utility.yul\":13721:13726   */\n      dup2\n        /* \"#utility.yul\":13714:13735   */\n      mstore\n        /* \"#utility.yul\":13766:13770   */\n      0x20\n        /* \"#utility.yul\":13759:13764   */\n      dup2\n        /* \"#utility.yul\":13755:13771   */\n      add\n        /* \"#utility.yul\":13804:13807   */\n      dup5\n        /* \"#utility.yul\":13795:13801   */\n      dup5\n        /* \"#utility.yul\":13790:13793   */\n      dup5\n        /* \"#utility.yul\":13786:13802   */\n      add\n        /* \"#utility.yul\":13783:13808   */\n      gt\n        /* \"#utility.yul\":13780:13892   */\n      iszero\n      tag_639\n      jumpi\n        /* \"#utility.yul\":13811:13890   */\n      tag_640\n      tag_450\n      jump\t// in\n    tag_640:\n        /* \"#utility.yul\":13780:13892   */\n    tag_639:\n        /* \"#utility.yul\":13901:13955   */\n      tag_641\n        /* \"#utility.yul\":13948:13954   */\n      dup5\n        /* \"#utility.yul\":13943:13946   */\n      dup3\n        /* \"#utility.yul\":13938:13941   */\n      dup6\n        /* \"#utility.yul\":13901:13955   */\n      tag_454\n      jump\t// in\n    tag_641:\n        /* \"#utility.yul\":13620:13961   */\n      pop\n        /* \"#utility.yul\":13536:13961   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13981:14321   */\n    tag_461:\n        /* \"#utility.yul\":14037:14042   */\n      0x00\n        /* \"#utility.yul\":14086:14089   */\n      dup3\n        /* \"#utility.yul\":14079:14083   */\n      0x1f\n        /* \"#utility.yul\":14071:14077   */\n      dup4\n        /* \"#utility.yul\":14067:14084   */\n      add\n        /* \"#utility.yul\":14063:14090   */\n      slt\n        /* \"#utility.yul\":14053:14175   */\n      tag_643\n      jumpi\n        /* \"#utility.yul\":14094:14173   */\n      tag_644\n      tag_449\n      jump\t// in\n    tag_644:\n        /* \"#utility.yul\":14053:14175   */\n    tag_643:\n        /* \"#utility.yul\":14211:14217   */\n      dup2\n        /* \"#utility.yul\":14198:14218   */\n      calldataload\n        /* \"#utility.yul\":14236:14315   */\n      tag_645\n        /* \"#utility.yul\":14311:14314   */\n      dup5\n        /* \"#utility.yul\":14303:14309   */\n      dup3\n        /* \"#utility.yul\":14296:14300   */\n      0x20\n        /* \"#utility.yul\":14288:14294   */\n      dup7\n        /* \"#utility.yul\":14284:14301   */\n      add\n        /* \"#utility.yul\":14236:14315   */\n      tag_460\n      jump\t// in\n    tag_645:\n        /* \"#utility.yul\":14227:14315   */\n      swap2\n      pop\n        /* \"#utility.yul\":14043:14321   */\n      pop\n        /* \"#utility.yul\":13981:14321   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14343:15288   */\n    tag_462:\n        /* \"#utility.yul\":14449:14454   */\n      0x00\n        /* \"#utility.yul\":14474:14565   */\n      tag_647\n        /* \"#utility.yul\":14490:14564   */\n      tag_648\n        /* \"#utility.yul\":14557:14563   */\n      dup5\n        /* \"#utility.yul\":14490:14564   */\n      tag_457\n      jump\t// in\n    tag_648:\n        /* \"#utility.yul\":14474:14565   */\n      tag_452\n      jump\t// in\n    tag_647:\n        /* \"#utility.yul\":14465:14565   */\n      swap1\n      pop\n        /* \"#utility.yul\":14585:14590   */\n      dup1\n        /* \"#utility.yul\":14614:14620   */\n      dup4\n        /* \"#utility.yul\":14607:14612   */\n      dup3\n        /* \"#utility.yul\":14600:14621   */\n      mstore\n        /* \"#utility.yul\":14648:14652   */\n      0x20\n        /* \"#utility.yul\":14641:14646   */\n      dup3\n        /* \"#utility.yul\":14637:14653   */\n      add\n        /* \"#utility.yul\":14630:14653   */\n      swap1\n      pop\n        /* \"#utility.yul\":14701:14705   */\n      0x20\n        /* \"#utility.yul\":14693:14699   */\n      dup5\n        /* \"#utility.yul\":14689:14706   */\n      mul\n        /* \"#utility.yul\":14681:14687   */\n      dup4\n        /* \"#utility.yul\":14677:14707   */\n      add\n        /* \"#utility.yul\":14730:14733   */\n      dup6\n        /* \"#utility.yul\":14722:14728   */\n      dup2\n        /* \"#utility.yul\":14719:14734   */\n      gt\n        /* \"#utility.yul\":14716:14838   */\n      iszero\n      tag_649\n      jumpi\n        /* \"#utility.yul\":14749:14828   */\n      tag_650\n      tag_458\n      jump\t// in\n    tag_650:\n        /* \"#utility.yul\":14716:14838   */\n    tag_649:\n        /* \"#utility.yul\":14864:14870   */\n      dup4\n        /* \"#utility.yul\":14847:15282   */\n    tag_651:\n        /* \"#utility.yul\":14881:14887   */\n      dup2\n        /* \"#utility.yul\":14876:14879   */\n      dup2\n        /* \"#utility.yul\":14873:14888   */\n      lt\n        /* \"#utility.yul\":14847:15282   */\n      iszero\n      tag_653\n      jumpi\n        /* \"#utility.yul\":14970:14973   */\n      dup1\n        /* \"#utility.yul\":14957:14974   */\n      calldataload\n        /* \"#utility.yul\":15006:15024   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":14993:15004   */\n      dup2\n        /* \"#utility.yul\":14990:15025   */\n      gt\n        /* \"#utility.yul\":14987:15109   */\n      iszero\n      tag_654\n      jumpi\n        /* \"#utility.yul\":15028:15107   */\n      tag_655\n      tag_449\n      jump\t// in\n    tag_655:\n        /* \"#utility.yul\":14987:15109   */\n    tag_654:\n        /* \"#utility.yul\":15152:15163   */\n      dup1\n        /* \"#utility.yul\":15144:15150   */\n      dup7\n        /* \"#utility.yul\":15140:15164   */\n      add\n        /* \"#utility.yul\":15190:15237   */\n      tag_656\n        /* \"#utility.yul\":15233:15236   */\n      dup10\n        /* \"#utility.yul\":15221:15231   */\n      dup3\n        /* \"#utility.yul\":15190:15237   */\n      tag_461\n      jump\t// in\n    tag_656:\n        /* \"#utility.yul\":15185:15188   */\n      dup6\n        /* \"#utility.yul\":15178:15238   */\n      mstore\n        /* \"#utility.yul\":15267:15271   */\n      0x20\n        /* \"#utility.yul\":15262:15265   */\n      dup6\n        /* \"#utility.yul\":15258:15272   */\n      add\n        /* \"#utility.yul\":15251:15272   */\n      swap5\n      pop\n        /* \"#utility.yul\":14923:15282   */\n      pop\n      pop\n        /* \"#utility.yul\":14907:14911   */\n      0x20\n        /* \"#utility.yul\":14902:14905   */\n      dup2\n        /* \"#utility.yul\":14898:14912   */\n      add\n        /* \"#utility.yul\":14891:14912   */\n      swap1\n      pop\n        /* \"#utility.yul\":14847:15282   */\n      jump(tag_651)\n    tag_653:\n        /* \"#utility.yul\":14851:14872   */\n      pop\n        /* \"#utility.yul\":14455:15288   */\n      pop\n      pop\n        /* \"#utility.yul\":14343:15288   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15310:15700   */\n    tag_463:\n        /* \"#utility.yul\":15391:15396   */\n      0x00\n        /* \"#utility.yul\":15440:15443   */\n      dup3\n        /* \"#utility.yul\":15433:15437   */\n      0x1f\n        /* \"#utility.yul\":15425:15431   */\n      dup4\n        /* \"#utility.yul\":15421:15438   */\n      add\n        /* \"#utility.yul\":15417:15444   */\n      slt\n        /* \"#utility.yul\":15407:15529   */\n      tag_658\n      jumpi\n        /* \"#utility.yul\":15448:15527   */\n      tag_659\n      tag_449\n      jump\t// in\n    tag_659:\n        /* \"#utility.yul\":15407:15529   */\n    tag_658:\n        /* \"#utility.yul\":15565:15571   */\n      dup2\n        /* \"#utility.yul\":15552:15572   */\n      calldataload\n        /* \"#utility.yul\":15590:15694   */\n      tag_660\n        /* \"#utility.yul\":15690:15693   */\n      dup5\n        /* \"#utility.yul\":15682:15688   */\n      dup3\n        /* \"#utility.yul\":15675:15679   */\n      0x20\n        /* \"#utility.yul\":15667:15673   */\n      dup7\n        /* \"#utility.yul\":15663:15680   */\n      add\n        /* \"#utility.yul\":15590:15694   */\n      tag_462\n      jump\t// in\n    tag_660:\n        /* \"#utility.yul\":15581:15694   */\n      swap2\n      pop\n        /* \"#utility.yul\":15397:15700   */\n      pop\n        /* \"#utility.yul\":15310:15700   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15706:16265   */\n    tag_105:\n        /* \"#utility.yul\":15800:15806   */\n      0x00\n        /* \"#utility.yul\":15849:15851   */\n      0x20\n        /* \"#utility.yul\":15837:15846   */\n      dup3\n        /* \"#utility.yul\":15828:15835   */\n      dup5\n        /* \"#utility.yul\":15824:15847   */\n      sub\n        /* \"#utility.yul\":15820:15852   */\n      slt\n        /* \"#utility.yul\":15817:15936   */\n      iszero\n      tag_662\n      jumpi\n        /* \"#utility.yul\":15855:15934   */\n      tag_663\n      tag_418\n      jump\t// in\n    tag_663:\n        /* \"#utility.yul\":15817:15936   */\n    tag_662:\n        /* \"#utility.yul\":16003:16004   */\n      0x00\n        /* \"#utility.yul\":15992:16001   */\n      dup3\n        /* \"#utility.yul\":15988:16005   */\n      add\n        /* \"#utility.yul\":15975:16006   */\n      calldataload\n        /* \"#utility.yul\":16033:16051   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":16025:16031   */\n      dup2\n        /* \"#utility.yul\":16022:16052   */\n      gt\n        /* \"#utility.yul\":16019:16136   */\n      iszero\n      tag_664\n      jumpi\n        /* \"#utility.yul\":16055:16134   */\n      tag_665\n      tag_419\n      jump\t// in\n    tag_665:\n        /* \"#utility.yul\":16019:16136   */\n    tag_664:\n        /* \"#utility.yul\":16160:16248   */\n      tag_666\n        /* \"#utility.yul\":16240:16247   */\n      dup5\n        /* \"#utility.yul\":16231:16237   */\n      dup3\n        /* \"#utility.yul\":16220:16229   */\n      dup6\n        /* \"#utility.yul\":16216:16238   */\n      add\n        /* \"#utility.yul\":16160:16248   */\n      tag_463\n      jump\t// in\n    tag_666:\n        /* \"#utility.yul\":16150:16248   */\n      swap2\n      pop\n        /* \"#utility.yul\":15946:16258   */\n      pop\n        /* \"#utility.yul\":15706:16265   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16271:16745   */\n    tag_109:\n        /* \"#utility.yul\":16339:16345   */\n      0x00\n        /* \"#utility.yul\":16347:16353   */\n      dup1\n        /* \"#utility.yul\":16396:16398   */\n      0x40\n        /* \"#utility.yul\":16384:16393   */\n      dup4\n        /* \"#utility.yul\":16375:16382   */\n      dup6\n        /* \"#utility.yul\":16371:16394   */\n      sub\n        /* \"#utility.yul\":16367:16399   */\n      slt\n        /* \"#utility.yul\":16364:16483   */\n      iszero\n      tag_668\n      jumpi\n        /* \"#utility.yul\":16402:16481   */\n      tag_669\n      tag_418\n      jump\t// in\n    tag_669:\n        /* \"#utility.yul\":16364:16483   */\n    tag_668:\n        /* \"#utility.yul\":16522:16523   */\n      0x00\n        /* \"#utility.yul\":16547:16600   */\n      tag_670\n        /* \"#utility.yul\":16592:16599   */\n      dup6\n        /* \"#utility.yul\":16583:16589   */\n      dup3\n        /* \"#utility.yul\":16572:16581   */\n      dup7\n        /* \"#utility.yul\":16568:16590   */\n      add\n        /* \"#utility.yul\":16547:16600   */\n      tag_437\n      jump\t// in\n    tag_670:\n        /* \"#utility.yul\":16537:16600   */\n      swap3\n      pop\n        /* \"#utility.yul\":16493:16610   */\n      pop\n        /* \"#utility.yul\":16649:16651   */\n      0x20\n        /* \"#utility.yul\":16675:16728   */\n      tag_671\n        /* \"#utility.yul\":16720:16727   */\n      dup6\n        /* \"#utility.yul\":16711:16717   */\n      dup3\n        /* \"#utility.yul\":16700:16709   */\n      dup7\n        /* \"#utility.yul\":16696:16718   */\n      add\n        /* \"#utility.yul\":16675:16728   */\n      tag_437\n      jump\t// in\n    tag_671:\n        /* \"#utility.yul\":16665:16728   */\n      swap2\n      pop\n        /* \"#utility.yul\":16620:16738   */\n      pop\n        /* \"#utility.yul\":16271:16745   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16751:16931   */\n    tag_464:\n        /* \"#utility.yul\":16799:16876   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16796:16797   */\n      0x00\n        /* \"#utility.yul\":16789:16877   */\n      mstore\n        /* \"#utility.yul\":16896:16900   */\n      0x22\n        /* \"#utility.yul\":16893:16894   */\n      0x04\n        /* \"#utility.yul\":16886:16901   */\n      mstore\n        /* \"#utility.yul\":16920:16924   */\n      0x24\n        /* \"#utility.yul\":16917:16918   */\n      0x00\n        /* \"#utility.yul\":16910:16925   */\n      revert\n        /* \"#utility.yul\":16937:17257   */\n    tag_123:\n        /* \"#utility.yul\":16981:16987   */\n      0x00\n        /* \"#utility.yul\":17018:17019   */\n      0x02\n        /* \"#utility.yul\":17012:17016   */\n      dup3\n        /* \"#utility.yul\":17008:17020   */\n      div\n        /* \"#utility.yul\":16998:17020   */\n      swap1\n      pop\n        /* \"#utility.yul\":17065:17066   */\n      0x01\n        /* \"#utility.yul\":17059:17063   */\n      dup3\n        /* \"#utility.yul\":17055:17067   */\n      and\n        /* \"#utility.yul\":17086:17104   */\n      dup1\n        /* \"#utility.yul\":17076:17157   */\n      tag_674\n      jumpi\n        /* \"#utility.yul\":17142:17146   */\n      0x7f\n        /* \"#utility.yul\":17134:17140   */\n      dup3\n        /* \"#utility.yul\":17130:17147   */\n      and\n        /* \"#utility.yul\":17120:17147   */\n      swap2\n      pop\n        /* \"#utility.yul\":17076:17157   */\n    tag_674:\n        /* \"#utility.yul\":17204:17206   */\n      0x20\n        /* \"#utility.yul\":17196:17202   */\n      dup3\n        /* \"#utility.yul\":17193:17207   */\n      lt\n        /* \"#utility.yul\":17173:17191   */\n      dup2\n        /* \"#utility.yul\":17170:17208   */\n      sub\n        /* \"#utility.yul\":17167:17251   */\n      tag_675\n      jumpi\n        /* \"#utility.yul\":17223:17241   */\n      tag_676\n      tag_464\n      jump\t// in\n    tag_676:\n        /* \"#utility.yul\":17167:17251   */\n    tag_675:\n        /* \"#utility.yul\":16988:17257   */\n      pop\n        /* \"#utility.yul\":16937:17257   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17263:17705   */\n    tag_147:\n        /* \"#utility.yul\":17412:17416   */\n      0x00\n        /* \"#utility.yul\":17450:17452   */\n      0x60\n        /* \"#utility.yul\":17439:17448   */\n      dup3\n        /* \"#utility.yul\":17435:17453   */\n      add\n        /* \"#utility.yul\":17427:17453   */\n      swap1\n      pop\n        /* \"#utility.yul\":17463:17534   */\n      tag_678\n        /* \"#utility.yul\":17531:17532   */\n      0x00\n        /* \"#utility.yul\":17520:17529   */\n      dup4\n        /* \"#utility.yul\":17516:17533   */\n      add\n        /* \"#utility.yul\":17507:17513   */\n      dup7\n        /* \"#utility.yul\":17463:17534   */\n      tag_435\n      jump\t// in\n    tag_678:\n        /* \"#utility.yul\":17544:17616   */\n      tag_679\n        /* \"#utility.yul\":17612:17614   */\n      0x20\n        /* \"#utility.yul\":17601:17610   */\n      dup4\n        /* \"#utility.yul\":17597:17615   */\n      add\n        /* \"#utility.yul\":17588:17594   */\n      dup6\n        /* \"#utility.yul\":17544:17616   */\n      tag_438\n      jump\t// in\n    tag_679:\n        /* \"#utility.yul\":17626:17698   */\n      tag_680\n        /* \"#utility.yul\":17694:17696   */\n      0x40\n        /* \"#utility.yul\":17683:17692   */\n      dup4\n        /* \"#utility.yul\":17679:17697   */\n      add\n        /* \"#utility.yul\":17670:17676   */\n      dup5\n        /* \"#utility.yul\":17626:17698   */\n      tag_435\n      jump\t// in\n    tag_680:\n        /* \"#utility.yul\":17263:17705   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17711:18043   */\n    tag_152:\n        /* \"#utility.yul\":17832:17836   */\n      0x00\n        /* \"#utility.yul\":17870:17872   */\n      0x40\n        /* \"#utility.yul\":17859:17868   */\n      dup3\n        /* \"#utility.yul\":17855:17873   */\n      add\n        /* \"#utility.yul\":17847:17873   */\n      swap1\n      pop\n        /* \"#utility.yul\":17883:17954   */\n      tag_682\n        /* \"#utility.yul\":17951:17952   */\n      0x00\n        /* \"#utility.yul\":17940:17949   */\n      dup4\n        /* \"#utility.yul\":17936:17953   */\n      add\n        /* \"#utility.yul\":17927:17933   */\n      dup6\n        /* \"#utility.yul\":17883:17954   */\n      tag_435\n      jump\t// in\n    tag_682:\n        /* \"#utility.yul\":17964:18036   */\n      tag_683\n        /* \"#utility.yul\":18032:18034   */\n      0x20\n        /* \"#utility.yul\":18021:18030   */\n      dup4\n        /* \"#utility.yul\":18017:18035   */\n      add\n        /* \"#utility.yul\":18008:18014   */\n      dup5\n        /* \"#utility.yul\":17964:18036   */\n      tag_438\n      jump\t// in\n    tag_683:\n        /* \"#utility.yul\":17711:18043   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18049:18229   */\n    tag_170:\n        /* \"#utility.yul\":18097:18174   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":18094:18095   */\n      0x00\n        /* \"#utility.yul\":18087:18175   */\n      mstore\n        /* \"#utility.yul\":18194:18198   */\n      0x32\n        /* \"#utility.yul\":18191:18192   */\n      0x04\n        /* \"#utility.yul\":18184:18199   */\n      mstore\n        /* \"#utility.yul\":18218:18222   */\n      0x24\n        /* \"#utility.yul\":18215:18216   */\n      0x00\n        /* \"#utility.yul\":18208:18223   */\n      revert\n        /* \"#utility.yul\":18235:18383   */\n    tag_465:\n        /* \"#utility.yul\":18337:18348   */\n      0x00\n        /* \"#utility.yul\":18374:18377   */\n      dup2\n        /* \"#utility.yul\":18359:18377   */\n      swap1\n      pop\n        /* \"#utility.yul\":18235:18383   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18389:18779   */\n    tag_466:\n        /* \"#utility.yul\":18495:18498   */\n      0x00\n        /* \"#utility.yul\":18523:18562   */\n      tag_687\n        /* \"#utility.yul\":18556:18561   */\n      dup3\n        /* \"#utility.yul\":18523:18562   */\n      tag_425\n      jump\t// in\n    tag_687:\n        /* \"#utility.yul\":18578:18667   */\n      tag_688\n        /* \"#utility.yul\":18660:18666   */\n      dup2\n        /* \"#utility.yul\":18655:18658   */\n      dup6\n        /* \"#utility.yul\":18578:18667   */\n      tag_465\n      jump\t// in\n    tag_688:\n        /* \"#utility.yul\":18571:18667   */\n      swap4\n      pop\n        /* \"#utility.yul\":18676:18741   */\n      tag_689\n        /* \"#utility.yul\":18734:18740   */\n      dup2\n        /* \"#utility.yul\":18729:18732   */\n      dup6\n        /* \"#utility.yul\":18722:18726   */\n      0x20\n        /* \"#utility.yul\":18715:18720   */\n      dup7\n        /* \"#utility.yul\":18711:18727   */\n      add\n        /* \"#utility.yul\":18676:18741   */\n      tag_427\n      jump\t// in\n    tag_689:\n        /* \"#utility.yul\":18766:18772   */\n      dup1\n        /* \"#utility.yul\":18761:18764   */\n      dup5\n        /* \"#utility.yul\":18757:18773   */\n      add\n        /* \"#utility.yul\":18750:18773   */\n      swap2\n      pop\n        /* \"#utility.yul\":18499:18779   */\n      pop\n        /* \"#utility.yul\":18389:18779   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18785:19220   */\n    tag_212:\n        /* \"#utility.yul\":18965:18968   */\n      0x00\n        /* \"#utility.yul\":18987:19082   */\n      tag_691\n        /* \"#utility.yul\":19078:19081   */\n      dup3\n        /* \"#utility.yul\":19069:19075   */\n      dup6\n        /* \"#utility.yul\":18987:19082   */\n      tag_466\n      jump\t// in\n    tag_691:\n        /* \"#utility.yul\":18980:19082   */\n      swap2\n      pop\n        /* \"#utility.yul\":19099:19194   */\n      tag_692\n        /* \"#utility.yul\":19190:19193   */\n      dup3\n        /* \"#utility.yul\":19181:19187   */\n      dup5\n        /* \"#utility.yul\":19099:19194   */\n      tag_466\n      jump\t// in\n    tag_692:\n        /* \"#utility.yul\":19092:19194   */\n      swap2\n      pop\n        /* \"#utility.yul\":19211:19214   */\n      dup2\n        /* \"#utility.yul\":19204:19214   */\n      swap1\n      pop\n        /* \"#utility.yul\":18785:19220   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19226:19324   */\n    tag_467:\n        /* \"#utility.yul\":19277:19283   */\n      0x00\n        /* \"#utility.yul\":19311:19316   */\n      dup2\n        /* \"#utility.yul\":19305:19317   */\n      mload\n        /* \"#utility.yul\":19295:19317   */\n      swap1\n      pop\n        /* \"#utility.yul\":19226:19324   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19330:19498   */\n    tag_468:\n        /* \"#utility.yul\":19413:19424   */\n      0x00\n        /* \"#utility.yul\":19447:19453   */\n      dup3\n        /* \"#utility.yul\":19442:19445   */\n      dup3\n        /* \"#utility.yul\":19435:19454   */\n      mstore\n        /* \"#utility.yul\":19487:19491   */\n      0x20\n        /* \"#utility.yul\":19482:19485   */\n      dup3\n        /* \"#utility.yul\":19478:19492   */\n      add\n        /* \"#utility.yul\":19463:19492   */\n      swap1\n      pop\n        /* \"#utility.yul\":19330:19498   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19504:19877   */\n    tag_469:\n        /* \"#utility.yul\":19590:19593   */\n      0x00\n        /* \"#utility.yul\":19618:19656   */\n      tag_696\n        /* \"#utility.yul\":19650:19655   */\n      dup3\n        /* \"#utility.yul\":19618:19656   */\n      tag_467\n      jump\t// in\n    tag_696:\n        /* \"#utility.yul\":19672:19742   */\n      tag_697\n        /* \"#utility.yul\":19735:19741   */\n      dup2\n        /* \"#utility.yul\":19730:19733   */\n      dup6\n        /* \"#utility.yul\":19672:19742   */\n      tag_468\n      jump\t// in\n    tag_697:\n        /* \"#utility.yul\":19665:19742   */\n      swap4\n      pop\n        /* \"#utility.yul\":19751:19816   */\n      tag_698\n        /* \"#utility.yul\":19809:19815   */\n      dup2\n        /* \"#utility.yul\":19804:19807   */\n      dup6\n        /* \"#utility.yul\":19797:19801   */\n      0x20\n        /* \"#utility.yul\":19790:19795   */\n      dup7\n        /* \"#utility.yul\":19786:19802   */\n      add\n        /* \"#utility.yul\":19751:19816   */\n      tag_427\n      jump\t// in\n    tag_698:\n        /* \"#utility.yul\":19841:19870   */\n      tag_699\n        /* \"#utility.yul\":19863:19869   */\n      dup2\n        /* \"#utility.yul\":19841:19870   */\n      tag_428\n      jump\t// in\n    tag_699:\n        /* \"#utility.yul\":19836:19839   */\n      dup5\n        /* \"#utility.yul\":19832:19871   */\n      add\n        /* \"#utility.yul\":19825:19871   */\n      swap2\n      pop\n        /* \"#utility.yul\":19594:19877   */\n      pop\n        /* \"#utility.yul\":19504:19877   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19883:20523   */\n    tag_276:\n        /* \"#utility.yul\":20078:20082   */\n      0x00\n        /* \"#utility.yul\":20116:20119   */\n      0x80\n        /* \"#utility.yul\":20105:20114   */\n      dup3\n        /* \"#utility.yul\":20101:20120   */\n      add\n        /* \"#utility.yul\":20093:20120   */\n      swap1\n      pop\n        /* \"#utility.yul\":20130:20201   */\n      tag_701\n        /* \"#utility.yul\":20198:20199   */\n      0x00\n        /* \"#utility.yul\":20187:20196   */\n      dup4\n        /* \"#utility.yul\":20183:20200   */\n      add\n        /* \"#utility.yul\":20174:20180   */\n      dup8\n        /* \"#utility.yul\":20130:20201   */\n      tag_435\n      jump\t// in\n    tag_701:\n        /* \"#utility.yul\":20211:20283   */\n      tag_702\n        /* \"#utility.yul\":20279:20281   */\n      0x20\n        /* \"#utility.yul\":20268:20277   */\n      dup4\n        /* \"#utility.yul\":20264:20282   */\n      add\n        /* \"#utility.yul\":20255:20261   */\n      dup7\n        /* \"#utility.yul\":20211:20283   */\n      tag_435\n      jump\t// in\n    tag_702:\n        /* \"#utility.yul\":20293:20365   */\n      tag_703\n        /* \"#utility.yul\":20361:20363   */\n      0x40\n        /* \"#utility.yul\":20350:20359   */\n      dup4\n        /* \"#utility.yul\":20346:20364   */\n      add\n        /* \"#utility.yul\":20337:20343   */\n      dup6\n        /* \"#utility.yul\":20293:20365   */\n      tag_438\n      jump\t// in\n    tag_703:\n        /* \"#utility.yul\":20412:20421   */\n      dup2\n        /* \"#utility.yul\":20406:20410   */\n      dup2\n        /* \"#utility.yul\":20402:20422   */\n      sub\n        /* \"#utility.yul\":20397:20399   */\n      0x60\n        /* \"#utility.yul\":20386:20395   */\n      dup4\n        /* \"#utility.yul\":20382:20400   */\n      add\n        /* \"#utility.yul\":20375:20423   */\n      mstore\n        /* \"#utility.yul\":20440:20516   */\n      tag_704\n        /* \"#utility.yul\":20511:20515   */\n      dup2\n        /* \"#utility.yul\":20502:20508   */\n      dup5\n        /* \"#utility.yul\":20440:20516   */\n      tag_469\n      jump\t// in\n    tag_704:\n        /* \"#utility.yul\":20432:20516   */\n      swap1\n      pop\n        /* \"#utility.yul\":19883:20523   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20529:20670   */\n    tag_470:\n        /* \"#utility.yul\":20585:20590   */\n      0x00\n        /* \"#utility.yul\":20616:20622   */\n      dup2\n        /* \"#utility.yul\":20610:20623   */\n      mload\n        /* \"#utility.yul\":20601:20623   */\n      swap1\n      pop\n        /* \"#utility.yul\":20632:20664   */\n      tag_706\n        /* \"#utility.yul\":20658:20663   */\n      dup2\n        /* \"#utility.yul\":20632:20664   */\n      tag_421\n      jump\t// in\n    tag_706:\n        /* \"#utility.yul\":20529:20670   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20676:21025   */\n    tag_279:\n        /* \"#utility.yul\":20745:20751   */\n      0x00\n        /* \"#utility.yul\":20794:20796   */\n      0x20\n        /* \"#utility.yul\":20782:20791   */\n      dup3\n        /* \"#utility.yul\":20773:20780   */\n      dup5\n        /* \"#utility.yul\":20769:20792   */\n      sub\n        /* \"#utility.yul\":20765:20797   */\n      slt\n        /* \"#utility.yul\":20762:20881   */\n      iszero\n      tag_708\n      jumpi\n        /* \"#utility.yul\":20800:20879   */\n      tag_709\n      tag_418\n      jump\t// in\n    tag_709:\n        /* \"#utility.yul\":20762:20881   */\n    tag_708:\n        /* \"#utility.yul\":20920:20921   */\n      0x00\n        /* \"#utility.yul\":20945:21008   */\n      tag_710\n        /* \"#utility.yul\":21000:21007   */\n      dup5\n        /* \"#utility.yul\":20991:20997   */\n      dup3\n        /* \"#utility.yul\":20980:20989   */\n      dup6\n        /* \"#utility.yul\":20976:20998   */\n      add\n        /* \"#utility.yul\":20945:21008   */\n      tag_470\n      jump\t// in\n    tag_710:\n        /* \"#utility.yul\":20935:21008   */\n      swap2\n      pop\n        /* \"#utility.yul\":20891:21018   */\n      pop\n        /* \"#utility.yul\":20676:21025   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21031:21211   */\n    tag_304:\n        /* \"#utility.yul\":21079:21156   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":21076:21077   */\n      0x00\n        /* \"#utility.yul\":21069:21157   */\n      mstore\n        /* \"#utility.yul\":21176:21180   */\n      0x12\n        /* \"#utility.yul\":21173:21174   */\n      0x04\n        /* \"#utility.yul\":21166:21181   */\n      mstore\n        /* \"#utility.yul\":21200:21204   */\n      0x24\n        /* \"#utility.yul\":21197:21198   */\n      0x00\n        /* \"#utility.yul\":21190:21205   */\n      revert\n        /* \"#utility.yul\":21217:21397   */\n    tag_471:\n        /* \"#utility.yul\":21265:21342   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":21262:21263   */\n      0x00\n        /* \"#utility.yul\":21255:21343   */\n      mstore\n        /* \"#utility.yul\":21362:21366   */\n      0x11\n        /* \"#utility.yul\":21359:21360   */\n      0x04\n        /* \"#utility.yul\":21352:21367   */\n      mstore\n        /* \"#utility.yul\":21386:21390   */\n      0x24\n        /* \"#utility.yul\":21383:21384   */\n      0x00\n        /* \"#utility.yul\":21376:21391   */\n      revert\n        /* \"#utility.yul\":21403:21597   */\n    tag_340:\n        /* \"#utility.yul\":21443:21447   */\n      0x00\n        /* \"#utility.yul\":21463:21483   */\n      tag_714\n        /* \"#utility.yul\":21481:21482   */\n      dup3\n        /* \"#utility.yul\":21463:21483   */\n      tag_430\n      jump\t// in\n    tag_714:\n        /* \"#utility.yul\":21458:21483   */\n      swap2\n      pop\n        /* \"#utility.yul\":21497:21517   */\n      tag_715\n        /* \"#utility.yul\":21515:21516   */\n      dup4\n        /* \"#utility.yul\":21497:21517   */\n      tag_430\n      jump\t// in\n    tag_715:\n        /* \"#utility.yul\":21492:21517   */\n      swap3\n      pop\n        /* \"#utility.yul\":21541:21542   */\n      dup3\n        /* \"#utility.yul\":21538:21539   */\n      dup3\n        /* \"#utility.yul\":21534:21543   */\n      sub\n        /* \"#utility.yul\":21526:21543   */\n      swap1\n      pop\n        /* \"#utility.yul\":21565:21566   */\n      dup2\n        /* \"#utility.yul\":21559:21563   */\n      dup2\n        /* \"#utility.yul\":21556:21567   */\n      gt\n        /* \"#utility.yul\":21553:21590   */\n      iszero\n      tag_716\n      jumpi\n        /* \"#utility.yul\":21570:21588   */\n      tag_717\n      tag_471\n      jump\t// in\n    tag_717:\n        /* \"#utility.yul\":21553:21590   */\n    tag_716:\n        /* \"#utility.yul\":21403:21597   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21603:21783   */\n    tag_349:\n        /* \"#utility.yul\":21651:21728   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":21648:21649   */\n      0x00\n        /* \"#utility.yul\":21641:21729   */\n      mstore\n        /* \"#utility.yul\":21748:21752   */\n      0x31\n        /* \"#utility.yul\":21745:21746   */\n      0x04\n        /* \"#utility.yul\":21738:21753   */\n      mstore\n        /* \"#utility.yul\":21772:21776   */\n      0x24\n        /* \"#utility.yul\":21769:21770   */\n      0x00\n        /* \"#utility.yul\":21762:21777   */\n      revert\n        /* \"#utility.yul\":21789:21930   */\n    tag_472:\n        /* \"#utility.yul\":21838:21842   */\n      0x00\n        /* \"#utility.yul\":21861:21864   */\n      dup2\n        /* \"#utility.yul\":21853:21864   */\n      swap1\n      pop\n        /* \"#utility.yul\":21884:21887   */\n      dup2\n        /* \"#utility.yul\":21881:21882   */\n      0x00\n        /* \"#utility.yul\":21874:21888   */\n      mstore\n        /* \"#utility.yul\":21918:21922   */\n      0x20\n        /* \"#utility.yul\":21915:21916   */\n      0x00\n        /* \"#utility.yul\":21905:21923   */\n      keccak256\n        /* \"#utility.yul\":21897:21923   */\n      swap1\n      pop\n        /* \"#utility.yul\":21789:21930   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21936:22029   */\n    tag_473:\n        /* \"#utility.yul\":21973:21979   */\n      0x00\n        /* \"#utility.yul\":22020:22022   */\n      0x20\n        /* \"#utility.yul\":22015:22017   */\n      0x1f\n        /* \"#utility.yul\":22008:22013   */\n      dup4\n        /* \"#utility.yul\":22004:22018   */\n      add\n        /* \"#utility.yul\":22000:22023   */\n      div\n        /* \"#utility.yul\":21990:22023   */\n      swap1\n      pop\n        /* \"#utility.yul\":21936:22029   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22035:22142   */\n    tag_474:\n        /* \"#utility.yul\":22079:22087   */\n      0x00\n        /* \"#utility.yul\":22129:22134   */\n      dup3\n        /* \"#utility.yul\":22123:22127   */\n      dup3\n        /* \"#utility.yul\":22119:22135   */\n      shl\n        /* \"#utility.yul\":22098:22135   */\n      swap1\n      pop\n        /* \"#utility.yul\":22035:22142   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22148:22541   */\n    tag_475:\n        /* \"#utility.yul\":22217:22223   */\n      0x00\n        /* \"#utility.yul\":22267:22268   */\n      0x08\n        /* \"#utility.yul\":22255:22265   */\n      dup4\n        /* \"#utility.yul\":22251:22269   */\n      mul\n        /* \"#utility.yul\":22290:22387   */\n      tag_723\n        /* \"#utility.yul\":22320:22386   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":22309:22318   */\n      dup3\n        /* \"#utility.yul\":22290:22387   */\n      tag_474\n      jump\t// in\n    tag_723:\n        /* \"#utility.yul\":22408:22447   */\n      tag_724\n        /* \"#utility.yul\":22438:22446   */\n      dup7\n        /* \"#utility.yul\":22427:22436   */\n      dup4\n        /* \"#utility.yul\":22408:22447   */\n      tag_474\n      jump\t// in\n    tag_724:\n        /* \"#utility.yul\":22396:22447   */\n      swap6\n      pop\n        /* \"#utility.yul\":22480:22484   */\n      dup1\n        /* \"#utility.yul\":22476:22485   */\n      not\n        /* \"#utility.yul\":22469:22474   */\n      dup5\n        /* \"#utility.yul\":22465:22486   */\n      and\n        /* \"#utility.yul\":22456:22486   */\n      swap4\n      pop\n        /* \"#utility.yul\":22529:22533   */\n      dup1\n        /* \"#utility.yul\":22519:22527   */\n      dup7\n        /* \"#utility.yul\":22515:22534   */\n      and\n        /* \"#utility.yul\":22508:22513   */\n      dup5\n        /* \"#utility.yul\":22505:22535   */\n      or\n        /* \"#utility.yul\":22495:22535   */\n      swap3\n      pop\n        /* \"#utility.yul\":22224:22541   */\n      pop\n      pop\n        /* \"#utility.yul\":22148:22541   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22547:22607   */\n    tag_476:\n        /* \"#utility.yul\":22575:22578   */\n      0x00\n        /* \"#utility.yul\":22596:22601   */\n      dup2\n        /* \"#utility.yul\":22589:22601   */\n      swap1\n      pop\n        /* \"#utility.yul\":22547:22607   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22613:22755   */\n    tag_477:\n        /* \"#utility.yul\":22663:22672   */\n      0x00\n        /* \"#utility.yul\":22696:22749   */\n      tag_727\n        /* \"#utility.yul\":22714:22748   */\n      tag_728\n        /* \"#utility.yul\":22723:22747   */\n      tag_729\n        /* \"#utility.yul\":22741:22746   */\n      dup5\n        /* \"#utility.yul\":22723:22747   */\n      tag_430\n      jump\t// in\n    tag_729:\n        /* \"#utility.yul\":22714:22748   */\n      tag_476\n      jump\t// in\n    tag_728:\n        /* \"#utility.yul\":22696:22749   */\n      tag_430\n      jump\t// in\n    tag_727:\n        /* \"#utility.yul\":22683:22749   */\n      swap1\n      pop\n        /* \"#utility.yul\":22613:22755   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22761:22836   */\n    tag_478:\n        /* \"#utility.yul\":22804:22807   */\n      0x00\n        /* \"#utility.yul\":22825:22830   */\n      dup2\n        /* \"#utility.yul\":22818:22830   */\n      swap1\n      pop\n        /* \"#utility.yul\":22761:22836   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22842:23111   */\n    tag_479:\n        /* \"#utility.yul\":22952:22991   */\n      tag_732\n        /* \"#utility.yul\":22983:22990   */\n      dup4\n        /* \"#utility.yul\":22952:22991   */\n      tag_477\n      jump\t// in\n    tag_732:\n        /* \"#utility.yul\":23013:23104   */\n      tag_733\n        /* \"#utility.yul\":23062:23103   */\n      tag_734\n        /* \"#utility.yul\":23086:23102   */\n      dup3\n        /* \"#utility.yul\":23062:23103   */\n      tag_478\n      jump\t// in\n    tag_734:\n        /* \"#utility.yul\":23054:23060   */\n      dup5\n        /* \"#utility.yul\":23047:23051   */\n      dup5\n        /* \"#utility.yul\":23041:23052   */\n      sload\n        /* \"#utility.yul\":23013:23104   */\n      tag_475\n      jump\t// in\n    tag_733:\n        /* \"#utility.yul\":23007:23011   */\n      dup3\n        /* \"#utility.yul\":23000:23105   */\n      sstore\n        /* \"#utility.yul\":22918:23111   */\n      pop\n        /* \"#utility.yul\":22842:23111   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23117:23190   */\n    tag_480:\n        /* \"#utility.yul\":23162:23165   */\n      0x00\n        /* \"#utility.yul\":23117:23190   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":23196:23385   */\n    tag_481:\n        /* \"#utility.yul\":23273:23305   */\n      tag_737\n      tag_480\n      jump\t// in\n    tag_737:\n        /* \"#utility.yul\":23314:23379   */\n      tag_738\n        /* \"#utility.yul\":23372:23378   */\n      dup2\n        /* \"#utility.yul\":23364:23370   */\n      dup5\n        /* \"#utility.yul\":23358:23362   */\n      dup5\n        /* \"#utility.yul\":23314:23379   */\n      tag_479\n      jump\t// in\n    tag_738:\n        /* \"#utility.yul\":23249:23385   */\n      pop\n        /* \"#utility.yul\":23196:23385   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23391:23577   */\n    tag_482:\n        /* \"#utility.yul\":23451:23571   */\n    tag_740:\n        /* \"#utility.yul\":23468:23471   */\n      dup2\n        /* \"#utility.yul\":23461:23466   */\n      dup2\n        /* \"#utility.yul\":23458:23472   */\n      lt\n        /* \"#utility.yul\":23451:23571   */\n      iszero\n      tag_742\n      jumpi\n        /* \"#utility.yul\":23522:23561   */\n      tag_743\n        /* \"#utility.yul\":23559:23560   */\n      0x00\n        /* \"#utility.yul\":23552:23557   */\n      dup3\n        /* \"#utility.yul\":23522:23561   */\n      tag_481\n      jump\t// in\n    tag_743:\n        /* \"#utility.yul\":23495:23496   */\n      0x01\n        /* \"#utility.yul\":23488:23493   */\n      dup2\n        /* \"#utility.yul\":23484:23497   */\n      add\n        /* \"#utility.yul\":23475:23497   */\n      swap1\n      pop\n        /* \"#utility.yul\":23451:23571   */\n      jump(tag_740)\n    tag_742:\n        /* \"#utility.yul\":23391:23577   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23583:24126   */\n    tag_483:\n        /* \"#utility.yul\":23684:23686   */\n      0x1f\n        /* \"#utility.yul\":23679:23682   */\n      dup3\n        /* \"#utility.yul\":23676:23687   */\n      gt\n        /* \"#utility.yul\":23673:24119   */\n      iszero\n      tag_745\n      jumpi\n        /* \"#utility.yul\":23718:23756   */\n      tag_746\n        /* \"#utility.yul\":23750:23755   */\n      dup2\n        /* \"#utility.yul\":23718:23756   */\n      tag_472\n      jump\t// in\n    tag_746:\n        /* \"#utility.yul\":23802:23831   */\n      tag_747\n        /* \"#utility.yul\":23820:23830   */\n      dup5\n        /* \"#utility.yul\":23802:23831   */\n      tag_473\n      jump\t// in\n    tag_747:\n        /* \"#utility.yul\":23792:23800   */\n      dup2\n        /* \"#utility.yul\":23788:23832   */\n      add\n        /* \"#utility.yul\":23985:23987   */\n      0x20\n        /* \"#utility.yul\":23973:23983   */\n      dup6\n        /* \"#utility.yul\":23970:23988   */\n      lt\n        /* \"#utility.yul\":23967:24016   */\n      iszero\n      tag_748\n      jumpi\n        /* \"#utility.yul\":24006:24014   */\n      dup2\n        /* \"#utility.yul\":23991:24014   */\n      swap1\n      pop\n        /* \"#utility.yul\":23967:24016   */\n    tag_748:\n        /* \"#utility.yul\":24029:24109   */\n      tag_749\n        /* \"#utility.yul\":24085:24107   */\n      tag_750\n        /* \"#utility.yul\":24103:24106   */\n      dup6\n        /* \"#utility.yul\":24085:24107   */\n      tag_473\n      jump\t// in\n    tag_750:\n        /* \"#utility.yul\":24075:24083   */\n      dup4\n        /* \"#utility.yul\":24071:24108   */\n      add\n        /* \"#utility.yul\":24058:24069   */\n      dup3\n        /* \"#utility.yul\":24029:24109   */\n      tag_482\n      jump\t// in\n    tag_749:\n        /* \"#utility.yul\":23688:24119   */\n      pop\n      pop\n        /* \"#utility.yul\":23673:24119   */\n    tag_745:\n        /* \"#utility.yul\":23583:24126   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24132:24249   */\n    tag_484:\n        /* \"#utility.yul\":24186:24194   */\n      0x00\n        /* \"#utility.yul\":24236:24241   */\n      dup3\n        /* \"#utility.yul\":24230:24234   */\n      dup3\n        /* \"#utility.yul\":24226:24242   */\n      shr\n        /* \"#utility.yul\":24205:24242   */\n      swap1\n      pop\n        /* \"#utility.yul\":24132:24249   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24255:24424   */\n    tag_485:\n        /* \"#utility.yul\":24299:24305   */\n      0x00\n        /* \"#utility.yul\":24332:24383   */\n      tag_753\n        /* \"#utility.yul\":24380:24381   */\n      0x00\n        /* \"#utility.yul\":24376:24382   */\n      not\n        /* \"#utility.yul\":24368:24373   */\n      dup5\n        /* \"#utility.yul\":24365:24366   */\n      0x08\n        /* \"#utility.yul\":24361:24374   */\n      mul\n        /* \"#utility.yul\":24332:24383   */\n      tag_484\n      jump\t// in\n    tag_753:\n        /* \"#utility.yul\":24328:24384   */\n      not\n        /* \"#utility.yul\":24413:24417   */\n      dup1\n        /* \"#utility.yul\":24407:24411   */\n      dup4\n        /* \"#utility.yul\":24403:24418   */\n      and\n        /* \"#utility.yul\":24393:24418   */\n      swap2\n      pop\n        /* \"#utility.yul\":24306:24424   */\n      pop\n        /* \"#utility.yul\":24255:24424   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24429:24724   */\n    tag_486:\n        /* \"#utility.yul\":24505:24509   */\n      0x00\n        /* \"#utility.yul\":24651:24680   */\n      tag_755\n        /* \"#utility.yul\":24676:24679   */\n      dup4\n        /* \"#utility.yul\":24670:24674   */\n      dup4\n        /* \"#utility.yul\":24651:24680   */\n      tag_485\n      jump\t// in\n    tag_755:\n        /* \"#utility.yul\":24643:24680   */\n      swap2\n      pop\n        /* \"#utility.yul\":24713:24716   */\n      dup3\n        /* \"#utility.yul\":24710:24711   */\n      0x02\n        /* \"#utility.yul\":24706:24717   */\n      mul\n        /* \"#utility.yul\":24700:24704   */\n      dup3\n        /* \"#utility.yul\":24697:24718   */\n      or\n        /* \"#utility.yul\":24689:24718   */\n      swap1\n      pop\n        /* \"#utility.yul\":24429:24724   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24729:26124   */\n    tag_403:\n        /* \"#utility.yul\":24846:24883   */\n      tag_757\n        /* \"#utility.yul\":24879:24882   */\n      dup3\n        /* \"#utility.yul\":24846:24883   */\n      tag_425\n      jump\t// in\n    tag_757:\n        /* \"#utility.yul\":24948:24966   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":24940:24946   */\n      dup2\n        /* \"#utility.yul\":24937:24967   */\n      gt\n        /* \"#utility.yul\":24934:24990   */\n      iszero\n      tag_758\n      jumpi\n        /* \"#utility.yul\":24970:24988   */\n      tag_759\n      tag_298\n      jump\t// in\n    tag_759:\n        /* \"#utility.yul\":24934:24990   */\n    tag_758:\n        /* \"#utility.yul\":25014:25052   */\n      tag_760\n        /* \"#utility.yul\":25046:25050   */\n      dup3\n        /* \"#utility.yul\":25040:25051   */\n      sload\n        /* \"#utility.yul\":25014:25052   */\n      tag_123\n      jump\t// in\n    tag_760:\n        /* \"#utility.yul\":25099:25166   */\n      tag_761\n        /* \"#utility.yul\":25159:25165   */\n      dup3\n        /* \"#utility.yul\":25151:25157   */\n      dup3\n        /* \"#utility.yul\":25145:25149   */\n      dup6\n        /* \"#utility.yul\":25099:25166   */\n      tag_483\n      jump\t// in\n    tag_761:\n        /* \"#utility.yul\":25193:25194   */\n      0x00\n        /* \"#utility.yul\":25217:25221   */\n      0x20\n        /* \"#utility.yul\":25204:25221   */\n      swap1\n      pop\n        /* \"#utility.yul\":25249:25251   */\n      0x1f\n        /* \"#utility.yul\":25241:25247   */\n      dup4\n        /* \"#utility.yul\":25238:25252   */\n      gt\n        /* \"#utility.yul\":25266:25267   */\n      0x01\n        /* \"#utility.yul\":25261:25879   */\n      dup2\n      eq\n      tag_763\n      jumpi\n        /* \"#utility.yul\":25923:25924   */\n      0x00\n        /* \"#utility.yul\":25940:25946   */\n      dup5\n        /* \"#utility.yul\":25937:26014   */\n      iszero\n      tag_764\n      jumpi\n        /* \"#utility.yul\":25989:25998   */\n      dup3\n        /* \"#utility.yul\":25984:25987   */\n      dup8\n        /* \"#utility.yul\":25980:25999   */\n      add\n        /* \"#utility.yul\":25974:26000   */\n      mload\n        /* \"#utility.yul\":25965:26000   */\n      swap1\n      pop\n        /* \"#utility.yul\":25937:26014   */\n    tag_764:\n        /* \"#utility.yul\":26040:26107   */\n      tag_765\n        /* \"#utility.yul\":26100:26106   */\n      dup6\n        /* \"#utility.yul\":26093:26098   */\n      dup3\n        /* \"#utility.yul\":26040:26107   */\n      tag_486\n      jump\t// in\n    tag_765:\n        /* \"#utility.yul\":26034:26038   */\n      dup7\n        /* \"#utility.yul\":26027:26108   */\n      sstore\n        /* \"#utility.yul\":25896:26118   */\n      pop\n        /* \"#utility.yul\":25231:26118   */\n      jump(tag_762)\n        /* \"#utility.yul\":25261:25879   */\n    tag_763:\n        /* \"#utility.yul\":25313:25317   */\n      0x1f\n        /* \"#utility.yul\":25309:25318   */\n      not\n        /* \"#utility.yul\":25301:25307   */\n      dup5\n        /* \"#utility.yul\":25297:25319   */\n      and\n        /* \"#utility.yul\":25347:25384   */\n      tag_766\n        /* \"#utility.yul\":25379:25383   */\n      dup7\n        /* \"#utility.yul\":25347:25384   */\n      tag_472\n      jump\t// in\n    tag_766:\n        /* \"#utility.yul\":25406:25407   */\n      0x00\n        /* \"#utility.yul\":25420:25628   */\n    tag_767:\n        /* \"#utility.yul\":25434:25441   */\n      dup3\n        /* \"#utility.yul\":25431:25432   */\n      dup2\n        /* \"#utility.yul\":25428:25442   */\n      lt\n        /* \"#utility.yul\":25420:25628   */\n      iszero\n      tag_769\n      jumpi\n        /* \"#utility.yul\":25513:25522   */\n      dup5\n        /* \"#utility.yul\":25508:25511   */\n      dup10\n        /* \"#utility.yul\":25504:25523   */\n      add\n        /* \"#utility.yul\":25498:25524   */\n      mload\n        /* \"#utility.yul\":25490:25496   */\n      dup3\n        /* \"#utility.yul\":25483:25525   */\n      sstore\n        /* \"#utility.yul\":25564:25565   */\n      0x01\n        /* \"#utility.yul\":25556:25562   */\n      dup3\n        /* \"#utility.yul\":25552:25566   */\n      add\n        /* \"#utility.yul\":25542:25566   */\n      swap2\n      pop\n        /* \"#utility.yul\":25611:25613   */\n      0x20\n        /* \"#utility.yul\":25600:25609   */\n      dup6\n        /* \"#utility.yul\":25596:25614   */\n      add\n        /* \"#utility.yul\":25583:25614   */\n      swap5\n      pop\n        /* \"#utility.yul\":25457:25461   */\n      0x20\n        /* \"#utility.yul\":25454:25455   */\n      dup2\n        /* \"#utility.yul\":25450:25462   */\n      add\n        /* \"#utility.yul\":25445:25462   */\n      swap1\n      pop\n        /* \"#utility.yul\":25420:25628   */\n      jump(tag_767)\n    tag_769:\n        /* \"#utility.yul\":25656:25662   */\n      dup7\n        /* \"#utility.yul\":25647:25654   */\n      dup4\n        /* \"#utility.yul\":25644:25663   */\n      lt\n        /* \"#utility.yul\":25641:25820   */\n      iszero\n      tag_770\n      jumpi\n        /* \"#utility.yul\":25714:25723   */\n      dup5\n        /* \"#utility.yul\":25709:25712   */\n      dup10\n        /* \"#utility.yul\":25705:25724   */\n      add\n        /* \"#utility.yul\":25699:25725   */\n      mload\n        /* \"#utility.yul\":25757:25805   */\n      tag_771\n        /* \"#utility.yul\":25799:25803   */\n      0x1f\n        /* \"#utility.yul\":25791:25797   */\n      dup10\n        /* \"#utility.yul\":25787:25804   */\n      and\n        /* \"#utility.yul\":25776:25785   */\n      dup3\n        /* \"#utility.yul\":25757:25805   */\n      tag_485\n      jump\t// in\n    tag_771:\n        /* \"#utility.yul\":25749:25755   */\n      dup4\n        /* \"#utility.yul\":25742:25806   */\n      sstore\n        /* \"#utility.yul\":25664:25820   */\n      pop\n        /* \"#utility.yul\":25641:25820   */\n    tag_770:\n        /* \"#utility.yul\":25866:25867   */\n      0x01\n        /* \"#utility.yul\":25862:25863   */\n      0x02\n        /* \"#utility.yul\":25854:25860   */\n      dup9\n        /* \"#utility.yul\":25850:25864   */\n      mul\n        /* \"#utility.yul\":25846:25868   */\n      add\n        /* \"#utility.yul\":25840:25844   */\n      dup9\n        /* \"#utility.yul\":25833:25869   */\n      sstore\n        /* \"#utility.yul\":25268:25879   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":25231:26118   */\n    tag_762:\n      pop\n        /* \"#utility.yul\":24821:26124   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":24729:26124   */\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220e06809d39f80a7006582920d1d879ae3c27af9cb995beca63c3b95262bd5dd3264736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_3376": {
									"entryPoint": null,
									"id": 3376,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_354": {
									"entryPoint": null,
									"id": 354,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 303,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 546,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 563,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 742,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 590,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1051,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 527,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 496,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 872,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1013,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 890,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1202,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 760,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 690,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1173,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 881,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1143,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 645,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 600,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 929,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 775,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1131,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 985,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 787,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 938,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 981,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5817:17",
										"nodeType": "YulBlock",
										"src": "0:5817:17",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:81:17",
													"nodeType": "YulBlock",
													"src": "52:81:17",
													"statements": [
														{
															"nativeSrc": "62:65:17",
															"nodeType": "YulAssignment",
															"src": "62:65:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "77:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "84:42:17",
																		"nodeType": "YulLiteral",
																		"src": "84:42:17",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "73:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:17"
																},
																"nativeSrc": "73:54:17",
																"nodeType": "YulFunctionCall",
																"src": "73:54:17"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:17",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:17"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "7:126:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:17",
														"nodeType": "YulTypedName",
														"src": "34:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:17",
														"nodeType": "YulTypedName",
														"src": "44:7:17",
														"type": ""
													}
												],
												"src": "7:126:17"
											},
											{
												"body": {
													"nativeSrc": "184:51:17",
													"nodeType": "YulBlock",
													"src": "184:51:17",
													"statements": [
														{
															"nativeSrc": "194:35:17",
															"nodeType": "YulAssignment",
															"src": "194:35:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "223:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:17"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "205:17:17",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:17"
																},
																"nativeSrc": "205:24:17",
																"nodeType": "YulFunctionCall",
																"src": "205:24:17"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "194:7:17",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:17"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "139:96:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "166:5:17",
														"nodeType": "YulTypedName",
														"src": "166:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "176:7:17",
														"nodeType": "YulTypedName",
														"src": "176:7:17",
														"type": ""
													}
												],
												"src": "139:96:17"
											},
											{
												"body": {
													"nativeSrc": "306:53:17",
													"nodeType": "YulBlock",
													"src": "306:53:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "323:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "346:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:17"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "328:17:17",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:17"
																		},
																		"nativeSrc": "328:24:17",
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "316:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:17"
																},
																"nativeSrc": "316:37:17",
																"nodeType": "YulFunctionCall",
																"src": "316:37:17"
															},
															"nativeSrc": "316:37:17",
															"nodeType": "YulExpressionStatement",
															"src": "316:37:17"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "241:118:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "294:5:17",
														"nodeType": "YulTypedName",
														"src": "294:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "301:3:17",
														"nodeType": "YulTypedName",
														"src": "301:3:17",
														"type": ""
													}
												],
												"src": "241:118:17"
											},
											{
												"body": {
													"nativeSrc": "463:124:17",
													"nodeType": "YulBlock",
													"src": "463:124:17",
													"statements": [
														{
															"nativeSrc": "473:26:17",
															"nodeType": "YulAssignment",
															"src": "473:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "485:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "496:2:17",
																		"nodeType": "YulLiteral",
																		"src": "496:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "481:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:17"
																},
																"nativeSrc": "481:18:17",
																"nodeType": "YulFunctionCall",
																"src": "481:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "473:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "553:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "566:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "577:1:17",
																				"nodeType": "YulLiteral",
																				"src": "577:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "562:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:17"
																		},
																		"nativeSrc": "562:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "509:43:17",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:17"
																},
																"nativeSrc": "509:71:17",
																"nodeType": "YulFunctionCall",
																"src": "509:71:17"
															},
															"nativeSrc": "509:71:17",
															"nodeType": "YulExpressionStatement",
															"src": "509:71:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "365:222:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "435:9:17",
														"nodeType": "YulTypedName",
														"src": "435:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "447:6:17",
														"nodeType": "YulTypedName",
														"src": "447:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "458:4:17",
														"nodeType": "YulTypedName",
														"src": "458:4:17",
														"type": ""
													}
												],
												"src": "365:222:17"
											},
											{
												"body": {
													"nativeSrc": "652:40:17",
													"nodeType": "YulBlock",
													"src": "652:40:17",
													"statements": [
														{
															"nativeSrc": "663:22:17",
															"nodeType": "YulAssignment",
															"src": "663:22:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "679:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "679:5:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "673:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "673:5:17"
																},
																"nativeSrc": "673:12:17",
																"nodeType": "YulFunctionCall",
																"src": "673:12:17"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "663:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "663:6:17"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "593:99:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "635:5:17",
														"nodeType": "YulTypedName",
														"src": "635:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "645:6:17",
														"nodeType": "YulTypedName",
														"src": "645:6:17",
														"type": ""
													}
												],
												"src": "593:99:17"
											},
											{
												"body": {
													"nativeSrc": "726:152:17",
													"nodeType": "YulBlock",
													"src": "726:152:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "743:1:17",
																		"nodeType": "YulLiteral",
																		"src": "743:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "746:77:17",
																		"nodeType": "YulLiteral",
																		"src": "746:77:17",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "736:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "736:6:17"
																},
																"nativeSrc": "736:88:17",
																"nodeType": "YulFunctionCall",
																"src": "736:88:17"
															},
															"nativeSrc": "736:88:17",
															"nodeType": "YulExpressionStatement",
															"src": "736:88:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "840:1:17",
																		"nodeType": "YulLiteral",
																		"src": "840:1:17",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "843:4:17",
																		"nodeType": "YulLiteral",
																		"src": "843:4:17",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "833:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "833:6:17"
																},
																"nativeSrc": "833:15:17",
																"nodeType": "YulFunctionCall",
																"src": "833:15:17"
															},
															"nativeSrc": "833:15:17",
															"nodeType": "YulExpressionStatement",
															"src": "833:15:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "864:1:17",
																		"nodeType": "YulLiteral",
																		"src": "864:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "867:4:17",
																		"nodeType": "YulLiteral",
																		"src": "867:4:17",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "857:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "857:6:17"
																},
																"nativeSrc": "857:15:17",
																"nodeType": "YulFunctionCall",
																"src": "857:15:17"
															},
															"nativeSrc": "857:15:17",
															"nodeType": "YulExpressionStatement",
															"src": "857:15:17"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "698:180:17",
												"nodeType": "YulFunctionDefinition",
												"src": "698:180:17"
											},
											{
												"body": {
													"nativeSrc": "912:152:17",
													"nodeType": "YulBlock",
													"src": "912:152:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "929:1:17",
																		"nodeType": "YulLiteral",
																		"src": "929:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "932:77:17",
																		"nodeType": "YulLiteral",
																		"src": "932:77:17",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "922:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "922:6:17"
																},
																"nativeSrc": "922:88:17",
																"nodeType": "YulFunctionCall",
																"src": "922:88:17"
															},
															"nativeSrc": "922:88:17",
															"nodeType": "YulExpressionStatement",
															"src": "922:88:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1026:1:17",
																		"nodeType": "YulLiteral",
																		"src": "1026:1:17",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1029:4:17",
																		"nodeType": "YulLiteral",
																		"src": "1029:4:17",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1019:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "1019:6:17"
																},
																"nativeSrc": "1019:15:17",
																"nodeType": "YulFunctionCall",
																"src": "1019:15:17"
															},
															"nativeSrc": "1019:15:17",
															"nodeType": "YulExpressionStatement",
															"src": "1019:15:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1050:1:17",
																		"nodeType": "YulLiteral",
																		"src": "1050:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1053:4:17",
																		"nodeType": "YulLiteral",
																		"src": "1053:4:17",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1043:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "1043:6:17"
																},
																"nativeSrc": "1043:15:17",
																"nodeType": "YulFunctionCall",
																"src": "1043:15:17"
															},
															"nativeSrc": "1043:15:17",
															"nodeType": "YulExpressionStatement",
															"src": "1043:15:17"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "884:180:17",
												"nodeType": "YulFunctionDefinition",
												"src": "884:180:17"
											},
											{
												"body": {
													"nativeSrc": "1121:269:17",
													"nodeType": "YulBlock",
													"src": "1121:269:17",
													"statements": [
														{
															"nativeSrc": "1131:22:17",
															"nodeType": "YulAssignment",
															"src": "1131:22:17",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1145:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "1145:4:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1151:1:17",
																		"nodeType": "YulLiteral",
																		"src": "1151:1:17",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1141:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "1141:3:17"
																},
																"nativeSrc": "1141:12:17",
																"nodeType": "YulFunctionCall",
																"src": "1141:12:17"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1131:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "1131:6:17"
																}
															]
														},
														{
															"nativeSrc": "1162:38:17",
															"nodeType": "YulVariableDeclaration",
															"src": "1162:38:17",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1192:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "1192:4:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1198:1:17",
																		"nodeType": "YulLiteral",
																		"src": "1198:1:17",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1188:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "1188:3:17"
																},
																"nativeSrc": "1188:12:17",
																"nodeType": "YulFunctionCall",
																"src": "1188:12:17"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "1166:18:17",
																	"nodeType": "YulTypedName",
																	"src": "1166:18:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1239:51:17",
																"nodeType": "YulBlock",
																"src": "1239:51:17",
																"statements": [
																	{
																		"nativeSrc": "1253:27:17",
																		"nodeType": "YulAssignment",
																		"src": "1253:27:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "1267:6:17",
																					"nodeType": "YulIdentifier",
																					"src": "1267:6:17"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1275:4:17",
																					"nodeType": "YulLiteral",
																					"src": "1275:4:17",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "1263:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "1263:3:17"
																			},
																			"nativeSrc": "1263:17:17",
																			"nodeType": "YulFunctionCall",
																			"src": "1263:17:17"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "1253:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "1253:6:17"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1219:18:17",
																		"nodeType": "YulIdentifier",
																		"src": "1219:18:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1212:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:17"
																},
																"nativeSrc": "1212:26:17",
																"nodeType": "YulFunctionCall",
																"src": "1212:26:17"
															},
															"nativeSrc": "1209:81:17",
															"nodeType": "YulIf",
															"src": "1209:81:17"
														},
														{
															"body": {
																"nativeSrc": "1342:42:17",
																"nodeType": "YulBlock",
																"src": "1342:42:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "1356:16:17",
																				"nodeType": "YulIdentifier",
																				"src": "1356:16:17"
																			},
																			"nativeSrc": "1356:18:17",
																			"nodeType": "YulFunctionCall",
																			"src": "1356:18:17"
																		},
																		"nativeSrc": "1356:18:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "1356:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1306:18:17",
																		"nodeType": "YulIdentifier",
																		"src": "1306:18:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1329:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "1329:6:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1337:2:17",
																				"nodeType": "YulLiteral",
																				"src": "1337:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1326:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "1326:2:17"
																		},
																		"nativeSrc": "1326:14:17",
																		"nodeType": "YulFunctionCall",
																		"src": "1326:14:17"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "1303:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "1303:2:17"
																},
																"nativeSrc": "1303:38:17",
																"nodeType": "YulFunctionCall",
																"src": "1303:38:17"
															},
															"nativeSrc": "1300:84:17",
															"nodeType": "YulIf",
															"src": "1300:84:17"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "1070:320:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1105:4:17",
														"nodeType": "YulTypedName",
														"src": "1105:4:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1114:6:17",
														"nodeType": "YulTypedName",
														"src": "1114:6:17",
														"type": ""
													}
												],
												"src": "1070:320:17"
											},
											{
												"body": {
													"nativeSrc": "1450:87:17",
													"nodeType": "YulBlock",
													"src": "1450:87:17",
													"statements": [
														{
															"nativeSrc": "1460:11:17",
															"nodeType": "YulAssignment",
															"src": "1460:11:17",
															"value": {
																"name": "ptr",
																"nativeSrc": "1468:3:17",
																"nodeType": "YulIdentifier",
																"src": "1468:3:17"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "1460:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "1460:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1488:1:17",
																		"nodeType": "YulLiteral",
																		"src": "1488:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "1491:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "1491:3:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1481:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "1481:6:17"
																},
																"nativeSrc": "1481:14:17",
																"nodeType": "YulFunctionCall",
																"src": "1481:14:17"
															},
															"nativeSrc": "1481:14:17",
															"nodeType": "YulExpressionStatement",
															"src": "1481:14:17"
														},
														{
															"nativeSrc": "1504:26:17",
															"nodeType": "YulAssignment",
															"src": "1504:26:17",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1522:1:17",
																		"nodeType": "YulLiteral",
																		"src": "1522:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1525:4:17",
																		"nodeType": "YulLiteral",
																		"src": "1525:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "1512:9:17",
																	"nodeType": "YulIdentifier",
																	"src": "1512:9:17"
																},
																"nativeSrc": "1512:18:17",
																"nodeType": "YulFunctionCall",
																"src": "1512:18:17"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "1504:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "1504:4:17"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "1396:141:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "1437:3:17",
														"nodeType": "YulTypedName",
														"src": "1437:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "1445:4:17",
														"nodeType": "YulTypedName",
														"src": "1445:4:17",
														"type": ""
													}
												],
												"src": "1396:141:17"
											},
											{
												"body": {
													"nativeSrc": "1587:49:17",
													"nodeType": "YulBlock",
													"src": "1587:49:17",
													"statements": [
														{
															"nativeSrc": "1597:33:17",
															"nodeType": "YulAssignment",
															"src": "1597:33:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1615:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "1615:5:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1622:2:17",
																				"nodeType": "YulLiteral",
																				"src": "1622:2:17",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1611:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "1611:3:17"
																		},
																		"nativeSrc": "1611:14:17",
																		"nodeType": "YulFunctionCall",
																		"src": "1611:14:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1627:2:17",
																		"nodeType": "YulLiteral",
																		"src": "1627:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1607:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "1607:3:17"
																},
																"nativeSrc": "1607:23:17",
																"nodeType": "YulFunctionCall",
																"src": "1607:23:17"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1597:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "1597:6:17"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "1543:93:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1570:5:17",
														"nodeType": "YulTypedName",
														"src": "1570:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1580:6:17",
														"nodeType": "YulTypedName",
														"src": "1580:6:17",
														"type": ""
													}
												],
												"src": "1543:93:17"
											},
											{
												"body": {
													"nativeSrc": "1695:54:17",
													"nodeType": "YulBlock",
													"src": "1695:54:17",
													"statements": [
														{
															"nativeSrc": "1705:37:17",
															"nodeType": "YulAssignment",
															"src": "1705:37:17",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "1730:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "1730:4:17"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "1736:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "1736:5:17"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "1726:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "1726:3:17"
																},
																"nativeSrc": "1726:16:17",
																"nodeType": "YulFunctionCall",
																"src": "1726:16:17"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "1705:8:17",
																	"nodeType": "YulIdentifier",
																	"src": "1705:8:17"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "1642:107:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "1670:4:17",
														"nodeType": "YulTypedName",
														"src": "1670:4:17",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "1676:5:17",
														"nodeType": "YulTypedName",
														"src": "1676:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "1686:8:17",
														"nodeType": "YulTypedName",
														"src": "1686:8:17",
														"type": ""
													}
												],
												"src": "1642:107:17"
											},
											{
												"body": {
													"nativeSrc": "1831:317:17",
													"nodeType": "YulBlock",
													"src": "1831:317:17",
													"statements": [
														{
															"nativeSrc": "1841:35:17",
															"nodeType": "YulVariableDeclaration",
															"src": "1841:35:17",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "1862:10:17",
																		"nodeType": "YulIdentifier",
																		"src": "1862:10:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1874:1:17",
																		"nodeType": "YulLiteral",
																		"src": "1874:1:17",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "1858:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "1858:3:17"
																},
																"nativeSrc": "1858:18:17",
																"nodeType": "YulFunctionCall",
																"src": "1858:18:17"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "1845:9:17",
																	"nodeType": "YulTypedName",
																	"src": "1845:9:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1885:109:17",
															"nodeType": "YulVariableDeclaration",
															"src": "1885:109:17",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1916:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "1916:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1927:66:17",
																		"nodeType": "YulLiteral",
																		"src": "1927:66:17",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1897:18:17",
																	"nodeType": "YulIdentifier",
																	"src": "1897:18:17"
																},
																"nativeSrc": "1897:97:17",
																"nodeType": "YulFunctionCall",
																"src": "1897:97:17"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "1889:4:17",
																	"nodeType": "YulTypedName",
																	"src": "1889:4:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2003:51:17",
															"nodeType": "YulAssignment",
															"src": "2003:51:17",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2034:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "2034:9:17"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "2045:8:17",
																		"nodeType": "YulIdentifier",
																		"src": "2045:8:17"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2015:18:17",
																	"nodeType": "YulIdentifier",
																	"src": "2015:18:17"
																},
																"nativeSrc": "2015:39:17",
																"nodeType": "YulFunctionCall",
																"src": "2015:39:17"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "2003:8:17",
																	"nodeType": "YulIdentifier",
																	"src": "2003:8:17"
																}
															]
														},
														{
															"nativeSrc": "2063:30:17",
															"nodeType": "YulAssignment",
															"src": "2063:30:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2076:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "2076:5:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "2087:4:17",
																				"nodeType": "YulIdentifier",
																				"src": "2087:4:17"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2083:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "2083:3:17"
																		},
																		"nativeSrc": "2083:9:17",
																		"nodeType": "YulFunctionCall",
																		"src": "2083:9:17"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2072:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "2072:3:17"
																},
																"nativeSrc": "2072:21:17",
																"nodeType": "YulFunctionCall",
																"src": "2072:21:17"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2063:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "2063:5:17"
																}
															]
														},
														{
															"nativeSrc": "2102:40:17",
															"nodeType": "YulAssignment",
															"src": "2102:40:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2115:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "2115:5:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "2126:8:17",
																				"nodeType": "YulIdentifier",
																				"src": "2126:8:17"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "2136:4:17",
																				"nodeType": "YulIdentifier",
																				"src": "2136:4:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2122:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "2122:3:17"
																		},
																		"nativeSrc": "2122:19:17",
																		"nodeType": "YulFunctionCall",
																		"src": "2122:19:17"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2112:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "2112:2:17"
																},
																"nativeSrc": "2112:30:17",
																"nodeType": "YulFunctionCall",
																"src": "2112:30:17"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2102:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "2102:6:17"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "1755:393:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1792:5:17",
														"nodeType": "YulTypedName",
														"src": "1792:5:17",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "1799:10:17",
														"nodeType": "YulTypedName",
														"src": "1799:10:17",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "1811:8:17",
														"nodeType": "YulTypedName",
														"src": "1811:8:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1824:6:17",
														"nodeType": "YulTypedName",
														"src": "1824:6:17",
														"type": ""
													}
												],
												"src": "1755:393:17"
											},
											{
												"body": {
													"nativeSrc": "2199:32:17",
													"nodeType": "YulBlock",
													"src": "2199:32:17",
													"statements": [
														{
															"nativeSrc": "2209:16:17",
															"nodeType": "YulAssignment",
															"src": "2209:16:17",
															"value": {
																"name": "value",
																"nativeSrc": "2220:5:17",
																"nodeType": "YulIdentifier",
																"src": "2220:5:17"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2209:7:17",
																	"nodeType": "YulIdentifier",
																	"src": "2209:7:17"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2154:77:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2181:5:17",
														"nodeType": "YulTypedName",
														"src": "2181:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2191:7:17",
														"nodeType": "YulTypedName",
														"src": "2191:7:17",
														"type": ""
													}
												],
												"src": "2154:77:17"
											},
											{
												"body": {
													"nativeSrc": "2269:28:17",
													"nodeType": "YulBlock",
													"src": "2269:28:17",
													"statements": [
														{
															"nativeSrc": "2279:12:17",
															"nodeType": "YulAssignment",
															"src": "2279:12:17",
															"value": {
																"name": "value",
																"nativeSrc": "2286:5:17",
																"nodeType": "YulIdentifier",
																"src": "2286:5:17"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2279:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "2279:3:17"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "2237:60:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2255:5:17",
														"nodeType": "YulTypedName",
														"src": "2255:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2265:3:17",
														"nodeType": "YulTypedName",
														"src": "2265:3:17",
														"type": ""
													}
												],
												"src": "2237:60:17"
											},
											{
												"body": {
													"nativeSrc": "2363:82:17",
													"nodeType": "YulBlock",
													"src": "2363:82:17",
													"statements": [
														{
															"nativeSrc": "2373:66:17",
															"nodeType": "YulAssignment",
															"src": "2373:66:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2431:5:17",
																						"nodeType": "YulIdentifier",
																						"src": "2431:5:17"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2413:17:17",
																					"nodeType": "YulIdentifier",
																					"src": "2413:17:17"
																				},
																				"nativeSrc": "2413:24:17",
																				"nodeType": "YulFunctionCall",
																				"src": "2413:24:17"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "2404:8:17",
																			"nodeType": "YulIdentifier",
																			"src": "2404:8:17"
																		},
																		"nativeSrc": "2404:34:17",
																		"nodeType": "YulFunctionCall",
																		"src": "2404:34:17"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2386:17:17",
																	"nodeType": "YulIdentifier",
																	"src": "2386:17:17"
																},
																"nativeSrc": "2386:53:17",
																"nodeType": "YulFunctionCall",
																"src": "2386:53:17"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2373:9:17",
																	"nodeType": "YulIdentifier",
																	"src": "2373:9:17"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "2303:142:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2343:5:17",
														"nodeType": "YulTypedName",
														"src": "2343:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2353:9:17",
														"nodeType": "YulTypedName",
														"src": "2353:9:17",
														"type": ""
													}
												],
												"src": "2303:142:17"
											},
											{
												"body": {
													"nativeSrc": "2498:28:17",
													"nodeType": "YulBlock",
													"src": "2498:28:17",
													"statements": [
														{
															"nativeSrc": "2508:12:17",
															"nodeType": "YulAssignment",
															"src": "2508:12:17",
															"value": {
																"name": "value",
																"nativeSrc": "2515:5:17",
																"nodeType": "YulIdentifier",
																"src": "2515:5:17"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2508:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "2508:3:17"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "2451:75:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2484:5:17",
														"nodeType": "YulTypedName",
														"src": "2484:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2494:3:17",
														"nodeType": "YulTypedName",
														"src": "2494:3:17",
														"type": ""
													}
												],
												"src": "2451:75:17"
											},
											{
												"body": {
													"nativeSrc": "2608:193:17",
													"nodeType": "YulBlock",
													"src": "2608:193:17",
													"statements": [
														{
															"nativeSrc": "2618:63:17",
															"nodeType": "YulVariableDeclaration",
															"src": "2618:63:17",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "2673:7:17",
																		"nodeType": "YulIdentifier",
																		"src": "2673:7:17"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "2642:30:17",
																	"nodeType": "YulIdentifier",
																	"src": "2642:30:17"
																},
																"nativeSrc": "2642:39:17",
																"nodeType": "YulFunctionCall",
																"src": "2642:39:17"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "2622:16:17",
																	"nodeType": "YulTypedName",
																	"src": "2622:16:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2697:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "2697:4:17"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "2737:4:17",
																						"nodeType": "YulIdentifier",
																						"src": "2737:4:17"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "2731:5:17",
																					"nodeType": "YulIdentifier",
																					"src": "2731:5:17"
																				},
																				"nativeSrc": "2731:11:17",
																				"nodeType": "YulFunctionCall",
																				"src": "2731:11:17"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "2744:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "2744:6:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "2776:16:17",
																						"nodeType": "YulIdentifier",
																						"src": "2776:16:17"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "2752:23:17",
																					"nodeType": "YulIdentifier",
																					"src": "2752:23:17"
																				},
																				"nativeSrc": "2752:41:17",
																				"nodeType": "YulFunctionCall",
																				"src": "2752:41:17"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "2703:27:17",
																			"nodeType": "YulIdentifier",
																			"src": "2703:27:17"
																		},
																		"nativeSrc": "2703:91:17",
																		"nodeType": "YulFunctionCall",
																		"src": "2703:91:17"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "2690:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "2690:6:17"
																},
																"nativeSrc": "2690:105:17",
																"nodeType": "YulFunctionCall",
																"src": "2690:105:17"
															},
															"nativeSrc": "2690:105:17",
															"nodeType": "YulExpressionStatement",
															"src": "2690:105:17"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "2532:269:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2585:4:17",
														"nodeType": "YulTypedName",
														"src": "2585:4:17",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2591:6:17",
														"nodeType": "YulTypedName",
														"src": "2591:6:17",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "2599:7:17",
														"nodeType": "YulTypedName",
														"src": "2599:7:17",
														"type": ""
													}
												],
												"src": "2532:269:17"
											},
											{
												"body": {
													"nativeSrc": "2856:24:17",
													"nodeType": "YulBlock",
													"src": "2856:24:17",
													"statements": [
														{
															"nativeSrc": "2866:8:17",
															"nodeType": "YulAssignment",
															"src": "2866:8:17",
															"value": {
																"kind": "number",
																"nativeSrc": "2873:1:17",
																"nodeType": "YulLiteral",
																"src": "2873:1:17",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2866:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "2866:3:17"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "2807:73:17",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2852:3:17",
														"nodeType": "YulTypedName",
														"src": "2852:3:17",
														"type": ""
													}
												],
												"src": "2807:73:17"
											},
											{
												"body": {
													"nativeSrc": "2939:136:17",
													"nodeType": "YulBlock",
													"src": "2939:136:17",
													"statements": [
														{
															"nativeSrc": "2949:46:17",
															"nodeType": "YulVariableDeclaration",
															"src": "2949:46:17",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "2963:30:17",
																	"nodeType": "YulIdentifier",
																	"src": "2963:30:17"
																},
																"nativeSrc": "2963:32:17",
																"nodeType": "YulFunctionCall",
																"src": "2963:32:17"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "2953:6:17",
																	"nodeType": "YulTypedName",
																	"src": "2953:6:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3048:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "3048:4:17"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "3054:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "3054:6:17"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "3062:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "3062:6:17"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "3004:43:17",
																	"nodeType": "YulIdentifier",
																	"src": "3004:43:17"
																},
																"nativeSrc": "3004:65:17",
																"nodeType": "YulFunctionCall",
																"src": "3004:65:17"
															},
															"nativeSrc": "3004:65:17",
															"nodeType": "YulExpressionStatement",
															"src": "3004:65:17"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "2886:189:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2925:4:17",
														"nodeType": "YulTypedName",
														"src": "2925:4:17",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2931:6:17",
														"nodeType": "YulTypedName",
														"src": "2931:6:17",
														"type": ""
													}
												],
												"src": "2886:189:17"
											},
											{
												"body": {
													"nativeSrc": "3131:136:17",
													"nodeType": "YulBlock",
													"src": "3131:136:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "3198:63:17",
																"nodeType": "YulBlock",
																"src": "3198:63:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "3242:5:17",
																					"nodeType": "YulIdentifier",
																					"src": "3242:5:17"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3249:1:17",
																					"nodeType": "YulLiteral",
																					"src": "3249:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "3212:29:17",
																				"nodeType": "YulIdentifier",
																				"src": "3212:29:17"
																			},
																			"nativeSrc": "3212:39:17",
																			"nodeType": "YulFunctionCall",
																			"src": "3212:39:17"
																		},
																		"nativeSrc": "3212:39:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "3212:39:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "3151:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "3151:5:17"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3158:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "3158:3:17"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "3148:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "3148:2:17"
																},
																"nativeSrc": "3148:14:17",
																"nodeType": "YulFunctionCall",
																"src": "3148:14:17"
															},
															"nativeSrc": "3141:120:17",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "3163:26:17",
																"nodeType": "YulBlock",
																"src": "3163:26:17",
																"statements": [
																	{
																		"nativeSrc": "3165:22:17",
																		"nodeType": "YulAssignment",
																		"src": "3165:22:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "3178:5:17",
																					"nodeType": "YulIdentifier",
																					"src": "3178:5:17"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3185:1:17",
																					"nodeType": "YulLiteral",
																					"src": "3185:1:17",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3174:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "3174:3:17"
																			},
																			"nativeSrc": "3174:13:17",
																			"nodeType": "YulFunctionCall",
																			"src": "3174:13:17"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "3165:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "3165:5:17"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "3145:2:17",
																"nodeType": "YulBlock",
																"src": "3145:2:17",
																"statements": []
															},
															"src": "3141:120:17"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "3081:186:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "3119:5:17",
														"nodeType": "YulTypedName",
														"src": "3119:5:17",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3126:3:17",
														"nodeType": "YulTypedName",
														"src": "3126:3:17",
														"type": ""
													}
												],
												"src": "3081:186:17"
											},
											{
												"body": {
													"nativeSrc": "3352:464:17",
													"nodeType": "YulBlock",
													"src": "3352:464:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "3378:431:17",
																"nodeType": "YulBlock",
																"src": "3378:431:17",
																"statements": [
																	{
																		"nativeSrc": "3392:54:17",
																		"nodeType": "YulVariableDeclaration",
																		"src": "3392:54:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "3440:5:17",
																					"nodeType": "YulIdentifier",
																					"src": "3440:5:17"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "3408:31:17",
																				"nodeType": "YulIdentifier",
																				"src": "3408:31:17"
																			},
																			"nativeSrc": "3408:38:17",
																			"nodeType": "YulFunctionCall",
																			"src": "3408:38:17"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "3396:8:17",
																				"nodeType": "YulTypedName",
																				"src": "3396:8:17",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "3459:63:17",
																		"nodeType": "YulVariableDeclaration",
																		"src": "3459:63:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "3482:8:17",
																					"nodeType": "YulIdentifier",
																					"src": "3482:8:17"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "3510:10:17",
																							"nodeType": "YulIdentifier",
																							"src": "3510:10:17"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "3492:17:17",
																						"nodeType": "YulIdentifier",
																						"src": "3492:17:17"
																					},
																					"nativeSrc": "3492:29:17",
																					"nodeType": "YulFunctionCall",
																					"src": "3492:29:17"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3478:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "3478:3:17"
																			},
																			"nativeSrc": "3478:44:17",
																			"nodeType": "YulFunctionCall",
																			"src": "3478:44:17"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "3463:11:17",
																				"nodeType": "YulTypedName",
																				"src": "3463:11:17",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "3679:27:17",
																			"nodeType": "YulBlock",
																			"src": "3679:27:17",
																			"statements": [
																				{
																					"nativeSrc": "3681:23:17",
																					"nodeType": "YulAssignment",
																					"src": "3681:23:17",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "3696:8:17",
																						"nodeType": "YulIdentifier",
																						"src": "3696:8:17"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "3681:11:17",
																							"nodeType": "YulIdentifier",
																							"src": "3681:11:17"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "3663:10:17",
																					"nodeType": "YulIdentifier",
																					"src": "3663:10:17"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3675:2:17",
																					"nodeType": "YulLiteral",
																					"src": "3675:2:17",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "3660:2:17",
																				"nodeType": "YulIdentifier",
																				"src": "3660:2:17"
																			},
																			"nativeSrc": "3660:18:17",
																			"nodeType": "YulFunctionCall",
																			"src": "3660:18:17"
																		},
																		"nativeSrc": "3657:49:17",
																		"nodeType": "YulIf",
																		"src": "3657:49:17"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "3748:11:17",
																					"nodeType": "YulIdentifier",
																					"src": "3748:11:17"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "3765:8:17",
																							"nodeType": "YulIdentifier",
																							"src": "3765:8:17"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "3793:3:17",
																									"nodeType": "YulIdentifier",
																									"src": "3793:3:17"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "3775:17:17",
																								"nodeType": "YulIdentifier",
																								"src": "3775:17:17"
																							},
																							"nativeSrc": "3775:22:17",
																							"nodeType": "YulFunctionCall",
																							"src": "3775:22:17"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "3761:3:17",
																						"nodeType": "YulIdentifier",
																						"src": "3761:3:17"
																					},
																					"nativeSrc": "3761:37:17",
																					"nodeType": "YulFunctionCall",
																					"src": "3761:37:17"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "3719:28:17",
																				"nodeType": "YulIdentifier",
																				"src": "3719:28:17"
																			},
																			"nativeSrc": "3719:80:17",
																			"nodeType": "YulFunctionCall",
																			"src": "3719:80:17"
																		},
																		"nativeSrc": "3719:80:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "3719:80:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "3369:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "3369:3:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3374:2:17",
																		"nodeType": "YulLiteral",
																		"src": "3374:2:17",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3366:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "3366:2:17"
																},
																"nativeSrc": "3366:11:17",
																"nodeType": "YulFunctionCall",
																"src": "3366:11:17"
															},
															"nativeSrc": "3363:446:17",
															"nodeType": "YulIf",
															"src": "3363:446:17"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "3273:543:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "3328:5:17",
														"nodeType": "YulTypedName",
														"src": "3328:5:17",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3335:3:17",
														"nodeType": "YulTypedName",
														"src": "3335:3:17",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "3340:10:17",
														"nodeType": "YulTypedName",
														"src": "3340:10:17",
														"type": ""
													}
												],
												"src": "3273:543:17"
											},
											{
												"body": {
													"nativeSrc": "3885:54:17",
													"nodeType": "YulBlock",
													"src": "3885:54:17",
													"statements": [
														{
															"nativeSrc": "3895:37:17",
															"nodeType": "YulAssignment",
															"src": "3895:37:17",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "3920:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "3920:4:17"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "3926:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "3926:5:17"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "3916:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "3916:3:17"
																},
																"nativeSrc": "3916:16:17",
																"nodeType": "YulFunctionCall",
																"src": "3916:16:17"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "3895:8:17",
																	"nodeType": "YulIdentifier",
																	"src": "3895:8:17"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "3822:117:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "3860:4:17",
														"nodeType": "YulTypedName",
														"src": "3860:4:17",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "3866:5:17",
														"nodeType": "YulTypedName",
														"src": "3866:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "3876:8:17",
														"nodeType": "YulTypedName",
														"src": "3876:8:17",
														"type": ""
													}
												],
												"src": "3822:117:17"
											},
											{
												"body": {
													"nativeSrc": "3996:118:17",
													"nodeType": "YulBlock",
													"src": "3996:118:17",
													"statements": [
														{
															"nativeSrc": "4006:68:17",
															"nodeType": "YulVariableDeclaration",
															"src": "4006:68:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4055:1:17",
																						"nodeType": "YulLiteral",
																						"src": "4055:1:17",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "4058:5:17",
																						"nodeType": "YulIdentifier",
																						"src": "4058:5:17"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "4051:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "4051:3:17"
																				},
																				"nativeSrc": "4051:13:17",
																				"nodeType": "YulFunctionCall",
																				"src": "4051:13:17"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4070:1:17",
																						"nodeType": "YulLiteral",
																						"src": "4070:1:17",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4066:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "4066:3:17"
																				},
																				"nativeSrc": "4066:6:17",
																				"nodeType": "YulFunctionCall",
																				"src": "4066:6:17"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "4022:28:17",
																			"nodeType": "YulIdentifier",
																			"src": "4022:28:17"
																		},
																		"nativeSrc": "4022:51:17",
																		"nodeType": "YulFunctionCall",
																		"src": "4022:51:17"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "4018:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "4018:3:17"
																},
																"nativeSrc": "4018:56:17",
																"nodeType": "YulFunctionCall",
																"src": "4018:56:17"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "4010:4:17",
																	"nodeType": "YulTypedName",
																	"src": "4010:4:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4083:25:17",
															"nodeType": "YulAssignment",
															"src": "4083:25:17",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4097:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "4097:4:17"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "4103:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "4103:4:17"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4093:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "4093:3:17"
																},
																"nativeSrc": "4093:15:17",
																"nodeType": "YulFunctionCall",
																"src": "4093:15:17"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4083:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "4083:6:17"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "3945:169:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3973:4:17",
														"nodeType": "YulTypedName",
														"src": "3973:4:17",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "3979:5:17",
														"nodeType": "YulTypedName",
														"src": "3979:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "3989:6:17",
														"nodeType": "YulTypedName",
														"src": "3989:6:17",
														"type": ""
													}
												],
												"src": "3945:169:17"
											},
											{
												"body": {
													"nativeSrc": "4200:214:17",
													"nodeType": "YulBlock",
													"src": "4200:214:17",
													"statements": [
														{
															"nativeSrc": "4333:37:17",
															"nodeType": "YulAssignment",
															"src": "4333:37:17",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4360:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "4360:4:17"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "4366:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "4366:3:17"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "4341:18:17",
																	"nodeType": "YulIdentifier",
																	"src": "4341:18:17"
																},
																"nativeSrc": "4341:29:17",
																"nodeType": "YulFunctionCall",
																"src": "4341:29:17"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4333:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "4333:4:17"
																}
															]
														},
														{
															"nativeSrc": "4379:29:17",
															"nodeType": "YulAssignment",
															"src": "4379:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4390:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "4390:4:17"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "4400:1:17",
																				"nodeType": "YulLiteral",
																				"src": "4400:1:17",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "4403:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "4403:3:17"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "4396:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "4396:3:17"
																		},
																		"nativeSrc": "4396:11:17",
																		"nodeType": "YulFunctionCall",
																		"src": "4396:11:17"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4387:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "4387:2:17"
																},
																"nativeSrc": "4387:21:17",
																"nodeType": "YulFunctionCall",
																"src": "4387:21:17"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "4379:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "4379:4:17"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "4119:295:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4181:4:17",
														"nodeType": "YulTypedName",
														"src": "4181:4:17",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "4187:3:17",
														"nodeType": "YulTypedName",
														"src": "4187:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "4195:4:17",
														"nodeType": "YulTypedName",
														"src": "4195:4:17",
														"type": ""
													}
												],
												"src": "4119:295:17"
											},
											{
												"body": {
													"nativeSrc": "4511:1303:17",
													"nodeType": "YulBlock",
													"src": "4511:1303:17",
													"statements": [
														{
															"nativeSrc": "4522:51:17",
															"nodeType": "YulVariableDeclaration",
															"src": "4522:51:17",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "4569:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "4569:3:17"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "4536:32:17",
																	"nodeType": "YulIdentifier",
																	"src": "4536:32:17"
																},
																"nativeSrc": "4536:37:17",
																"nodeType": "YulFunctionCall",
																"src": "4536:37:17"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "4526:6:17",
																	"nodeType": "YulTypedName",
																	"src": "4526:6:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4658:22:17",
																"nodeType": "YulBlock",
																"src": "4658:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4660:16:17",
																				"nodeType": "YulIdentifier",
																				"src": "4660:16:17"
																			},
																			"nativeSrc": "4660:18:17",
																			"nodeType": "YulFunctionCall",
																			"src": "4660:18:17"
																		},
																		"nativeSrc": "4660:18:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "4660:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4630:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "4630:6:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4638:18:17",
																		"nodeType": "YulLiteral",
																		"src": "4638:18:17",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4627:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "4627:2:17"
																},
																"nativeSrc": "4627:30:17",
																"nodeType": "YulFunctionCall",
																"src": "4627:30:17"
															},
															"nativeSrc": "4624:56:17",
															"nodeType": "YulIf",
															"src": "4624:56:17"
														},
														{
															"nativeSrc": "4690:52:17",
															"nodeType": "YulVariableDeclaration",
															"src": "4690:52:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "4736:4:17",
																				"nodeType": "YulIdentifier",
																				"src": "4736:4:17"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "4730:5:17",
																			"nodeType": "YulIdentifier",
																			"src": "4730:5:17"
																		},
																		"nativeSrc": "4730:11:17",
																		"nodeType": "YulFunctionCall",
																		"src": "4730:11:17"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "4704:25:17",
																	"nodeType": "YulIdentifier",
																	"src": "4704:25:17"
																},
																"nativeSrc": "4704:38:17",
																"nodeType": "YulFunctionCall",
																"src": "4704:38:17"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "4694:6:17",
																	"nodeType": "YulTypedName",
																	"src": "4694:6:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4835:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "4835:4:17"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "4841:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "4841:6:17"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "4849:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "4849:6:17"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "4789:45:17",
																	"nodeType": "YulIdentifier",
																	"src": "4789:45:17"
																},
																"nativeSrc": "4789:67:17",
																"nodeType": "YulFunctionCall",
																"src": "4789:67:17"
															},
															"nativeSrc": "4789:67:17",
															"nodeType": "YulExpressionStatement",
															"src": "4789:67:17"
														},
														{
															"nativeSrc": "4866:18:17",
															"nodeType": "YulVariableDeclaration",
															"src": "4866:18:17",
															"value": {
																"kind": "number",
																"nativeSrc": "4883:1:17",
																"nodeType": "YulLiteral",
																"src": "4883:1:17",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4870:9:17",
																	"nodeType": "YulTypedName",
																	"src": "4870:9:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4894:17:17",
															"nodeType": "YulAssignment",
															"src": "4894:17:17",
															"value": {
																"kind": "number",
																"nativeSrc": "4907:4:17",
																"nodeType": "YulLiteral",
																"src": "4907:4:17",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4894:9:17",
																	"nodeType": "YulIdentifier",
																	"src": "4894:9:17"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "4958:611:17",
																		"nodeType": "YulBlock",
																		"src": "4958:611:17",
																		"statements": [
																			{
																				"nativeSrc": "4972:37:17",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4972:37:17",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "4991:6:17",
																							"nodeType": "YulIdentifier",
																							"src": "4991:6:17"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "5003:4:17",
																									"nodeType": "YulLiteral",
																									"src": "5003:4:17",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "4999:3:17",
																								"nodeType": "YulIdentifier",
																								"src": "4999:3:17"
																							},
																							"nativeSrc": "4999:9:17",
																							"nodeType": "YulFunctionCall",
																							"src": "4999:9:17"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "4987:3:17",
																						"nodeType": "YulIdentifier",
																						"src": "4987:3:17"
																					},
																					"nativeSrc": "4987:22:17",
																					"nodeType": "YulFunctionCall",
																					"src": "4987:22:17"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "4976:7:17",
																						"nodeType": "YulTypedName",
																						"src": "4976:7:17",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5023:51:17",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5023:51:17",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5069:4:17",
																							"nodeType": "YulIdentifier",
																							"src": "5069:4:17"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "5037:31:17",
																						"nodeType": "YulIdentifier",
																						"src": "5037:31:17"
																					},
																					"nativeSrc": "5037:37:17",
																					"nodeType": "YulFunctionCall",
																					"src": "5037:37:17"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "5027:6:17",
																						"nodeType": "YulTypedName",
																						"src": "5027:6:17",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5087:10:17",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5087:10:17",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5096:1:17",
																					"nodeType": "YulLiteral",
																					"src": "5096:1:17",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "5091:1:17",
																						"nodeType": "YulTypedName",
																						"src": "5091:1:17",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5155:163:17",
																					"nodeType": "YulBlock",
																					"src": "5155:163:17",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5180:6:17",
																										"nodeType": "YulIdentifier",
																										"src": "5180:6:17"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "5198:3:17",
																														"nodeType": "YulIdentifier",
																														"src": "5198:3:17"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "5203:9:17",
																														"nodeType": "YulIdentifier",
																														"src": "5203:9:17"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "5194:3:17",
																													"nodeType": "YulIdentifier",
																													"src": "5194:3:17"
																												},
																												"nativeSrc": "5194:19:17",
																												"nodeType": "YulFunctionCall",
																												"src": "5194:19:17"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "5188:5:17",
																											"nodeType": "YulIdentifier",
																											"src": "5188:5:17"
																										},
																										"nativeSrc": "5188:26:17",
																										"nodeType": "YulFunctionCall",
																										"src": "5188:26:17"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "5173:6:17",
																									"nodeType": "YulIdentifier",
																									"src": "5173:6:17"
																								},
																								"nativeSrc": "5173:42:17",
																								"nodeType": "YulFunctionCall",
																								"src": "5173:42:17"
																							},
																							"nativeSrc": "5173:42:17",
																							"nodeType": "YulExpressionStatement",
																							"src": "5173:42:17"
																						},
																						{
																							"nativeSrc": "5232:24:17",
																							"nodeType": "YulAssignment",
																							"src": "5232:24:17",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5246:6:17",
																										"nodeType": "YulIdentifier",
																										"src": "5246:6:17"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5254:1:17",
																										"nodeType": "YulLiteral",
																										"src": "5254:1:17",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5242:3:17",
																									"nodeType": "YulIdentifier",
																									"src": "5242:3:17"
																								},
																								"nativeSrc": "5242:14:17",
																								"nodeType": "YulFunctionCall",
																								"src": "5242:14:17"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "5232:6:17",
																									"nodeType": "YulIdentifier",
																									"src": "5232:6:17"
																								}
																							]
																						},
																						{
																							"nativeSrc": "5273:31:17",
																							"nodeType": "YulAssignment",
																							"src": "5273:31:17",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "5290:9:17",
																										"nodeType": "YulIdentifier",
																										"src": "5290:9:17"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5301:2:17",
																										"nodeType": "YulLiteral",
																										"src": "5301:2:17",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5286:3:17",
																									"nodeType": "YulIdentifier",
																									"src": "5286:3:17"
																								},
																								"nativeSrc": "5286:18:17",
																								"nodeType": "YulFunctionCall",
																								"src": "5286:18:17"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "5273:9:17",
																									"nodeType": "YulIdentifier",
																									"src": "5273:9:17"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "5121:1:17",
																							"nodeType": "YulIdentifier",
																							"src": "5121:1:17"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "5124:7:17",
																							"nodeType": "YulIdentifier",
																							"src": "5124:7:17"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "5118:2:17",
																						"nodeType": "YulIdentifier",
																						"src": "5118:2:17"
																					},
																					"nativeSrc": "5118:14:17",
																					"nodeType": "YulFunctionCall",
																					"src": "5118:14:17"
																				},
																				"nativeSrc": "5110:208:17",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "5133:21:17",
																					"nodeType": "YulBlock",
																					"src": "5133:21:17",
																					"statements": [
																						{
																							"nativeSrc": "5135:17:17",
																							"nodeType": "YulAssignment",
																							"src": "5135:17:17",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "5144:1:17",
																										"nodeType": "YulIdentifier",
																										"src": "5144:1:17"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5147:4:17",
																										"nodeType": "YulLiteral",
																										"src": "5147:4:17",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5140:3:17",
																									"nodeType": "YulIdentifier",
																									"src": "5140:3:17"
																								},
																								"nativeSrc": "5140:12:17",
																								"nodeType": "YulFunctionCall",
																								"src": "5140:12:17"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "5135:1:17",
																									"nodeType": "YulIdentifier",
																									"src": "5135:1:17"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "5114:3:17",
																					"nodeType": "YulBlock",
																					"src": "5114:3:17",
																					"statements": []
																				},
																				"src": "5110:208:17"
																			},
																			{
																				"body": {
																					"nativeSrc": "5354:156:17",
																					"nodeType": "YulBlock",
																					"src": "5354:156:17",
																					"statements": [
																						{
																							"nativeSrc": "5372:43:17",
																							"nodeType": "YulVariableDeclaration",
																							"src": "5372:43:17",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "5399:3:17",
																												"nodeType": "YulIdentifier",
																												"src": "5399:3:17"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "5404:9:17",
																												"nodeType": "YulIdentifier",
																												"src": "5404:9:17"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "5395:3:17",
																											"nodeType": "YulIdentifier",
																											"src": "5395:3:17"
																										},
																										"nativeSrc": "5395:19:17",
																										"nodeType": "YulFunctionCall",
																										"src": "5395:19:17"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5389:5:17",
																									"nodeType": "YulIdentifier",
																									"src": "5389:5:17"
																								},
																								"nativeSrc": "5389:26:17",
																								"nodeType": "YulFunctionCall",
																								"src": "5389:26:17"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "5376:9:17",
																									"nodeType": "YulTypedName",
																									"src": "5376:9:17",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5439:6:17",
																										"nodeType": "YulIdentifier",
																										"src": "5439:6:17"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "5466:9:17",
																												"nodeType": "YulIdentifier",
																												"src": "5466:9:17"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "5481:6:17",
																														"nodeType": "YulIdentifier",
																														"src": "5481:6:17"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "5489:4:17",
																														"nodeType": "YulLiteral",
																														"src": "5489:4:17",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "5477:3:17",
																													"nodeType": "YulIdentifier",
																													"src": "5477:3:17"
																												},
																												"nativeSrc": "5477:17:17",
																												"nodeType": "YulFunctionCall",
																												"src": "5477:17:17"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "5447:18:17",
																											"nodeType": "YulIdentifier",
																											"src": "5447:18:17"
																										},
																										"nativeSrc": "5447:48:17",
																										"nodeType": "YulFunctionCall",
																										"src": "5447:48:17"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "5432:6:17",
																									"nodeType": "YulIdentifier",
																									"src": "5432:6:17"
																								},
																								"nativeSrc": "5432:64:17",
																								"nodeType": "YulFunctionCall",
																								"src": "5432:64:17"
																							},
																							"nativeSrc": "5432:64:17",
																							"nodeType": "YulExpressionStatement",
																							"src": "5432:64:17"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "5337:7:17",
																							"nodeType": "YulIdentifier",
																							"src": "5337:7:17"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "5346:6:17",
																							"nodeType": "YulIdentifier",
																							"src": "5346:6:17"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "5334:2:17",
																						"nodeType": "YulIdentifier",
																						"src": "5334:2:17"
																					},
																					"nativeSrc": "5334:19:17",
																					"nodeType": "YulFunctionCall",
																					"src": "5334:19:17"
																				},
																				"nativeSrc": "5331:179:17",
																				"nodeType": "YulIf",
																				"src": "5331:179:17"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5530:4:17",
																							"nodeType": "YulIdentifier",
																							"src": "5530:4:17"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "5544:6:17",
																											"nodeType": "YulIdentifier",
																											"src": "5544:6:17"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "5552:1:17",
																											"nodeType": "YulLiteral",
																											"src": "5552:1:17",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "5540:3:17",
																										"nodeType": "YulIdentifier",
																										"src": "5540:3:17"
																									},
																									"nativeSrc": "5540:14:17",
																									"nodeType": "YulFunctionCall",
																									"src": "5540:14:17"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "5556:1:17",
																									"nodeType": "YulLiteral",
																									"src": "5556:1:17",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "5536:3:17",
																								"nodeType": "YulIdentifier",
																								"src": "5536:3:17"
																							},
																							"nativeSrc": "5536:22:17",
																							"nodeType": "YulFunctionCall",
																							"src": "5536:22:17"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "5523:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "5523:6:17"
																					},
																					"nativeSrc": "5523:36:17",
																					"nodeType": "YulFunctionCall",
																					"src": "5523:36:17"
																				},
																				"nativeSrc": "5523:36:17",
																				"nodeType": "YulExpressionStatement",
																				"src": "5523:36:17"
																			}
																		]
																	},
																	"nativeSrc": "4951:618:17",
																	"nodeType": "YulCase",
																	"src": "4951:618:17",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4956:1:17",
																		"nodeType": "YulLiteral",
																		"src": "4956:1:17",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "5586:222:17",
																		"nodeType": "YulBlock",
																		"src": "5586:222:17",
																		"statements": [
																			{
																				"nativeSrc": "5600:14:17",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5600:14:17",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5613:1:17",
																					"nodeType": "YulLiteral",
																					"src": "5613:1:17",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "5604:5:17",
																						"nodeType": "YulTypedName",
																						"src": "5604:5:17",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5637:67:17",
																					"nodeType": "YulBlock",
																					"src": "5637:67:17",
																					"statements": [
																						{
																							"nativeSrc": "5655:35:17",
																							"nodeType": "YulAssignment",
																							"src": "5655:35:17",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "5674:3:17",
																												"nodeType": "YulIdentifier",
																												"src": "5674:3:17"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "5679:9:17",
																												"nodeType": "YulIdentifier",
																												"src": "5679:9:17"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "5670:3:17",
																											"nodeType": "YulIdentifier",
																											"src": "5670:3:17"
																										},
																										"nativeSrc": "5670:19:17",
																										"nodeType": "YulFunctionCall",
																										"src": "5670:19:17"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5664:5:17",
																									"nodeType": "YulIdentifier",
																									"src": "5664:5:17"
																								},
																								"nativeSrc": "5664:26:17",
																								"nodeType": "YulFunctionCall",
																								"src": "5664:26:17"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "5655:5:17",
																									"nodeType": "YulIdentifier",
																									"src": "5655:5:17"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "5630:6:17",
																					"nodeType": "YulIdentifier",
																					"src": "5630:6:17"
																				},
																				"nativeSrc": "5627:77:17",
																				"nodeType": "YulIf",
																				"src": "5627:77:17"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5724:4:17",
																							"nodeType": "YulIdentifier",
																							"src": "5724:4:17"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "5783:5:17",
																									"nodeType": "YulIdentifier",
																									"src": "5783:5:17"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "5790:6:17",
																									"nodeType": "YulIdentifier",
																									"src": "5790:6:17"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "5730:52:17",
																								"nodeType": "YulIdentifier",
																								"src": "5730:52:17"
																							},
																							"nativeSrc": "5730:67:17",
																							"nodeType": "YulFunctionCall",
																							"src": "5730:67:17"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "5717:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "5717:6:17"
																					},
																					"nativeSrc": "5717:81:17",
																					"nodeType": "YulFunctionCall",
																					"src": "5717:81:17"
																				},
																				"nativeSrc": "5717:81:17",
																				"nodeType": "YulExpressionStatement",
																				"src": "5717:81:17"
																			}
																		]
																	},
																	"nativeSrc": "5578:230:17",
																	"nodeType": "YulCase",
																	"src": "5578:230:17",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4931:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "4931:6:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4939:2:17",
																		"nodeType": "YulLiteral",
																		"src": "4939:2:17",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4928:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "4928:2:17"
																},
																"nativeSrc": "4928:14:17",
																"nodeType": "YulFunctionCall",
																"src": "4928:14:17"
															},
															"nativeSrc": "4921:887:17",
															"nodeType": "YulSwitch",
															"src": "4921:887:17"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "4419:1395:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "4500:4:17",
														"nodeType": "YulTypedName",
														"src": "4500:4:17",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "4506:3:17",
														"nodeType": "YulTypedName",
														"src": "4506:3:17",
														"type": ""
													}
												],
												"src": "4419:1395:17"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 17,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x646F7562696D616F000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x646F7562696D616F000000000000000000000000000000000000000000000000 DUP2 MSTORE POP CALLER PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xF1 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xE8 SWAP2 SWAP1 PUSH3 0x233 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x102 DUP2 PUSH3 0x12F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP2 PUSH1 0x2 SWAP1 DUP2 PUSH3 0x114 SWAP2 SWAP1 PUSH3 0x4B2 JUMP JUMPDEST POP DUP1 PUSH1 0x3 SWAP1 DUP2 PUSH3 0x126 SWAP2 SWAP1 PUSH3 0x4B2 JUMP JUMPDEST POP POP POP PUSH3 0x596 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x21B DUP3 PUSH3 0x1F0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x22D DUP2 PUSH3 0x20F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x248 PUSH0 DUP4 ADD DUP5 PUSH3 0x222 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x2CA JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x2E0 JUMPI PUSH3 0x2DF PUSH3 0x285 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH3 0x344 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x307 JUMP JUMPDEST PUSH3 0x350 DUP7 DUP4 PUSH3 0x307 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x39A PUSH3 0x394 PUSH3 0x38E DUP5 PUSH3 0x368 JUMP JUMPDEST PUSH3 0x371 JUMP JUMPDEST PUSH3 0x368 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x3B5 DUP4 PUSH3 0x37A JUMP JUMPDEST PUSH3 0x3CD PUSH3 0x3C4 DUP3 PUSH3 0x3A1 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x313 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH3 0x3E3 PUSH3 0x3D5 JUMP JUMPDEST PUSH3 0x3F0 DUP2 DUP5 DUP5 PUSH3 0x3AA JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x417 JUMPI PUSH3 0x40B PUSH0 DUP3 PUSH3 0x3D9 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x3F6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x466 JUMPI PUSH3 0x430 DUP2 PUSH3 0x2E6 JUMP JUMPDEST PUSH3 0x43B DUP5 PUSH3 0x2F8 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x44B JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x463 PUSH3 0x45A DUP6 PUSH3 0x2F8 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x3F5 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x488 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x46B JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x4A2 DUP4 DUP4 PUSH3 0x477 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x4BD DUP3 PUSH3 0x24E JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x4D9 JUMPI PUSH3 0x4D8 PUSH3 0x258 JUMP JUMPDEST JUMPDEST PUSH3 0x4E5 DUP3 SLOAD PUSH3 0x2B2 JUMP JUMPDEST PUSH3 0x4F2 DUP3 DUP3 DUP6 PUSH3 0x41B JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x528 JUMPI PUSH0 DUP5 ISZERO PUSH3 0x513 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x51F DUP6 DUP3 PUSH3 0x495 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x58E JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x538 DUP7 PUSH3 0x2E6 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x561 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x53A JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x581 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x57D PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x477 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2EDD DUP1 PUSH3 0x5A4 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x140 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xB6 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x374 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x390 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x3AC JUMPI DUP1 PUSH4 0xE3D61EB3 EQ PUSH2 0x3DC JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x3F8 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x428 JUMPI PUSH2 0x140 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2E2 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x312 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x31C JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x33A JUMPI DUP1 PUSH4 0xA1448194 EQ PUSH2 0x358 JUMPI PUSH2 0x140 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x108 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0x2F745C59 EQ PUSH2 0x218 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x248 JUMPI DUP1 PUSH4 0x4BB30912 EQ PUSH2 0x264 JUMPI DUP1 PUSH4 0x4F6CCCE7 EQ PUSH2 0x282 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x2B2 JUMPI PUSH2 0x140 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x144 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x174 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x192 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1C2 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1DE JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x15E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x159 SWAP2 SWAP1 PUSH2 0x215E JUMP JUMPDEST PUSH2 0x444 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16B SWAP2 SWAP1 PUSH2 0x21A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17C PUSH2 0x465 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x189 SWAP2 SWAP1 PUSH2 0x2246 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A7 SWAP2 SWAP1 PUSH2 0x2299 JUMP JUMPDEST PUSH2 0x4F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B9 SWAP2 SWAP1 PUSH2 0x2303 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D7 SWAP2 SWAP1 PUSH2 0x2346 JUMP JUMPDEST PUSH2 0x510 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E6 PUSH2 0x526 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F3 SWAP2 SWAP1 PUSH2 0x2393 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x216 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x211 SWAP2 SWAP1 PUSH2 0x23AC JUMP JUMPDEST PUSH2 0x532 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x232 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22D SWAP2 SWAP1 PUSH2 0x2346 JUMP JUMPDEST PUSH2 0x631 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23F SWAP2 SWAP1 PUSH2 0x2393 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x262 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25D SWAP2 SWAP1 PUSH2 0x23AC JUMP JUMPDEST PUSH2 0x6D5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x26C PUSH2 0x6F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x279 SWAP2 SWAP1 PUSH2 0x24FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x297 SWAP2 SWAP1 PUSH2 0x2299 JUMP JUMPDEST PUSH2 0x7C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A9 SWAP2 SWAP1 PUSH2 0x2393 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C7 SWAP2 SWAP1 PUSH2 0x2299 JUMP JUMPDEST PUSH2 0x83A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D9 SWAP2 SWAP1 PUSH2 0x2303 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F7 SWAP2 SWAP1 PUSH2 0x251F JUMP JUMPDEST PUSH2 0x84B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x309 SWAP2 SWAP1 PUSH2 0x2393 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31A PUSH2 0x901 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x324 PUSH2 0x914 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x331 SWAP2 SWAP1 PUSH2 0x2303 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x342 PUSH2 0x93B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34F SWAP2 SWAP1 PUSH2 0x2246 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x372 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x36D SWAP2 SWAP1 PUSH2 0x2346 JUMP JUMPDEST PUSH2 0x9CB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x38E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x389 SWAP2 SWAP1 PUSH2 0x2574 JUMP JUMPDEST PUSH2 0x9E1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3AA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A5 SWAP2 SWAP1 PUSH2 0x26DE JUMP JUMPDEST PUSH2 0x9F7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3C6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C1 SWAP2 SWAP1 PUSH2 0x2299 JUMP JUMPDEST PUSH2 0xA14 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D3 SWAP2 SWAP1 PUSH2 0x2246 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F1 SWAP2 SWAP1 PUSH2 0x28DE JUMP JUMPDEST PUSH2 0xA7A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x412 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x40D SWAP2 SWAP1 PUSH2 0x2925 JUMP JUMPDEST PUSH2 0xAD4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x41F SWAP2 SWAP1 PUSH2 0x21A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x442 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x43D SWAP2 SWAP1 PUSH2 0x251F JUMP JUMPDEST PUSH2 0xB62 JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH2 0x44E DUP3 PUSH2 0xBE6 JUMP JUMPDEST DUP1 PUSH2 0x45E JUMPI POP PUSH2 0x45D DUP3 PUSH2 0xC5F JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x474 SWAP1 PUSH2 0x2990 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4A0 SWAP1 PUSH2 0x2990 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4EB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4C2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4EB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4CE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x4FF DUP3 PUSH2 0xCC8 JUMP JUMPDEST POP PUSH2 0x509 DUP3 PUSH2 0xD4E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x522 DUP3 DUP3 PUSH2 0x51D PUSH2 0xD87 JUMP JUMPDEST PUSH2 0xD8E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5A2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x599 SWAP2 SWAP1 PUSH2 0x2303 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x5B5 DUP4 DUP4 PUSH2 0x5B0 PUSH2 0xD87 JUMP JUMPDEST PUSH2 0xDA0 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x62B JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x622 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x29C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x63B DUP4 PUSH2 0x84B JUMP JUMPDEST DUP3 LT PUSH2 0x680 JUMPI DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0xA57D13DC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x677 SWAP3 SWAP2 SWAP1 PUSH2 0x29F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6EF DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x9F7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x7BF JUMPI DUP4 DUP3 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD DUP1 SLOAD PUSH2 0x734 SWAP1 PUSH2 0x2990 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x760 SWAP1 PUSH2 0x2990 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7AB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x782 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7AB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x78E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x717 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x7D1 PUSH2 0x526 JUMP JUMPDEST DUP3 LT PUSH2 0x816 JUMPI PUSH0 DUP3 PUSH1 0x40 MLOAD PUSH32 0xA57D13DC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x80D SWAP3 SWAP2 SWAP1 PUSH2 0x29F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x82A JUMPI PUSH2 0x829 PUSH2 0x2A1C JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x844 DUP3 PUSH2 0xCC8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8BC JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8B3 SWAP2 SWAP1 PUSH2 0x2303 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x909 PUSH2 0xEBA JUMP JUMPDEST PUSH2 0x912 PUSH0 PUSH2 0xF41 JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x94A SWAP1 PUSH2 0x2990 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x976 SWAP1 PUSH2 0x2990 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x9C1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x998 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x9C1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x9A4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x9D3 PUSH2 0xEBA JUMP JUMPDEST PUSH2 0x9DD DUP3 DUP3 PUSH2 0x1002 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x9F3 PUSH2 0x9EC PUSH2 0xD87 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x101F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xA02 DUP5 DUP5 DUP5 PUSH2 0x532 JUMP JUMPDEST PUSH2 0xA0E DUP5 DUP5 DUP5 DUP5 PUSH2 0x1188 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xA1F DUP3 PUSH2 0xCC8 JUMP JUMPDEST POP PUSH0 PUSH2 0xA29 PUSH2 0x133A JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0xA47 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0xA72 JUMP JUMPDEST DUP1 PUSH2 0xA51 DUP5 PUSH2 0x1350 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xA62 SWAP3 SWAP2 SWAP1 PUSH2 0x2A83 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA83 DUP2 PUSH2 0x141A JUMP JUMPDEST DUP1 PUSH1 0x1 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0xA99 SWAP3 SWAP2 SWAP1 PUSH2 0x2026 JUMP JUMPDEST POP PUSH32 0x9538911740E5519A40DB77FB5F637DE0D56CDD804318D81AE270CC24FBD8479E DUP2 PUSH1 0x40 MLOAD PUSH2 0xAC9 SWAP2 SWAP1 PUSH2 0x24FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xB6A PUSH2 0xEBA JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBDA JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBD1 SWAP2 SWAP1 PUSH2 0x2303 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBE3 DUP2 PUSH2 0xF41 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH32 0x780E9D6300000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0xC58 JUMPI POP PUSH2 0xC57 DUP3 PUSH2 0x1425 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH32 0xA86517A100000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xCD3 DUP4 PUSH2 0x1506 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD45 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD3C SWAP2 SWAP1 PUSH2 0x2393 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xD9B DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x153F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xDAD DUP6 DUP6 DUP6 PUSH2 0x16FE JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDF0 JUMPI PUSH2 0xDEB DUP5 PUSH2 0x1909 JUMP JUMPDEST PUSH2 0xE2F JUMP JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE2E JUMPI PUSH2 0xE2D DUP2 DUP6 PUSH2 0x194D JUMP JUMPDEST JUMPDEST JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE70 JUMPI PUSH2 0xE6B DUP5 PUSH2 0x1A97 JUMP JUMPDEST PUSH2 0xEAF JUMP JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xEAE JUMPI PUSH2 0xEAD DUP6 DUP6 PUSH2 0x1B57 JUMP JUMPDEST JUMPDEST JUMPDEST DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xEC2 PUSH2 0xD87 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xEE0 PUSH2 0x914 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF3F JUMPI PUSH2 0xF03 PUSH2 0xD87 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF36 SWAP2 SWAP1 PUSH2 0x2303 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x101B DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x1BDB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x108F JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1086 SWAP2 SWAP1 PUSH2 0x2303 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x117B SWAP2 SWAP1 PUSH2 0x21A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x1334 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x11CB PUSH2 0xD87 JUMP JUMPDEST DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11ED SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2AF8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1228 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1225 SWAP2 SWAP1 PUSH2 0x2B56 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x12A9 JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1256 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x125B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x12A1 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1298 SWAP2 SWAP1 PUSH2 0x2303 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1332 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1329 SWAP2 SWAP1 PUSH2 0x2303 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x1 PUSH2 0x135E DUP5 PUSH2 0x1BF6 JUMP JUMPDEST ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x137C JUMPI PUSH2 0x137B PUSH2 0x25BA JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x13AE JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x140F JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x1404 JUMPI PUSH2 0x1403 PUSH2 0x2B81 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH0 DUP6 SUB PUSH2 0x13BB JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1422 PUSH2 0xEBA JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x14EF JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x14FF JUMPI POP PUSH2 0x14FE DUP3 PUSH2 0x1D47 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1577 JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x16A9 JUMPI PUSH0 PUSH2 0x1586 DUP5 PUSH2 0xCC8 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x15F0 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1603 JUMPI POP PUSH2 0x1601 DUP2 DUP5 PUSH2 0xAD4 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x1645 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x163C SWAP2 SWAP1 PUSH2 0x2303 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x16A7 JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x6 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x1709 DUP5 PUSH2 0x1506 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x174A JUMPI PUSH2 0x1749 DUP2 DUP5 DUP7 PUSH2 0x1DB0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x17D5 JUMPI PUSH2 0x1789 PUSH0 DUP6 PUSH0 DUP1 PUSH2 0x153F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x5 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1854 JUMPI PUSH1 0x1 PUSH1 0x5 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x4 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD SWAP1 POP PUSH1 0xB PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0xA DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1957 DUP4 PUSH2 0x84B JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x9 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 EQ PUSH2 0x1A2E JUMPI PUSH0 PUSH1 0x8 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP1 PUSH1 0x8 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x9 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x9 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SSTORE PUSH1 0x8 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0xA DUP1 SLOAD SWAP1 POP PUSH2 0x1AAA SWAP2 SWAP1 PUSH2 0x2BDB JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0xB PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 PUSH1 0xA DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1AD6 JUMPI PUSH2 0x1AD5 PUSH2 0x2A1C JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 PUSH1 0xA DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1AF6 JUMPI PUSH2 0x1AF5 PUSH2 0x2A1C JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0xB PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0xB PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SSTORE PUSH1 0xA DUP1 SLOAD DUP1 PUSH2 0x1B3E JUMPI PUSH2 0x1B3D PUSH2 0x2C0E JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SSTORE SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH2 0x1B63 DUP5 PUSH2 0x84B JUMP JUMPDEST PUSH2 0x1B6D SWAP2 SWAP1 PUSH2 0x2BDB JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x8 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x9 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH2 0x1BE5 DUP4 DUP4 PUSH2 0x1E73 JUMP JUMPDEST PUSH2 0x1BF1 PUSH0 DUP5 DUP5 DUP5 PUSH2 0x1188 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x1C52 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x1C48 JUMPI PUSH2 0x1C47 PUSH2 0x2B81 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1C8F JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x1C85 JUMPI PUSH2 0x1C84 PUSH2 0x2B81 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x1CBE JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x1CB4 JUMPI PUSH2 0x1CB3 PUSH2 0x2B81 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1CE7 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x1CDD JUMPI PUSH2 0x1CDC PUSH2 0x2B81 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1D0C JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x1D02 JUMPI PUSH2 0x1D01 PUSH2 0x2B81 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x1D2F JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1D25 JUMPI PUSH2 0x1D24 PUSH2 0x2B81 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x1D3E JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DBB DUP4 DUP4 DUP4 PUSH2 0x1F66 JUMP JUMPDEST PUSH2 0x1E6E JUMPI PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1E2F JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E26 SWAP2 SWAP1 PUSH2 0x2393 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E65 SWAP3 SWAP2 SWAP1 PUSH2 0x29F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1EE3 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1EDA SWAP2 SWAP1 PUSH2 0x2303 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x1EEF DUP4 DUP4 PUSH0 PUSH2 0xDA0 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1F61 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F58 SWAP2 SWAP1 PUSH2 0x2303 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x201D JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1FDE JUMPI POP PUSH2 0x1FDD DUP5 DUP5 PUSH2 0xAD4 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x201C JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2004 DUP4 PUSH2 0xD4E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x206C JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x206B JUMPI DUP3 MLOAD DUP3 SWAP1 DUP2 PUSH2 0x205B SWAP2 SWAP1 PUSH2 0x2DD8 JUMP JUMPDEST POP SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x2044 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x2079 SWAP2 SWAP1 PUSH2 0x207D JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x209C JUMPI PUSH0 DUP2 DUP2 PUSH2 0x2093 SWAP2 SWAP1 PUSH2 0x20A0 JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x207E JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST POP DUP1 SLOAD PUSH2 0x20AC SWAP1 PUSH2 0x2990 JUMP JUMPDEST PUSH0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH2 0x20BD JUMPI POP PUSH2 0x20DA JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x20D9 SWAP2 SWAP1 PUSH2 0x20DD JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x20F4 JUMPI PUSH0 DUP2 PUSH0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x20DE JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x213D DUP2 PUSH2 0x2109 JUMP JUMPDEST DUP2 EQ PUSH2 0x2147 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2158 DUP2 PUSH2 0x2134 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2173 JUMPI PUSH2 0x2172 PUSH2 0x2101 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2180 DUP5 DUP3 DUP6 ADD PUSH2 0x214A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x219D DUP2 PUSH2 0x2189 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x21B6 PUSH0 DUP4 ADD DUP5 PUSH2 0x2194 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x21F3 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x21D8 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2218 DUP3 PUSH2 0x21BC JUMP JUMPDEST PUSH2 0x2222 DUP2 DUP6 PUSH2 0x21C6 JUMP JUMPDEST SWAP4 POP PUSH2 0x2232 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x21D6 JUMP JUMPDEST PUSH2 0x223B DUP2 PUSH2 0x21FE JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x225E DUP2 DUP5 PUSH2 0x220E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2278 DUP2 PUSH2 0x2266 JUMP JUMPDEST DUP2 EQ PUSH2 0x2282 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2293 DUP2 PUSH2 0x226F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x22AE JUMPI PUSH2 0x22AD PUSH2 0x2101 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x22BB DUP5 DUP3 DUP6 ADD PUSH2 0x2285 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x22ED DUP3 PUSH2 0x22C4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x22FD DUP2 PUSH2 0x22E3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2316 PUSH0 DUP4 ADD DUP5 PUSH2 0x22F4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2325 DUP2 PUSH2 0x22E3 JUMP JUMPDEST DUP2 EQ PUSH2 0x232F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2340 DUP2 PUSH2 0x231C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x235C JUMPI PUSH2 0x235B PUSH2 0x2101 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2369 DUP6 DUP3 DUP7 ADD PUSH2 0x2332 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x237A DUP6 DUP3 DUP7 ADD PUSH2 0x2285 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x238D DUP2 PUSH2 0x2266 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x23A6 PUSH0 DUP4 ADD DUP5 PUSH2 0x2384 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x23C3 JUMPI PUSH2 0x23C2 PUSH2 0x2101 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x23D0 DUP7 DUP3 DUP8 ADD PUSH2 0x2332 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x23E1 DUP7 DUP3 DUP8 ADD PUSH2 0x2332 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x23F2 DUP7 DUP3 DUP8 ADD PUSH2 0x2285 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x243F DUP3 PUSH2 0x21BC JUMP JUMPDEST PUSH2 0x2449 DUP2 DUP6 PUSH2 0x2425 JUMP JUMPDEST SWAP4 POP PUSH2 0x2459 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x21D6 JUMP JUMPDEST PUSH2 0x2462 DUP2 PUSH2 0x21FE JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2478 DUP4 DUP4 PUSH2 0x2435 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2496 DUP3 PUSH2 0x23FC JUMP JUMPDEST PUSH2 0x24A0 DUP2 DUP6 PUSH2 0x2406 JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x24B2 DUP6 PUSH2 0x2416 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x24ED JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x24CE DUP6 DUP3 PUSH2 0x246D JUMP JUMPDEST SWAP5 POP PUSH2 0x24D9 DUP4 PUSH2 0x2480 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x24B5 JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2517 DUP2 DUP5 PUSH2 0x248C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2534 JUMPI PUSH2 0x2533 PUSH2 0x2101 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2541 DUP5 DUP3 DUP6 ADD PUSH2 0x2332 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2553 DUP2 PUSH2 0x2189 JUMP JUMPDEST DUP2 EQ PUSH2 0x255D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x256E DUP2 PUSH2 0x254A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x258A JUMPI PUSH2 0x2589 PUSH2 0x2101 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2597 DUP6 DUP3 DUP7 ADD PUSH2 0x2332 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x25A8 DUP6 DUP3 DUP7 ADD PUSH2 0x2560 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x25F0 DUP3 PUSH2 0x21FE JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x260F JUMPI PUSH2 0x260E PUSH2 0x25BA JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2621 PUSH2 0x20F8 JUMP JUMPDEST SWAP1 POP PUSH2 0x262D DUP3 DUP3 PUSH2 0x25E7 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x264C JUMPI PUSH2 0x264B PUSH2 0x25BA JUMP JUMPDEST JUMPDEST PUSH2 0x2655 DUP3 PUSH2 0x21FE JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2682 PUSH2 0x267D DUP5 PUSH2 0x2632 JUMP JUMPDEST PUSH2 0x2618 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x269E JUMPI PUSH2 0x269D PUSH2 0x25B6 JUMP JUMPDEST JUMPDEST PUSH2 0x26A9 DUP5 DUP3 DUP6 PUSH2 0x2662 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x26C5 JUMPI PUSH2 0x26C4 PUSH2 0x25B2 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x26D5 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2670 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x26F6 JUMPI PUSH2 0x26F5 PUSH2 0x2101 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2703 DUP8 DUP3 DUP9 ADD PUSH2 0x2332 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x2714 DUP8 DUP3 DUP9 ADD PUSH2 0x2332 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2725 DUP8 DUP3 DUP9 ADD PUSH2 0x2285 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2746 JUMPI PUSH2 0x2745 PUSH2 0x2105 JUMP JUMPDEST JUMPDEST PUSH2 0x2752 DUP8 DUP3 DUP9 ADD PUSH2 0x26B1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2778 JUMPI PUSH2 0x2777 PUSH2 0x25BA JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x27A7 JUMPI PUSH2 0x27A6 PUSH2 0x25BA JUMP JUMPDEST JUMPDEST PUSH2 0x27B0 DUP3 PUSH2 0x21FE JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x27CF PUSH2 0x27CA DUP5 PUSH2 0x278D JUMP JUMPDEST PUSH2 0x2618 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x27EB JUMPI PUSH2 0x27EA PUSH2 0x25B6 JUMP JUMPDEST JUMPDEST PUSH2 0x27F6 DUP5 DUP3 DUP6 PUSH2 0x2662 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2812 JUMPI PUSH2 0x2811 PUSH2 0x25B2 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2822 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x27BD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x283D PUSH2 0x2838 DUP5 PUSH2 0x275E JUMP JUMPDEST PUSH2 0x2618 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x2860 JUMPI PUSH2 0x285F PUSH2 0x2789 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x28A7 JUMPI DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2885 JUMPI PUSH2 0x2884 PUSH2 0x25B2 JUMP JUMPDEST JUMPDEST DUP1 DUP7 ADD PUSH2 0x2892 DUP10 DUP3 PUSH2 0x27FE JUMP JUMPDEST DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP5 POP POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2862 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x28C5 JUMPI PUSH2 0x28C4 PUSH2 0x25B2 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x28D5 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x282B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x28F3 JUMPI PUSH2 0x28F2 PUSH2 0x2101 JUMP JUMPDEST JUMPDEST PUSH0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2910 JUMPI PUSH2 0x290F PUSH2 0x2105 JUMP JUMPDEST JUMPDEST PUSH2 0x291C DUP5 DUP3 DUP6 ADD PUSH2 0x28B1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x293B JUMPI PUSH2 0x293A PUSH2 0x2101 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2948 DUP6 DUP3 DUP7 ADD PUSH2 0x2332 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2959 DUP6 DUP3 DUP7 ADD PUSH2 0x2332 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x29A7 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x29BA JUMPI PUSH2 0x29B9 PUSH2 0x2963 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x29D3 PUSH0 DUP4 ADD DUP7 PUSH2 0x22F4 JUMP JUMPDEST PUSH2 0x29E0 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2384 JUMP JUMPDEST PUSH2 0x29ED PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x22F4 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2A08 PUSH0 DUP4 ADD DUP6 PUSH2 0x22F4 JUMP JUMPDEST PUSH2 0x2A15 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2384 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2A5D DUP3 PUSH2 0x21BC JUMP JUMPDEST PUSH2 0x2A67 DUP2 DUP6 PUSH2 0x2A49 JUMP JUMPDEST SWAP4 POP PUSH2 0x2A77 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x21D6 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2A8E DUP3 DUP6 PUSH2 0x2A53 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A9A DUP3 DUP5 PUSH2 0x2A53 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2ACA DUP3 PUSH2 0x2AA6 JUMP JUMPDEST PUSH2 0x2AD4 DUP2 DUP6 PUSH2 0x2AB0 JUMP JUMPDEST SWAP4 POP PUSH2 0x2AE4 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x21D6 JUMP JUMPDEST PUSH2 0x2AED DUP2 PUSH2 0x21FE JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2B0B PUSH0 DUP4 ADD DUP8 PUSH2 0x22F4 JUMP JUMPDEST PUSH2 0x2B18 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x22F4 JUMP JUMPDEST PUSH2 0x2B25 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2384 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2B37 DUP2 DUP5 PUSH2 0x2AC0 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2B50 DUP2 PUSH2 0x2134 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2B6B JUMPI PUSH2 0x2B6A PUSH2 0x2101 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2B78 DUP5 DUP3 DUP6 ADD PUSH2 0x2B42 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2BE5 DUP3 PUSH2 0x2266 JUMP JUMPDEST SWAP2 POP PUSH2 0x2BF0 DUP4 PUSH2 0x2266 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2C08 JUMPI PUSH2 0x2C07 PUSH2 0x2BAE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x2C97 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x2C5C JUMP JUMPDEST PUSH2 0x2CA1 DUP7 DUP4 PUSH2 0x2C5C JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2CDC PUSH2 0x2CD7 PUSH2 0x2CD2 DUP5 PUSH2 0x2266 JUMP JUMPDEST PUSH2 0x2CB9 JUMP JUMPDEST PUSH2 0x2266 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2CF5 DUP4 PUSH2 0x2CC2 JUMP JUMPDEST PUSH2 0x2D09 PUSH2 0x2D01 DUP3 PUSH2 0x2CE3 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x2C68 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x2D1D PUSH2 0x2D11 JUMP JUMPDEST PUSH2 0x2D28 DUP2 DUP5 DUP5 PUSH2 0x2CEC JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2D4B JUMPI PUSH2 0x2D40 PUSH0 DUP3 PUSH2 0x2D15 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2D2E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2D90 JUMPI PUSH2 0x2D61 DUP2 PUSH2 0x2C3B JUMP JUMPDEST PUSH2 0x2D6A DUP5 PUSH2 0x2C4D JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x2D79 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x2D8D PUSH2 0x2D85 DUP6 PUSH2 0x2C4D JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x2D2D JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2DB0 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x2D95 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2DC8 DUP4 DUP4 PUSH2 0x2DA1 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2DE1 DUP3 PUSH2 0x21BC JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2DFA JUMPI PUSH2 0x2DF9 PUSH2 0x25BA JUMP JUMPDEST JUMPDEST PUSH2 0x2E04 DUP3 SLOAD PUSH2 0x2990 JUMP JUMPDEST PUSH2 0x2E0F DUP3 DUP3 DUP6 PUSH2 0x2D4F JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2E40 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x2E2E JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x2E38 DUP6 DUP3 PUSH2 0x2DBD JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x2E9F JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x2E4E DUP7 PUSH2 0x2C3B JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2E75 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2E50 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x2E92 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x2E8E PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x2DA1 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE0 PUSH9 0x9D39F80A700658292 0xD SAR DUP8 SWAP11 0xE3 0xC2 PUSH27 0xF9CB995BECA63C3B95262BD5DD3264736F6C634300081800330000 ",
							"sourceMap": "289:726:14:-:0;;;353:88;;;;;;;;;;1381:113:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;423:10:14;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1455:5:2;1447;:13;;;;;;:::i;:::-;;1480:7;1470;:17;;;;;;:::i;:::-;;1381:113;;289:726:14;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7:126:17:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;593:99::-;645:6;679:5;673:12;663:22;;593:99;;;:::o;698:180::-;746:77;743:1;736:88;843:4;840:1;833:15;867:4;864:1;857:15;884:180;932:77;929:1;922:88;1029:4;1026:1;1019:15;1053:4;1050:1;1043:15;1070:320;1114:6;1151:1;1145:4;1141:12;1131:22;;1198:1;1192:4;1188:12;1219:18;1209:81;;1275:4;1267:6;1263:17;1253:27;;1209:81;1337:2;1329:6;1326:14;1306:18;1303:38;1300:84;;1356:18;;:::i;:::-;1300:84;1121:269;1070:320;;;:::o;1396:141::-;1445:4;1468:3;1460:11;;1491:3;1488:1;1481:14;1525:4;1522:1;1512:18;1504:26;;1396:141;;;:::o;1543:93::-;1580:6;1627:2;1622;1615:5;1611:14;1607:23;1597:33;;1543:93;;;:::o;1642:107::-;1686:8;1736:5;1730:4;1726:16;1705:37;;1642:107;;;;:::o;1755:393::-;1824:6;1874:1;1862:10;1858:18;1897:97;1927:66;1916:9;1897:97;:::i;:::-;2015:39;2045:8;2034:9;2015:39;:::i;:::-;2003:51;;2087:4;2083:9;2076:5;2072:21;2063:30;;2136:4;2126:8;2122:19;2115:5;2112:30;2102:40;;1831:317;;1755:393;;;;;:::o;2154:77::-;2191:7;2220:5;2209:16;;2154:77;;;:::o;2237:60::-;2265:3;2286:5;2279:12;;2237:60;;;:::o;2303:142::-;2353:9;2386:53;2404:34;2413:24;2431:5;2413:24;:::i;:::-;2404:34;:::i;:::-;2386:53;:::i;:::-;2373:66;;2303:142;;;:::o;2451:75::-;2494:3;2515:5;2508:12;;2451:75;;;:::o;2532:269::-;2642:39;2673:7;2642:39;:::i;:::-;2703:91;2752:41;2776:16;2752:41;:::i;:::-;2744:6;2737:4;2731:11;2703:91;:::i;:::-;2697:4;2690:105;2608:193;2532:269;;;:::o;2807:73::-;2852:3;2807:73;:::o;2886:189::-;2963:32;;:::i;:::-;3004:65;3062:6;3054;3048:4;3004:65;:::i;:::-;2939:136;2886:189;;:::o;3081:186::-;3141:120;3158:3;3151:5;3148:14;3141:120;;;3212:39;3249:1;3242:5;3212:39;:::i;:::-;3185:1;3178:5;3174:13;3165:22;;3141:120;;;3081:186;;:::o;3273:543::-;3374:2;3369:3;3366:11;3363:446;;;3408:38;3440:5;3408:38;:::i;:::-;3492:29;3510:10;3492:29;:::i;:::-;3482:8;3478:44;3675:2;3663:10;3660:18;3657:49;;;3696:8;3681:23;;3657:49;3719:80;3775:22;3793:3;3775:22;:::i;:::-;3765:8;3761:37;3748:11;3719:80;:::i;:::-;3378:431;;3363:446;3273:543;;;:::o;3822:117::-;3876:8;3926:5;3920:4;3916:16;3895:37;;3822:117;;;;:::o;3945:169::-;3989:6;4022:51;4070:1;4066:6;4058:5;4055:1;4051:13;4022:51;:::i;:::-;4018:56;4103:4;4097;4093:15;4083:25;;3996:118;3945:169;;;;:::o;4119:295::-;4195:4;4341:29;4366:3;4360:4;4341:29;:::i;:::-;4333:37;;4403:3;4400:1;4396:11;4390:4;4387:21;4379:29;;4119:295;;;;:::o;4419:1395::-;4536:37;4569:3;4536:37;:::i;:::-;4638:18;4630:6;4627:30;4624:56;;;4660:18;;:::i;:::-;4624:56;4704:38;4736:4;4730:11;4704:38;:::i;:::-;4789:67;4849:6;4841;4835:4;4789:67;:::i;:::-;4883:1;4907:4;4894:17;;4939:2;4931:6;4928:14;4956:1;4951:618;;;;5613:1;5630:6;5627:77;;;5679:9;5674:3;5670:19;5664:26;5655:35;;5627:77;5730:67;5790:6;5783:5;5730:67;:::i;:::-;5724:4;5717:81;5586:222;4921:887;;4951:618;5003:4;4999:9;4991:6;4987:22;5037:37;5069:4;5037:37;:::i;:::-;5096:1;5110:208;5124:7;5121:1;5118:14;5110:208;;;5203:9;5198:3;5194:19;5188:26;5180:6;5173:42;5254:1;5246:6;5242:14;5232:24;;5301:2;5290:9;5286:18;5273:31;;5147:4;5144:1;5140:12;5135:17;;5110:208;;;5346:6;5337:7;5334:19;5331:179;;;5404:9;5399:3;5395:19;5389:26;5447:48;5489:4;5481:6;5477:17;5466:9;5447:48;:::i;:::-;5439:6;5432:64;5354:156;5331:179;5556:1;5552;5544:6;5540:14;5536:22;5530:4;5523:36;4958:611;;;4921:887;;4511:1303;;;4419:1395;;:::o;289:726:14:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_addTokenToAllTokensEnumeration_1678": {
									"entryPoint": 6409,
									"id": 1678,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_addTokenToOwnerEnumeration_1658": {
									"entryPoint": 6999,
									"id": 1658,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_approve_1096": {
									"entryPoint": 3470,
									"id": 1096,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_1162": {
									"entryPoint": 5439,
									"id": 1162,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_authorizeSetScripts_3408": {
									"entryPoint": 5146,
									"id": 3408,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_baseURI_489": {
									"entryPoint": 4922,
									"id": 489,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_checkAuthorized_744": {
									"entryPoint": 7600,
									"id": 744,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_checkOnERC721Received_1292": {
									"entryPoint": 4488,
									"id": 1292,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 3770,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getApproved_671": {
									"entryPoint": 3406,
									"id": 671,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_isAuthorized_707": {
									"entryPoint": 8038,
									"id": 707,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_mint_900": {
									"entryPoint": 7795,
									"id": 900,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1884": {
									"entryPoint": 3463,
									"id": 1884,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_ownerOf_658": {
									"entryPoint": 5382,
									"id": 658,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_removeTokenFromAllTokensEnumeration_1786": {
									"entryPoint": 6807,
									"id": 1786,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_removeTokenFromOwnerEnumeration_1738": {
									"entryPoint": 6477,
									"id": 1738,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_requireOwned_1228": {
									"entryPoint": 3272,
									"id": 1228,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_safeMint_915": {
									"entryPoint": 4098,
									"id": 915,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_safeMint_941": {
									"entryPoint": 7131,
									"id": 941,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_setApprovalForAll_1199": {
									"entryPoint": 4127,
									"id": 1199,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 3905,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_1627": {
									"entryPoint": 3488,
									"id": 1627,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_update_850": {
									"entryPoint": 5886,
									"id": 850,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@approve_505": {
									"entryPoint": 1296,
									"id": 505,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_413": {
									"entryPoint": 2123,
									"id": 413,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_522": {
									"entryPoint": 1269,
									"id": 522,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_555": {
									"entryPoint": 2772,
									"id": 555,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@log10_3067": {
									"entryPoint": 7158,
									"id": 3067,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@name_435": {
									"entryPoint": 1125,
									"id": 435,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_426": {
									"entryPoint": 2106,
									"id": 426,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 2324,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 2305,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeMint_3423": {
									"entryPoint": 2507,
									"id": 3423,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@safeTransferFrom_619": {
									"entryPoint": 1749,
									"id": 619,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_645": {
									"entryPoint": 2551,
									"id": 645,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@scriptURI_3442": {
									"entryPoint": 1780,
									"id": 3442,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@setApprovalForAll_538": {
									"entryPoint": 2529,
									"id": 538,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setScriptURI_3462": {
									"entryPoint": 2682,
									"id": 3462,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@supportsInterface_1492": {
									"entryPoint": 3046,
									"id": 1492,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_2180": {
									"entryPoint": 7495,
									"id": 2180,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_3397": {
									"entryPoint": 1092,
									"id": 3397,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_3477": {
									"entryPoint": 3167,
									"id": 3477,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_385": {
									"entryPoint": 5157,
									"id": 385,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_444": {
									"entryPoint": 2363,
									"id": 444,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toString_1970": {
									"entryPoint": 4944,
									"id": 1970,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenByIndex_1558": {
									"entryPoint": 1992,
									"id": 1558,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenOfOwnerByIndex_1521": {
									"entryPoint": 1585,
									"id": 1521,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@tokenURI_480": {
									"entryPoint": 2580,
									"id": 480,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@totalSupply_1531": {
									"entryPoint": 1318,
									"id": 1531,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_601": {
									"entryPoint": 1330,
									"id": 601,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 2914,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 10283,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 9840,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr": {
									"entryPoint": 10173,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 9010,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_string_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 10417,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 9568,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 8522,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 11074,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 9905,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr": {
									"entryPoint": 10238,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 8837,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 9503,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 10533,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 9132,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 9950,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 9588,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 9030,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_string_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 10462,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 8542,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 11094,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 8857,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_string_memory_ptr_to_t_string_memory_ptr": {
									"entryPoint": 9325,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 8948,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack": {
									"entryPoint": 9356,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 8596,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 10944,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr": {
									"entryPoint": 9269,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8718,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 10835,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 9092,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 10883,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 8963,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 11000,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 10741,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": 10688,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_string_memory_ptr_$dyn_memory_ptr__to_t_array$_t_string_memory_ptr_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 9471,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 8611,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8774,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 9107,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 9752,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 8440,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_string_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 10078,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 9778,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 10125,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_string_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 9238,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 11323,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 9212,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 10918,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 8636,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_string_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 9344,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack": {
									"entryPoint": 9222,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 10928,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr": {
									"entryPoint": 9253,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 8646,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 10825,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 11227,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 11599,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 8931,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 8585,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 8457,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 8900,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 8806,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 11565,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 11458,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 11736,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 9826,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 8662,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 11341,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 10640,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 11709,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 9703,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 11449,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 11681,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 11182,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 11137,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 10595,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x31": {
									"entryPoint": 11278,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 10780,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 9658,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 11491,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 9650,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 10121,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 9654,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 8453,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 8449,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 8702,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 11356,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 11669,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 11541,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 11368,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 11500,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 8988,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 9546,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 8500,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 8815,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 11537,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:26127:17",
										"nodeType": "YulBlock",
										"src": "0:26127:17",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:17",
													"nodeType": "YulBlock",
													"src": "47:35:17",
													"statements": [
														{
															"nativeSrc": "57:19:17",
															"nodeType": "YulAssignment",
															"src": "57:19:17",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:17",
																		"nodeType": "YulLiteral",
																		"src": "73:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:17"
																},
																"nativeSrc": "67:9:17",
																"nodeType": "YulFunctionCall",
																"src": "67:9:17"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:17"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:17",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:17",
														"nodeType": "YulTypedName",
														"src": "40:6:17",
														"type": ""
													}
												],
												"src": "7:75:17"
											},
											{
												"body": {
													"nativeSrc": "177:28:17",
													"nodeType": "YulBlock",
													"src": "177:28:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:17",
																		"nodeType": "YulLiteral",
																		"src": "194:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:17",
																		"nodeType": "YulLiteral",
																		"src": "197:1:17",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:17"
																},
																"nativeSrc": "187:12:17",
																"nodeType": "YulFunctionCall",
																"src": "187:12:17"
															},
															"nativeSrc": "187:12:17",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:17"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:17",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:17"
											},
											{
												"body": {
													"nativeSrc": "300:28:17",
													"nodeType": "YulBlock",
													"src": "300:28:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:17",
																		"nodeType": "YulLiteral",
																		"src": "317:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:17",
																		"nodeType": "YulLiteral",
																		"src": "320:1:17",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:17"
																},
																"nativeSrc": "310:12:17",
																"nodeType": "YulFunctionCall",
																"src": "310:12:17"
															},
															"nativeSrc": "310:12:17",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:17"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:17",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:17"
											},
											{
												"body": {
													"nativeSrc": "378:105:17",
													"nodeType": "YulBlock",
													"src": "378:105:17",
													"statements": [
														{
															"nativeSrc": "388:89:17",
															"nodeType": "YulAssignment",
															"src": "388:89:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "403:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "410:66:17",
																		"nodeType": "YulLiteral",
																		"src": "410:66:17",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "399:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:17"
																},
																"nativeSrc": "399:78:17",
																"nodeType": "YulFunctionCall",
																"src": "399:78:17"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "388:7:17",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:17"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "334:149:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "360:5:17",
														"nodeType": "YulTypedName",
														"src": "360:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "370:7:17",
														"nodeType": "YulTypedName",
														"src": "370:7:17",
														"type": ""
													}
												],
												"src": "334:149:17"
											},
											{
												"body": {
													"nativeSrc": "531:78:17",
													"nodeType": "YulBlock",
													"src": "531:78:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "587:16:17",
																"nodeType": "YulBlock",
																"src": "587:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "596:1:17",
																					"nodeType": "YulLiteral",
																					"src": "596:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "599:1:17",
																					"nodeType": "YulLiteral",
																					"src": "599:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "589:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:17"
																			},
																			"nativeSrc": "589:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:17"
																		},
																		"nativeSrc": "589:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "554:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "578:5:17",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:17"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "561:16:17",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:17"
																				},
																				"nativeSrc": "561:23:17",
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:17"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "551:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:17"
																		},
																		"nativeSrc": "551:34:17",
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "544:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:17"
																},
																"nativeSrc": "544:42:17",
																"nodeType": "YulFunctionCall",
																"src": "544:42:17"
															},
															"nativeSrc": "541:62:17",
															"nodeType": "YulIf",
															"src": "541:62:17"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "489:120:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "524:5:17",
														"nodeType": "YulTypedName",
														"src": "524:5:17",
														"type": ""
													}
												],
												"src": "489:120:17"
											},
											{
												"body": {
													"nativeSrc": "666:86:17",
													"nodeType": "YulBlock",
													"src": "666:86:17",
													"statements": [
														{
															"nativeSrc": "676:29:17",
															"nodeType": "YulAssignment",
															"src": "676:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "698:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "685:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:17"
																},
																"nativeSrc": "685:20:17",
																"nodeType": "YulFunctionCall",
																"src": "685:20:17"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "676:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "740:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "714:25:17",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:17"
																},
																"nativeSrc": "714:32:17",
																"nodeType": "YulFunctionCall",
																"src": "714:32:17"
															},
															"nativeSrc": "714:32:17",
															"nodeType": "YulExpressionStatement",
															"src": "714:32:17"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "615:137:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "644:6:17",
														"nodeType": "YulTypedName",
														"src": "644:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "652:3:17",
														"nodeType": "YulTypedName",
														"src": "652:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "660:5:17",
														"nodeType": "YulTypedName",
														"src": "660:5:17",
														"type": ""
													}
												],
												"src": "615:137:17"
											},
											{
												"body": {
													"nativeSrc": "823:262:17",
													"nodeType": "YulBlock",
													"src": "823:262:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:83:17",
																"nodeType": "YulBlock",
																"src": "869:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "871:77:17",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:17"
																			},
																			"nativeSrc": "871:79:17",
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:17"
																		},
																		"nativeSrc": "871:79:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "844:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "853:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "840:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:17"
																		},
																		"nativeSrc": "840:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "865:2:17",
																		"nodeType": "YulLiteral",
																		"src": "865:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "836:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:17"
																},
																"nativeSrc": "836:32:17",
																"nodeType": "YulFunctionCall",
																"src": "836:32:17"
															},
															"nativeSrc": "833:119:17",
															"nodeType": "YulIf",
															"src": "833:119:17"
														},
														{
															"nativeSrc": "962:116:17",
															"nodeType": "YulBlock",
															"src": "962:116:17",
															"statements": [
																{
																	"nativeSrc": "977:15:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:17",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "991:1:17",
																		"nodeType": "YulLiteral",
																		"src": "991:1:17",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "981:6:17",
																			"nodeType": "YulTypedName",
																			"src": "981:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1006:62:17",
																	"nodeType": "YulAssignment",
																	"src": "1006:62:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1040:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1051:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1036:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:17"
																				},
																				"nativeSrc": "1036:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1060:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "1016:19:17",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:17"
																		},
																		"nativeSrc": "1016:52:17",
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:17"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1006:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:17"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "758:327:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "793:9:17",
														"nodeType": "YulTypedName",
														"src": "793:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "804:7:17",
														"nodeType": "YulTypedName",
														"src": "804:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "816:6:17",
														"nodeType": "YulTypedName",
														"src": "816:6:17",
														"type": ""
													}
												],
												"src": "758:327:17"
											},
											{
												"body": {
													"nativeSrc": "1133:48:17",
													"nodeType": "YulBlock",
													"src": "1133:48:17",
													"statements": [
														{
															"nativeSrc": "1143:32:17",
															"nodeType": "YulAssignment",
															"src": "1143:32:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1168:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:17"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1161:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:17"
																		},
																		"nativeSrc": "1161:13:17",
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1154:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:17"
																},
																"nativeSrc": "1154:21:17",
																"nodeType": "YulFunctionCall",
																"src": "1154:21:17"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1143:7:17",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:17"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1091:90:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1115:5:17",
														"nodeType": "YulTypedName",
														"src": "1115:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1125:7:17",
														"nodeType": "YulTypedName",
														"src": "1125:7:17",
														"type": ""
													}
												],
												"src": "1091:90:17"
											},
											{
												"body": {
													"nativeSrc": "1246:50:17",
													"nodeType": "YulBlock",
													"src": "1246:50:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1263:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1283:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:17"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1268:14:17",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:17"
																		},
																		"nativeSrc": "1268:21:17",
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1256:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:17"
																},
																"nativeSrc": "1256:34:17",
																"nodeType": "YulFunctionCall",
																"src": "1256:34:17"
															},
															"nativeSrc": "1256:34:17",
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:17"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1187:109:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1234:5:17",
														"nodeType": "YulTypedName",
														"src": "1234:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1241:3:17",
														"nodeType": "YulTypedName",
														"src": "1241:3:17",
														"type": ""
													}
												],
												"src": "1187:109:17"
											},
											{
												"body": {
													"nativeSrc": "1394:118:17",
													"nodeType": "YulBlock",
													"src": "1394:118:17",
													"statements": [
														{
															"nativeSrc": "1404:26:17",
															"nodeType": "YulAssignment",
															"src": "1404:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1416:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1427:2:17",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1412:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:17"
																},
																"nativeSrc": "1412:18:17",
																"nodeType": "YulFunctionCall",
																"src": "1412:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1404:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1478:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1491:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1502:1:17",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1487:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:17"
																		},
																		"nativeSrc": "1487:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1440:37:17",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:17"
																},
																"nativeSrc": "1440:65:17",
																"nodeType": "YulFunctionCall",
																"src": "1440:65:17"
															},
															"nativeSrc": "1440:65:17",
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1302:210:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1366:9:17",
														"nodeType": "YulTypedName",
														"src": "1366:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1378:6:17",
														"nodeType": "YulTypedName",
														"src": "1378:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1389:4:17",
														"nodeType": "YulTypedName",
														"src": "1389:4:17",
														"type": ""
													}
												],
												"src": "1302:210:17"
											},
											{
												"body": {
													"nativeSrc": "1577:40:17",
													"nodeType": "YulBlock",
													"src": "1577:40:17",
													"statements": [
														{
															"nativeSrc": "1588:22:17",
															"nodeType": "YulAssignment",
															"src": "1588:22:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1604:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "1604:5:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1598:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "1598:5:17"
																},
																"nativeSrc": "1598:12:17",
																"nodeType": "YulFunctionCall",
																"src": "1598:12:17"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1588:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "1588:6:17"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1518:99:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1560:5:17",
														"nodeType": "YulTypedName",
														"src": "1560:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1570:6:17",
														"nodeType": "YulTypedName",
														"src": "1570:6:17",
														"type": ""
													}
												],
												"src": "1518:99:17"
											},
											{
												"body": {
													"nativeSrc": "1719:73:17",
													"nodeType": "YulBlock",
													"src": "1719:73:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1736:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "1736:3:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1741:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "1741:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1729:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "1729:6:17"
																},
																"nativeSrc": "1729:19:17",
																"nodeType": "YulFunctionCall",
																"src": "1729:19:17"
															},
															"nativeSrc": "1729:19:17",
															"nodeType": "YulExpressionStatement",
															"src": "1729:19:17"
														},
														{
															"nativeSrc": "1757:29:17",
															"nodeType": "YulAssignment",
															"src": "1757:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1776:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "1776:3:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1781:4:17",
																		"nodeType": "YulLiteral",
																		"src": "1781:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1772:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "1772:3:17"
																},
																"nativeSrc": "1772:14:17",
																"nodeType": "YulFunctionCall",
																"src": "1772:14:17"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1757:11:17",
																	"nodeType": "YulIdentifier",
																	"src": "1757:11:17"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1623:169:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1691:3:17",
														"nodeType": "YulTypedName",
														"src": "1691:3:17",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1696:6:17",
														"nodeType": "YulTypedName",
														"src": "1696:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1707:11:17",
														"nodeType": "YulTypedName",
														"src": "1707:11:17",
														"type": ""
													}
												],
												"src": "1623:169:17"
											},
											{
												"body": {
													"nativeSrc": "1860:184:17",
													"nodeType": "YulBlock",
													"src": "1860:184:17",
													"statements": [
														{
															"nativeSrc": "1870:10:17",
															"nodeType": "YulVariableDeclaration",
															"src": "1870:10:17",
															"value": {
																"kind": "number",
																"nativeSrc": "1879:1:17",
																"nodeType": "YulLiteral",
																"src": "1879:1:17",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "1874:1:17",
																	"nodeType": "YulTypedName",
																	"src": "1874:1:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1939:63:17",
																"nodeType": "YulBlock",
																"src": "1939:63:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "1964:3:17",
																							"nodeType": "YulIdentifier",
																							"src": "1964:3:17"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "1969:1:17",
																							"nodeType": "YulIdentifier",
																							"src": "1969:1:17"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "1960:3:17",
																						"nodeType": "YulIdentifier",
																						"src": "1960:3:17"
																					},
																					"nativeSrc": "1960:11:17",
																					"nodeType": "YulFunctionCall",
																					"src": "1960:11:17"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "1983:3:17",
																									"nodeType": "YulIdentifier",
																									"src": "1983:3:17"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "1988:1:17",
																									"nodeType": "YulIdentifier",
																									"src": "1988:1:17"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1979:3:17",
																								"nodeType": "YulIdentifier",
																								"src": "1979:3:17"
																							},
																							"nativeSrc": "1979:11:17",
																							"nodeType": "YulFunctionCall",
																							"src": "1979:11:17"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "1973:5:17",
																						"nodeType": "YulIdentifier",
																						"src": "1973:5:17"
																					},
																					"nativeSrc": "1973:18:17",
																					"nodeType": "YulFunctionCall",
																					"src": "1973:18:17"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1953:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "1953:6:17"
																			},
																			"nativeSrc": "1953:39:17",
																			"nodeType": "YulFunctionCall",
																			"src": "1953:39:17"
																		},
																		"nativeSrc": "1953:39:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "1953:39:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "1900:1:17",
																		"nodeType": "YulIdentifier",
																		"src": "1900:1:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1903:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "1903:6:17"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "1897:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "1897:2:17"
																},
																"nativeSrc": "1897:13:17",
																"nodeType": "YulFunctionCall",
																"src": "1897:13:17"
															},
															"nativeSrc": "1889:113:17",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "1911:19:17",
																"nodeType": "YulBlock",
																"src": "1911:19:17",
																"statements": [
																	{
																		"nativeSrc": "1913:15:17",
																		"nodeType": "YulAssignment",
																		"src": "1913:15:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "1922:1:17",
																					"nodeType": "YulIdentifier",
																					"src": "1922:1:17"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1925:2:17",
																					"nodeType": "YulLiteral",
																					"src": "1925:2:17",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1918:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "1918:3:17"
																			},
																			"nativeSrc": "1918:10:17",
																			"nodeType": "YulFunctionCall",
																			"src": "1918:10:17"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "1913:1:17",
																				"nodeType": "YulIdentifier",
																				"src": "1913:1:17"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "1893:3:17",
																"nodeType": "YulBlock",
																"src": "1893:3:17",
																"statements": []
															},
															"src": "1889:113:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "2022:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "2022:3:17"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2027:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "2027:6:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2018:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "2018:3:17"
																		},
																		"nativeSrc": "2018:16:17",
																		"nodeType": "YulFunctionCall",
																		"src": "2018:16:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2036:1:17",
																		"nodeType": "YulLiteral",
																		"src": "2036:1:17",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2011:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "2011:6:17"
																},
																"nativeSrc": "2011:27:17",
																"nodeType": "YulFunctionCall",
																"src": "2011:27:17"
															},
															"nativeSrc": "2011:27:17",
															"nodeType": "YulExpressionStatement",
															"src": "2011:27:17"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1798:246:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1842:3:17",
														"nodeType": "YulTypedName",
														"src": "1842:3:17",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1847:3:17",
														"nodeType": "YulTypedName",
														"src": "1847:3:17",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1852:6:17",
														"nodeType": "YulTypedName",
														"src": "1852:6:17",
														"type": ""
													}
												],
												"src": "1798:246:17"
											},
											{
												"body": {
													"nativeSrc": "2098:54:17",
													"nodeType": "YulBlock",
													"src": "2098:54:17",
													"statements": [
														{
															"nativeSrc": "2108:38:17",
															"nodeType": "YulAssignment",
															"src": "2108:38:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2126:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "2126:5:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2133:2:17",
																				"nodeType": "YulLiteral",
																				"src": "2133:2:17",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2122:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "2122:3:17"
																		},
																		"nativeSrc": "2122:14:17",
																		"nodeType": "YulFunctionCall",
																		"src": "2122:14:17"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2142:2:17",
																				"nodeType": "YulLiteral",
																				"src": "2142:2:17",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2138:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "2138:3:17"
																		},
																		"nativeSrc": "2138:7:17",
																		"nodeType": "YulFunctionCall",
																		"src": "2138:7:17"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2118:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "2118:3:17"
																},
																"nativeSrc": "2118:28:17",
																"nodeType": "YulFunctionCall",
																"src": "2118:28:17"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2108:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "2108:6:17"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "2050:102:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2081:5:17",
														"nodeType": "YulTypedName",
														"src": "2081:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2091:6:17",
														"nodeType": "YulTypedName",
														"src": "2091:6:17",
														"type": ""
													}
												],
												"src": "2050:102:17"
											},
											{
												"body": {
													"nativeSrc": "2250:285:17",
													"nodeType": "YulBlock",
													"src": "2250:285:17",
													"statements": [
														{
															"nativeSrc": "2260:53:17",
															"nodeType": "YulVariableDeclaration",
															"src": "2260:53:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2307:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "2307:5:17"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "2274:32:17",
																	"nodeType": "YulIdentifier",
																	"src": "2274:32:17"
																},
																"nativeSrc": "2274:39:17",
																"nodeType": "YulFunctionCall",
																"src": "2274:39:17"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2264:6:17",
																	"nodeType": "YulTypedName",
																	"src": "2264:6:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2322:78:17",
															"nodeType": "YulAssignment",
															"src": "2322:78:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2388:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "2388:3:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2393:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "2393:6:17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2329:58:17",
																	"nodeType": "YulIdentifier",
																	"src": "2329:58:17"
																},
																"nativeSrc": "2329:71:17",
																"nodeType": "YulFunctionCall",
																"src": "2329:71:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2322:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "2322:3:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2448:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "2448:5:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2455:4:17",
																				"nodeType": "YulLiteral",
																				"src": "2455:4:17",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2444:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "2444:3:17"
																		},
																		"nativeSrc": "2444:16:17",
																		"nodeType": "YulFunctionCall",
																		"src": "2444:16:17"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "2462:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "2462:3:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2467:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "2467:6:17"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2409:34:17",
																	"nodeType": "YulIdentifier",
																	"src": "2409:34:17"
																},
																"nativeSrc": "2409:65:17",
																"nodeType": "YulFunctionCall",
																"src": "2409:65:17"
															},
															"nativeSrc": "2409:65:17",
															"nodeType": "YulExpressionStatement",
															"src": "2409:65:17"
														},
														{
															"nativeSrc": "2483:46:17",
															"nodeType": "YulAssignment",
															"src": "2483:46:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2494:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "2494:3:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2521:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "2521:6:17"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "2499:21:17",
																			"nodeType": "YulIdentifier",
																			"src": "2499:21:17"
																		},
																		"nativeSrc": "2499:29:17",
																		"nodeType": "YulFunctionCall",
																		"src": "2499:29:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2490:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "2490:3:17"
																},
																"nativeSrc": "2490:39:17",
																"nodeType": "YulFunctionCall",
																"src": "2490:39:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2483:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "2483:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2158:377:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2231:5:17",
														"nodeType": "YulTypedName",
														"src": "2231:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2238:3:17",
														"nodeType": "YulTypedName",
														"src": "2238:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2246:3:17",
														"nodeType": "YulTypedName",
														"src": "2246:3:17",
														"type": ""
													}
												],
												"src": "2158:377:17"
											},
											{
												"body": {
													"nativeSrc": "2659:195:17",
													"nodeType": "YulBlock",
													"src": "2659:195:17",
													"statements": [
														{
															"nativeSrc": "2669:26:17",
															"nodeType": "YulAssignment",
															"src": "2669:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2681:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "2681:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2692:2:17",
																		"nodeType": "YulLiteral",
																		"src": "2692:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2677:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "2677:3:17"
																},
																"nativeSrc": "2677:18:17",
																"nodeType": "YulFunctionCall",
																"src": "2677:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2669:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "2669:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2716:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "2716:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2727:1:17",
																				"nodeType": "YulLiteral",
																				"src": "2727:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2712:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "2712:3:17"
																		},
																		"nativeSrc": "2712:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "2712:17:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2735:4:17",
																				"nodeType": "YulIdentifier",
																				"src": "2735:4:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2741:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "2741:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2731:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "2731:3:17"
																		},
																		"nativeSrc": "2731:20:17",
																		"nodeType": "YulFunctionCall",
																		"src": "2731:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2705:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "2705:6:17"
																},
																"nativeSrc": "2705:47:17",
																"nodeType": "YulFunctionCall",
																"src": "2705:47:17"
															},
															"nativeSrc": "2705:47:17",
															"nodeType": "YulExpressionStatement",
															"src": "2705:47:17"
														},
														{
															"nativeSrc": "2761:86:17",
															"nodeType": "YulAssignment",
															"src": "2761:86:17",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2833:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "2833:6:17"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "2842:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "2842:4:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2769:63:17",
																	"nodeType": "YulIdentifier",
																	"src": "2769:63:17"
																},
																"nativeSrc": "2769:78:17",
																"nodeType": "YulFunctionCall",
																"src": "2769:78:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2761:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "2761:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2541:313:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2631:9:17",
														"nodeType": "YulTypedName",
														"src": "2631:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2643:6:17",
														"nodeType": "YulTypedName",
														"src": "2643:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2654:4:17",
														"nodeType": "YulTypedName",
														"src": "2654:4:17",
														"type": ""
													}
												],
												"src": "2541:313:17"
											},
											{
												"body": {
													"nativeSrc": "2905:32:17",
													"nodeType": "YulBlock",
													"src": "2905:32:17",
													"statements": [
														{
															"nativeSrc": "2915:16:17",
															"nodeType": "YulAssignment",
															"src": "2915:16:17",
															"value": {
																"name": "value",
																"nativeSrc": "2926:5:17",
																"nodeType": "YulIdentifier",
																"src": "2926:5:17"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2915:7:17",
																	"nodeType": "YulIdentifier",
																	"src": "2915:7:17"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2860:77:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2887:5:17",
														"nodeType": "YulTypedName",
														"src": "2887:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2897:7:17",
														"nodeType": "YulTypedName",
														"src": "2897:7:17",
														"type": ""
													}
												],
												"src": "2860:77:17"
											},
											{
												"body": {
													"nativeSrc": "2986:79:17",
													"nodeType": "YulBlock",
													"src": "2986:79:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "3043:16:17",
																"nodeType": "YulBlock",
																"src": "3043:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3052:1:17",
																					"nodeType": "YulLiteral",
																					"src": "3052:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3055:1:17",
																					"nodeType": "YulLiteral",
																					"src": "3055:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3045:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "3045:6:17"
																			},
																			"nativeSrc": "3045:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "3045:12:17"
																		},
																		"nativeSrc": "3045:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "3045:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3009:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "3009:5:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3034:5:17",
																						"nodeType": "YulIdentifier",
																						"src": "3034:5:17"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3016:17:17",
																					"nodeType": "YulIdentifier",
																					"src": "3016:17:17"
																				},
																				"nativeSrc": "3016:24:17",
																				"nodeType": "YulFunctionCall",
																				"src": "3016:24:17"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3006:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "3006:2:17"
																		},
																		"nativeSrc": "3006:35:17",
																		"nodeType": "YulFunctionCall",
																		"src": "3006:35:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2999:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "2999:6:17"
																},
																"nativeSrc": "2999:43:17",
																"nodeType": "YulFunctionCall",
																"src": "2999:43:17"
															},
															"nativeSrc": "2996:63:17",
															"nodeType": "YulIf",
															"src": "2996:63:17"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2943:122:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2979:5:17",
														"nodeType": "YulTypedName",
														"src": "2979:5:17",
														"type": ""
													}
												],
												"src": "2943:122:17"
											},
											{
												"body": {
													"nativeSrc": "3123:87:17",
													"nodeType": "YulBlock",
													"src": "3123:87:17",
													"statements": [
														{
															"nativeSrc": "3133:29:17",
															"nodeType": "YulAssignment",
															"src": "3133:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3155:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "3155:6:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3142:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "3142:12:17"
																},
																"nativeSrc": "3142:20:17",
																"nodeType": "YulFunctionCall",
																"src": "3142:20:17"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3133:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "3133:5:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3198:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "3198:5:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3171:26:17",
																	"nodeType": "YulIdentifier",
																	"src": "3171:26:17"
																},
																"nativeSrc": "3171:33:17",
																"nodeType": "YulFunctionCall",
																"src": "3171:33:17"
															},
															"nativeSrc": "3171:33:17",
															"nodeType": "YulExpressionStatement",
															"src": "3171:33:17"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "3071:139:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3101:6:17",
														"nodeType": "YulTypedName",
														"src": "3101:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3109:3:17",
														"nodeType": "YulTypedName",
														"src": "3109:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3117:5:17",
														"nodeType": "YulTypedName",
														"src": "3117:5:17",
														"type": ""
													}
												],
												"src": "3071:139:17"
											},
											{
												"body": {
													"nativeSrc": "3282:263:17",
													"nodeType": "YulBlock",
													"src": "3282:263:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "3328:83:17",
																"nodeType": "YulBlock",
																"src": "3328:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3330:77:17",
																				"nodeType": "YulIdentifier",
																				"src": "3330:77:17"
																			},
																			"nativeSrc": "3330:79:17",
																			"nodeType": "YulFunctionCall",
																			"src": "3330:79:17"
																		},
																		"nativeSrc": "3330:79:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "3330:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3303:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "3303:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3299:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "3299:3:17"
																		},
																		"nativeSrc": "3299:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "3299:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3324:2:17",
																		"nodeType": "YulLiteral",
																		"src": "3324:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3295:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "3295:3:17"
																},
																"nativeSrc": "3295:32:17",
																"nodeType": "YulFunctionCall",
																"src": "3295:32:17"
															},
															"nativeSrc": "3292:119:17",
															"nodeType": "YulIf",
															"src": "3292:119:17"
														},
														{
															"nativeSrc": "3421:117:17",
															"nodeType": "YulBlock",
															"src": "3421:117:17",
															"statements": [
																{
																	"nativeSrc": "3436:15:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3436:15:17",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3450:1:17",
																		"nodeType": "YulLiteral",
																		"src": "3450:1:17",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3440:6:17",
																			"nodeType": "YulTypedName",
																			"src": "3440:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3465:63:17",
																	"nodeType": "YulAssignment",
																	"src": "3465:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3500:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "3500:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3511:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "3511:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3496:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "3496:3:17"
																				},
																				"nativeSrc": "3496:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "3496:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3520:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "3520:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3475:20:17",
																			"nodeType": "YulIdentifier",
																			"src": "3475:20:17"
																		},
																		"nativeSrc": "3475:53:17",
																		"nodeType": "YulFunctionCall",
																		"src": "3475:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3465:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "3465:6:17"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "3216:329:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3252:9:17",
														"nodeType": "YulTypedName",
														"src": "3252:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3263:7:17",
														"nodeType": "YulTypedName",
														"src": "3263:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3275:6:17",
														"nodeType": "YulTypedName",
														"src": "3275:6:17",
														"type": ""
													}
												],
												"src": "3216:329:17"
											},
											{
												"body": {
													"nativeSrc": "3596:81:17",
													"nodeType": "YulBlock",
													"src": "3596:81:17",
													"statements": [
														{
															"nativeSrc": "3606:65:17",
															"nodeType": "YulAssignment",
															"src": "3606:65:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3621:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "3621:5:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3628:42:17",
																		"nodeType": "YulLiteral",
																		"src": "3628:42:17",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3617:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "3617:3:17"
																},
																"nativeSrc": "3617:54:17",
																"nodeType": "YulFunctionCall",
																"src": "3617:54:17"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3606:7:17",
																	"nodeType": "YulIdentifier",
																	"src": "3606:7:17"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "3551:126:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3578:5:17",
														"nodeType": "YulTypedName",
														"src": "3578:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3588:7:17",
														"nodeType": "YulTypedName",
														"src": "3588:7:17",
														"type": ""
													}
												],
												"src": "3551:126:17"
											},
											{
												"body": {
													"nativeSrc": "3728:51:17",
													"nodeType": "YulBlock",
													"src": "3728:51:17",
													"statements": [
														{
															"nativeSrc": "3738:35:17",
															"nodeType": "YulAssignment",
															"src": "3738:35:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3767:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "3767:5:17"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3749:17:17",
																	"nodeType": "YulIdentifier",
																	"src": "3749:17:17"
																},
																"nativeSrc": "3749:24:17",
																"nodeType": "YulFunctionCall",
																"src": "3749:24:17"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3738:7:17",
																	"nodeType": "YulIdentifier",
																	"src": "3738:7:17"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "3683:96:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3710:5:17",
														"nodeType": "YulTypedName",
														"src": "3710:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3720:7:17",
														"nodeType": "YulTypedName",
														"src": "3720:7:17",
														"type": ""
													}
												],
												"src": "3683:96:17"
											},
											{
												"body": {
													"nativeSrc": "3850:53:17",
													"nodeType": "YulBlock",
													"src": "3850:53:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3867:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "3867:3:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3890:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "3890:5:17"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "3872:17:17",
																			"nodeType": "YulIdentifier",
																			"src": "3872:17:17"
																		},
																		"nativeSrc": "3872:24:17",
																		"nodeType": "YulFunctionCall",
																		"src": "3872:24:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3860:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "3860:6:17"
																},
																"nativeSrc": "3860:37:17",
																"nodeType": "YulFunctionCall",
																"src": "3860:37:17"
															},
															"nativeSrc": "3860:37:17",
															"nodeType": "YulExpressionStatement",
															"src": "3860:37:17"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "3785:118:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3838:5:17",
														"nodeType": "YulTypedName",
														"src": "3838:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3845:3:17",
														"nodeType": "YulTypedName",
														"src": "3845:3:17",
														"type": ""
													}
												],
												"src": "3785:118:17"
											},
											{
												"body": {
													"nativeSrc": "4007:124:17",
													"nodeType": "YulBlock",
													"src": "4007:124:17",
													"statements": [
														{
															"nativeSrc": "4017:26:17",
															"nodeType": "YulAssignment",
															"src": "4017:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4029:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "4029:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4040:2:17",
																		"nodeType": "YulLiteral",
																		"src": "4040:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4025:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "4025:3:17"
																},
																"nativeSrc": "4025:18:17",
																"nodeType": "YulFunctionCall",
																"src": "4025:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4017:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "4017:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4097:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "4097:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4110:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "4110:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4121:1:17",
																				"nodeType": "YulLiteral",
																				"src": "4121:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4106:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "4106:3:17"
																		},
																		"nativeSrc": "4106:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "4106:17:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "4053:43:17",
																	"nodeType": "YulIdentifier",
																	"src": "4053:43:17"
																},
																"nativeSrc": "4053:71:17",
																"nodeType": "YulFunctionCall",
																"src": "4053:71:17"
															},
															"nativeSrc": "4053:71:17",
															"nodeType": "YulExpressionStatement",
															"src": "4053:71:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3909:222:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3979:9:17",
														"nodeType": "YulTypedName",
														"src": "3979:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3991:6:17",
														"nodeType": "YulTypedName",
														"src": "3991:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4002:4:17",
														"nodeType": "YulTypedName",
														"src": "4002:4:17",
														"type": ""
													}
												],
												"src": "3909:222:17"
											},
											{
												"body": {
													"nativeSrc": "4180:79:17",
													"nodeType": "YulBlock",
													"src": "4180:79:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "4237:16:17",
																"nodeType": "YulBlock",
																"src": "4237:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4246:1:17",
																					"nodeType": "YulLiteral",
																					"src": "4246:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4249:1:17",
																					"nodeType": "YulLiteral",
																					"src": "4249:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4239:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "4239:6:17"
																			},
																			"nativeSrc": "4239:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "4239:12:17"
																		},
																		"nativeSrc": "4239:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "4239:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4203:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "4203:5:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4228:5:17",
																						"nodeType": "YulIdentifier",
																						"src": "4228:5:17"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "4210:17:17",
																					"nodeType": "YulIdentifier",
																					"src": "4210:17:17"
																				},
																				"nativeSrc": "4210:24:17",
																				"nodeType": "YulFunctionCall",
																				"src": "4210:24:17"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4200:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "4200:2:17"
																		},
																		"nativeSrc": "4200:35:17",
																		"nodeType": "YulFunctionCall",
																		"src": "4200:35:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4193:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "4193:6:17"
																},
																"nativeSrc": "4193:43:17",
																"nodeType": "YulFunctionCall",
																"src": "4193:43:17"
															},
															"nativeSrc": "4190:63:17",
															"nodeType": "YulIf",
															"src": "4190:63:17"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "4137:122:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4173:5:17",
														"nodeType": "YulTypedName",
														"src": "4173:5:17",
														"type": ""
													}
												],
												"src": "4137:122:17"
											},
											{
												"body": {
													"nativeSrc": "4317:87:17",
													"nodeType": "YulBlock",
													"src": "4317:87:17",
													"statements": [
														{
															"nativeSrc": "4327:29:17",
															"nodeType": "YulAssignment",
															"src": "4327:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4349:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "4349:6:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4336:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "4336:12:17"
																},
																"nativeSrc": "4336:20:17",
																"nodeType": "YulFunctionCall",
																"src": "4336:20:17"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4327:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "4327:5:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4392:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "4392:5:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "4365:26:17",
																	"nodeType": "YulIdentifier",
																	"src": "4365:26:17"
																},
																"nativeSrc": "4365:33:17",
																"nodeType": "YulFunctionCall",
																"src": "4365:33:17"
															},
															"nativeSrc": "4365:33:17",
															"nodeType": "YulExpressionStatement",
															"src": "4365:33:17"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "4265:139:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4295:6:17",
														"nodeType": "YulTypedName",
														"src": "4295:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4303:3:17",
														"nodeType": "YulTypedName",
														"src": "4303:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4311:5:17",
														"nodeType": "YulTypedName",
														"src": "4311:5:17",
														"type": ""
													}
												],
												"src": "4265:139:17"
											},
											{
												"body": {
													"nativeSrc": "4493:391:17",
													"nodeType": "YulBlock",
													"src": "4493:391:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "4539:83:17",
																"nodeType": "YulBlock",
																"src": "4539:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4541:77:17",
																				"nodeType": "YulIdentifier",
																				"src": "4541:77:17"
																			},
																			"nativeSrc": "4541:79:17",
																			"nodeType": "YulFunctionCall",
																			"src": "4541:79:17"
																		},
																		"nativeSrc": "4541:79:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "4541:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4514:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "4514:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4523:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "4523:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4510:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "4510:3:17"
																		},
																		"nativeSrc": "4510:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "4510:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4535:2:17",
																		"nodeType": "YulLiteral",
																		"src": "4535:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4506:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "4506:3:17"
																},
																"nativeSrc": "4506:32:17",
																"nodeType": "YulFunctionCall",
																"src": "4506:32:17"
															},
															"nativeSrc": "4503:119:17",
															"nodeType": "YulIf",
															"src": "4503:119:17"
														},
														{
															"nativeSrc": "4632:117:17",
															"nodeType": "YulBlock",
															"src": "4632:117:17",
															"statements": [
																{
																	"nativeSrc": "4647:15:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4647:15:17",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4661:1:17",
																		"nodeType": "YulLiteral",
																		"src": "4661:1:17",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4651:6:17",
																			"nodeType": "YulTypedName",
																			"src": "4651:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4676:63:17",
																	"nodeType": "YulAssignment",
																	"src": "4676:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4711:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "4711:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4722:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "4722:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4707:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "4707:3:17"
																				},
																				"nativeSrc": "4707:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "4707:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4731:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "4731:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4686:20:17",
																			"nodeType": "YulIdentifier",
																			"src": "4686:20:17"
																		},
																		"nativeSrc": "4686:53:17",
																		"nodeType": "YulFunctionCall",
																		"src": "4686:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4676:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "4676:6:17"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4759:118:17",
															"nodeType": "YulBlock",
															"src": "4759:118:17",
															"statements": [
																{
																	"nativeSrc": "4774:16:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4774:16:17",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4788:2:17",
																		"nodeType": "YulLiteral",
																		"src": "4788:2:17",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4778:6:17",
																			"nodeType": "YulTypedName",
																			"src": "4778:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4804:63:17",
																	"nodeType": "YulAssignment",
																	"src": "4804:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4839:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "4839:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4850:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "4850:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4835:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "4835:3:17"
																				},
																				"nativeSrc": "4835:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "4835:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4859:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "4859:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4814:20:17",
																			"nodeType": "YulIdentifier",
																			"src": "4814:20:17"
																		},
																		"nativeSrc": "4814:53:17",
																		"nodeType": "YulFunctionCall",
																		"src": "4814:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4804:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "4804:6:17"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "4410:474:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4455:9:17",
														"nodeType": "YulTypedName",
														"src": "4455:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4466:7:17",
														"nodeType": "YulTypedName",
														"src": "4466:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4478:6:17",
														"nodeType": "YulTypedName",
														"src": "4478:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4486:6:17",
														"nodeType": "YulTypedName",
														"src": "4486:6:17",
														"type": ""
													}
												],
												"src": "4410:474:17"
											},
											{
												"body": {
													"nativeSrc": "4955:53:17",
													"nodeType": "YulBlock",
													"src": "4955:53:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4972:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "4972:3:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4995:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "4995:5:17"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "4977:17:17",
																			"nodeType": "YulIdentifier",
																			"src": "4977:17:17"
																		},
																		"nativeSrc": "4977:24:17",
																		"nodeType": "YulFunctionCall",
																		"src": "4977:24:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4965:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "4965:6:17"
																},
																"nativeSrc": "4965:37:17",
																"nodeType": "YulFunctionCall",
																"src": "4965:37:17"
															},
															"nativeSrc": "4965:37:17",
															"nodeType": "YulExpressionStatement",
															"src": "4965:37:17"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "4890:118:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4943:5:17",
														"nodeType": "YulTypedName",
														"src": "4943:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4950:3:17",
														"nodeType": "YulTypedName",
														"src": "4950:3:17",
														"type": ""
													}
												],
												"src": "4890:118:17"
											},
											{
												"body": {
													"nativeSrc": "5112:124:17",
													"nodeType": "YulBlock",
													"src": "5112:124:17",
													"statements": [
														{
															"nativeSrc": "5122:26:17",
															"nodeType": "YulAssignment",
															"src": "5122:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5134:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "5134:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5145:2:17",
																		"nodeType": "YulLiteral",
																		"src": "5145:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5130:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "5130:3:17"
																},
																"nativeSrc": "5130:18:17",
																"nodeType": "YulFunctionCall",
																"src": "5130:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5122:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "5122:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5202:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "5202:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5215:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "5215:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5226:1:17",
																				"nodeType": "YulLiteral",
																				"src": "5226:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5211:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "5211:3:17"
																		},
																		"nativeSrc": "5211:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "5211:17:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5158:43:17",
																	"nodeType": "YulIdentifier",
																	"src": "5158:43:17"
																},
																"nativeSrc": "5158:71:17",
																"nodeType": "YulFunctionCall",
																"src": "5158:71:17"
															},
															"nativeSrc": "5158:71:17",
															"nodeType": "YulExpressionStatement",
															"src": "5158:71:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "5014:222:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5084:9:17",
														"nodeType": "YulTypedName",
														"src": "5084:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5096:6:17",
														"nodeType": "YulTypedName",
														"src": "5096:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5107:4:17",
														"nodeType": "YulTypedName",
														"src": "5107:4:17",
														"type": ""
													}
												],
												"src": "5014:222:17"
											},
											{
												"body": {
													"nativeSrc": "5342:519:17",
													"nodeType": "YulBlock",
													"src": "5342:519:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "5388:83:17",
																"nodeType": "YulBlock",
																"src": "5388:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5390:77:17",
																				"nodeType": "YulIdentifier",
																				"src": "5390:77:17"
																			},
																			"nativeSrc": "5390:79:17",
																			"nodeType": "YulFunctionCall",
																			"src": "5390:79:17"
																		},
																		"nativeSrc": "5390:79:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "5390:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5363:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "5363:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5372:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "5372:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5359:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "5359:3:17"
																		},
																		"nativeSrc": "5359:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "5359:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5384:2:17",
																		"nodeType": "YulLiteral",
																		"src": "5384:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5355:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "5355:3:17"
																},
																"nativeSrc": "5355:32:17",
																"nodeType": "YulFunctionCall",
																"src": "5355:32:17"
															},
															"nativeSrc": "5352:119:17",
															"nodeType": "YulIf",
															"src": "5352:119:17"
														},
														{
															"nativeSrc": "5481:117:17",
															"nodeType": "YulBlock",
															"src": "5481:117:17",
															"statements": [
																{
																	"nativeSrc": "5496:15:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5496:15:17",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5510:1:17",
																		"nodeType": "YulLiteral",
																		"src": "5510:1:17",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5500:6:17",
																			"nodeType": "YulTypedName",
																			"src": "5500:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5525:63:17",
																	"nodeType": "YulAssignment",
																	"src": "5525:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5560:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "5560:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5571:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "5571:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5556:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "5556:3:17"
																				},
																				"nativeSrc": "5556:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "5556:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5580:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "5580:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5535:20:17",
																			"nodeType": "YulIdentifier",
																			"src": "5535:20:17"
																		},
																		"nativeSrc": "5535:53:17",
																		"nodeType": "YulFunctionCall",
																		"src": "5535:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5525:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "5525:6:17"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5608:118:17",
															"nodeType": "YulBlock",
															"src": "5608:118:17",
															"statements": [
																{
																	"nativeSrc": "5623:16:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5623:16:17",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5637:2:17",
																		"nodeType": "YulLiteral",
																		"src": "5637:2:17",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5627:6:17",
																			"nodeType": "YulTypedName",
																			"src": "5627:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5653:63:17",
																	"nodeType": "YulAssignment",
																	"src": "5653:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5688:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "5688:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5699:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "5699:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5684:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "5684:3:17"
																				},
																				"nativeSrc": "5684:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "5684:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5708:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "5708:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5663:20:17",
																			"nodeType": "YulIdentifier",
																			"src": "5663:20:17"
																		},
																		"nativeSrc": "5663:53:17",
																		"nodeType": "YulFunctionCall",
																		"src": "5663:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5653:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "5653:6:17"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5736:118:17",
															"nodeType": "YulBlock",
															"src": "5736:118:17",
															"statements": [
																{
																	"nativeSrc": "5751:16:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5751:16:17",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5765:2:17",
																		"nodeType": "YulLiteral",
																		"src": "5765:2:17",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5755:6:17",
																			"nodeType": "YulTypedName",
																			"src": "5755:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5781:63:17",
																	"nodeType": "YulAssignment",
																	"src": "5781:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5816:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "5816:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5827:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "5827:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5812:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "5812:3:17"
																				},
																				"nativeSrc": "5812:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "5812:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5836:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "5836:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5791:20:17",
																			"nodeType": "YulIdentifier",
																			"src": "5791:20:17"
																		},
																		"nativeSrc": "5791:53:17",
																		"nodeType": "YulFunctionCall",
																		"src": "5791:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "5781:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "5781:6:17"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "5242:619:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5296:9:17",
														"nodeType": "YulTypedName",
														"src": "5296:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5307:7:17",
														"nodeType": "YulTypedName",
														"src": "5307:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5319:6:17",
														"nodeType": "YulTypedName",
														"src": "5319:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5327:6:17",
														"nodeType": "YulTypedName",
														"src": "5327:6:17",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5335:6:17",
														"nodeType": "YulTypedName",
														"src": "5335:6:17",
														"type": ""
													}
												],
												"src": "5242:619:17"
											},
											{
												"body": {
													"nativeSrc": "5951:40:17",
													"nodeType": "YulBlock",
													"src": "5951:40:17",
													"statements": [
														{
															"nativeSrc": "5962:22:17",
															"nodeType": "YulAssignment",
															"src": "5962:22:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5978:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "5978:5:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5972:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "5972:5:17"
																},
																"nativeSrc": "5972:12:17",
																"nodeType": "YulFunctionCall",
																"src": "5972:12:17"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "5962:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "5962:6:17"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr",
												"nativeSrc": "5867:124:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5934:5:17",
														"nodeType": "YulTypedName",
														"src": "5934:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "5944:6:17",
														"nodeType": "YulTypedName",
														"src": "5944:6:17",
														"type": ""
													}
												],
												"src": "5867:124:17"
											},
											{
												"body": {
													"nativeSrc": "6118:73:17",
													"nodeType": "YulBlock",
													"src": "6118:73:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6135:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "6135:3:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6140:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "6140:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6128:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "6128:6:17"
																},
																"nativeSrc": "6128:19:17",
																"nodeType": "YulFunctionCall",
																"src": "6128:19:17"
															},
															"nativeSrc": "6128:19:17",
															"nodeType": "YulExpressionStatement",
															"src": "6128:19:17"
														},
														{
															"nativeSrc": "6156:29:17",
															"nodeType": "YulAssignment",
															"src": "6156:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6175:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "6175:3:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6180:4:17",
																		"nodeType": "YulLiteral",
																		"src": "6180:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6171:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "6171:3:17"
																},
																"nativeSrc": "6171:14:17",
																"nodeType": "YulFunctionCall",
																"src": "6171:14:17"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "6156:11:17",
																	"nodeType": "YulIdentifier",
																	"src": "6156:11:17"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack",
												"nativeSrc": "5997:194:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6090:3:17",
														"nodeType": "YulTypedName",
														"src": "6090:3:17",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6095:6:17",
														"nodeType": "YulTypedName",
														"src": "6095:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "6106:11:17",
														"nodeType": "YulTypedName",
														"src": "6106:11:17",
														"type": ""
													}
												],
												"src": "5997:194:17"
											},
											{
												"body": {
													"nativeSrc": "6279:60:17",
													"nodeType": "YulBlock",
													"src": "6279:60:17",
													"statements": [
														{
															"nativeSrc": "6289:11:17",
															"nodeType": "YulAssignment",
															"src": "6289:11:17",
															"value": {
																"name": "ptr",
																"nativeSrc": "6297:3:17",
																"nodeType": "YulIdentifier",
																"src": "6297:3:17"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "6289:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "6289:4:17"
																}
															]
														},
														{
															"nativeSrc": "6310:22:17",
															"nodeType": "YulAssignment",
															"src": "6310:22:17",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "6322:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "6322:3:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6327:4:17",
																		"nodeType": "YulLiteral",
																		"src": "6327:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6318:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "6318:3:17"
																},
																"nativeSrc": "6318:14:17",
																"nodeType": "YulFunctionCall",
																"src": "6318:14:17"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "6310:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "6310:4:17"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_string_memory_ptr_$dyn_memory_ptr",
												"nativeSrc": "6197:142:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "6266:3:17",
														"nodeType": "YulTypedName",
														"src": "6266:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "6274:4:17",
														"nodeType": "YulTypedName",
														"src": "6274:4:17",
														"type": ""
													}
												],
												"src": "6197:142:17"
											},
											{
												"body": {
													"nativeSrc": "6431:73:17",
													"nodeType": "YulBlock",
													"src": "6431:73:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6448:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "6448:3:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6453:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "6453:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6441:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "6441:6:17"
																},
																"nativeSrc": "6441:19:17",
																"nodeType": "YulFunctionCall",
																"src": "6441:19:17"
															},
															"nativeSrc": "6441:19:17",
															"nodeType": "YulExpressionStatement",
															"src": "6441:19:17"
														},
														{
															"nativeSrc": "6469:29:17",
															"nodeType": "YulAssignment",
															"src": "6469:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6488:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "6488:3:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6493:4:17",
																		"nodeType": "YulLiteral",
																		"src": "6493:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6484:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "6484:3:17"
																},
																"nativeSrc": "6484:14:17",
																"nodeType": "YulFunctionCall",
																"src": "6484:14:17"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "6469:11:17",
																	"nodeType": "YulIdentifier",
																	"src": "6469:11:17"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr",
												"nativeSrc": "6345:159:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6403:3:17",
														"nodeType": "YulTypedName",
														"src": "6403:3:17",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6408:6:17",
														"nodeType": "YulTypedName",
														"src": "6408:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "6419:11:17",
														"nodeType": "YulTypedName",
														"src": "6419:11:17",
														"type": ""
													}
												],
												"src": "6345:159:17"
											},
											{
												"body": {
													"nativeSrc": "6592:275:17",
													"nodeType": "YulBlock",
													"src": "6592:275:17",
													"statements": [
														{
															"nativeSrc": "6602:53:17",
															"nodeType": "YulVariableDeclaration",
															"src": "6602:53:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6649:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "6649:5:17"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "6616:32:17",
																	"nodeType": "YulIdentifier",
																	"src": "6616:32:17"
																},
																"nativeSrc": "6616:39:17",
																"nodeType": "YulFunctionCall",
																"src": "6616:39:17"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "6606:6:17",
																	"nodeType": "YulTypedName",
																	"src": "6606:6:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6664:68:17",
															"nodeType": "YulAssignment",
															"src": "6664:68:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6720:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "6720:3:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6725:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "6725:6:17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr",
																	"nativeSrc": "6671:48:17",
																	"nodeType": "YulIdentifier",
																	"src": "6671:48:17"
																},
																"nativeSrc": "6671:61:17",
																"nodeType": "YulFunctionCall",
																"src": "6671:61:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6664:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "6664:3:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6780:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "6780:5:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6787:4:17",
																				"nodeType": "YulLiteral",
																				"src": "6787:4:17",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6776:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "6776:3:17"
																		},
																		"nativeSrc": "6776:16:17",
																		"nodeType": "YulFunctionCall",
																		"src": "6776:16:17"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "6794:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "6794:3:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6799:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "6799:6:17"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "6741:34:17",
																	"nodeType": "YulIdentifier",
																	"src": "6741:34:17"
																},
																"nativeSrc": "6741:65:17",
																"nodeType": "YulFunctionCall",
																"src": "6741:65:17"
															},
															"nativeSrc": "6741:65:17",
															"nodeType": "YulExpressionStatement",
															"src": "6741:65:17"
														},
														{
															"nativeSrc": "6815:46:17",
															"nodeType": "YulAssignment",
															"src": "6815:46:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6826:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "6826:3:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6853:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "6853:6:17"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "6831:21:17",
																			"nodeType": "YulIdentifier",
																			"src": "6831:21:17"
																		},
																		"nativeSrc": "6831:29:17",
																		"nodeType": "YulFunctionCall",
																		"src": "6831:29:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6822:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "6822:3:17"
																},
																"nativeSrc": "6822:39:17",
																"nodeType": "YulFunctionCall",
																"src": "6822:39:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6815:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "6815:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr",
												"nativeSrc": "6510:357:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6573:5:17",
														"nodeType": "YulTypedName",
														"src": "6573:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6580:3:17",
														"nodeType": "YulTypedName",
														"src": "6580:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6588:3:17",
														"nodeType": "YulTypedName",
														"src": "6588:3:17",
														"type": ""
													}
												],
												"src": "6510:357:17"
											},
											{
												"body": {
													"nativeSrc": "6973:96:17",
													"nodeType": "YulBlock",
													"src": "6973:96:17",
													"statements": [
														{
															"nativeSrc": "6983:80:17",
															"nodeType": "YulAssignment",
															"src": "6983:80:17",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7051:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "7051:6:17"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "7059:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "7059:3:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr",
																	"nativeSrc": "6997:53:17",
																	"nodeType": "YulIdentifier",
																	"src": "6997:53:17"
																},
																"nativeSrc": "6997:66:17",
																"nodeType": "YulFunctionCall",
																"src": "6997:66:17"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nativeSrc": "6983:10:17",
																	"nodeType": "YulIdentifier",
																	"src": "6983:10:17"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_string_memory_ptr_to_t_string_memory_ptr",
												"nativeSrc": "6873:196:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nativeSrc": "6946:6:17",
														"nodeType": "YulTypedName",
														"src": "6946:6:17",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6954:3:17",
														"nodeType": "YulTypedName",
														"src": "6954:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nativeSrc": "6962:10:17",
														"nodeType": "YulTypedName",
														"src": "6962:10:17",
														"type": ""
													}
												],
												"src": "6873:196:17"
											},
											{
												"body": {
													"nativeSrc": "7160:38:17",
													"nodeType": "YulBlock",
													"src": "7160:38:17",
													"statements": [
														{
															"nativeSrc": "7170:22:17",
															"nodeType": "YulAssignment",
															"src": "7170:22:17",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "7182:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "7182:3:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7187:4:17",
																		"nodeType": "YulLiteral",
																		"src": "7187:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7178:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "7178:3:17"
																},
																"nativeSrc": "7178:14:17",
																"nodeType": "YulFunctionCall",
																"src": "7178:14:17"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nativeSrc": "7170:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "7170:4:17"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_string_memory_ptr_$dyn_memory_ptr",
												"nativeSrc": "7075:123:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "7147:3:17",
														"nodeType": "YulTypedName",
														"src": "7147:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nativeSrc": "7155:4:17",
														"nodeType": "YulTypedName",
														"src": "7155:4:17",
														"type": ""
													}
												],
												"src": "7075:123:17"
											},
											{
												"body": {
													"nativeSrc": "7376:847:17",
													"nodeType": "YulBlock",
													"src": "7376:847:17",
													"statements": [
														{
															"nativeSrc": "7386:78:17",
															"nodeType": "YulVariableDeclaration",
															"src": "7386:78:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7458:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "7458:5:17"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr",
																	"nativeSrc": "7400:57:17",
																	"nodeType": "YulIdentifier",
																	"src": "7400:57:17"
																},
																"nativeSrc": "7400:64:17",
																"nodeType": "YulFunctionCall",
																"src": "7400:64:17"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "7390:6:17",
																	"nodeType": "YulTypedName",
																	"src": "7390:6:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7473:103:17",
															"nodeType": "YulAssignment",
															"src": "7473:103:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7564:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "7564:3:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7569:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "7569:6:17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "7480:83:17",
																	"nodeType": "YulIdentifier",
																	"src": "7480:83:17"
																},
																"nativeSrc": "7480:96:17",
																"nodeType": "YulFunctionCall",
																"src": "7480:96:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7473:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "7473:3:17"
																}
															]
														},
														{
															"nativeSrc": "7585:20:17",
															"nodeType": "YulVariableDeclaration",
															"src": "7585:20:17",
															"value": {
																"name": "pos",
																"nativeSrc": "7602:3:17",
																"nodeType": "YulIdentifier",
																"src": "7602:3:17"
															},
															"variables": [
																{
																	"name": "headStart",
																	"nativeSrc": "7589:9:17",
																	"nodeType": "YulTypedName",
																	"src": "7589:9:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7614:39:17",
															"nodeType": "YulVariableDeclaration",
															"src": "7614:39:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7630:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "7630:3:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "7639:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "7639:6:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7647:4:17",
																				"nodeType": "YulLiteral",
																				"src": "7647:4:17",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "7635:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "7635:3:17"
																		},
																		"nativeSrc": "7635:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "7635:17:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7626:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "7626:3:17"
																},
																"nativeSrc": "7626:27:17",
																"nodeType": "YulFunctionCall",
																"src": "7626:27:17"
															},
															"variables": [
																{
																	"name": "tail",
																	"nativeSrc": "7618:4:17",
																	"nodeType": "YulTypedName",
																	"src": "7618:4:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7662:81:17",
															"nodeType": "YulVariableDeclaration",
															"src": "7662:81:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7737:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "7737:5:17"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_string_memory_ptr_$dyn_memory_ptr",
																	"nativeSrc": "7677:59:17",
																	"nodeType": "YulIdentifier",
																	"src": "7677:59:17"
																},
																"nativeSrc": "7677:66:17",
																"nodeType": "YulFunctionCall",
																"src": "7677:66:17"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nativeSrc": "7666:7:17",
																	"nodeType": "YulTypedName",
																	"src": "7666:7:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7752:21:17",
															"nodeType": "YulVariableDeclaration",
															"src": "7752:21:17",
															"value": {
																"name": "baseRef",
																"nativeSrc": "7766:7:17",
																"nodeType": "YulIdentifier",
																"src": "7766:7:17"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "7756:6:17",
																	"nodeType": "YulTypedName",
																	"src": "7756:6:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7842:336:17",
																"nodeType": "YulBlock",
																"src": "7842:336:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "7863:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "7863:3:17"
																				},
																				{
																					"arguments": [
																						{
																							"name": "tail",
																							"nativeSrc": "7872:4:17",
																							"nodeType": "YulIdentifier",
																							"src": "7872:4:17"
																						},
																						{
																							"name": "headStart",
																							"nativeSrc": "7878:9:17",
																							"nodeType": "YulIdentifier",
																							"src": "7878:9:17"
																						}
																					],
																					"functionName": {
																						"name": "sub",
																						"nativeSrc": "7868:3:17",
																						"nodeType": "YulIdentifier",
																						"src": "7868:3:17"
																					},
																					"nativeSrc": "7868:20:17",
																					"nodeType": "YulFunctionCall",
																					"src": "7868:20:17"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "7856:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "7856:6:17"
																			},
																			"nativeSrc": "7856:33:17",
																			"nodeType": "YulFunctionCall",
																			"src": "7856:33:17"
																		},
																		"nativeSrc": "7856:33:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "7856:33:17"
																	},
																	{
																		"nativeSrc": "7902:34:17",
																		"nodeType": "YulVariableDeclaration",
																		"src": "7902:34:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "7929:6:17",
																					"nodeType": "YulIdentifier",
																					"src": "7929:6:17"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "7923:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "7923:5:17"
																			},
																			"nativeSrc": "7923:13:17",
																			"nodeType": "YulFunctionCall",
																			"src": "7923:13:17"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nativeSrc": "7906:13:17",
																				"nodeType": "YulTypedName",
																				"src": "7906:13:17",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "7949:92:17",
																		"nodeType": "YulAssignment",
																		"src": "7949:92:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nativeSrc": "8021:13:17",
																					"nodeType": "YulIdentifier",
																					"src": "8021:13:17"
																				},
																				{
																					"name": "tail",
																					"nativeSrc": "8036:4:17",
																					"nodeType": "YulIdentifier",
																					"src": "8036:4:17"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_string_memory_ptr_to_t_string_memory_ptr",
																				"nativeSrc": "7957:63:17",
																				"nodeType": "YulIdentifier",
																				"src": "7957:63:17"
																			},
																			"nativeSrc": "7957:84:17",
																			"nodeType": "YulFunctionCall",
																			"src": "7957:84:17"
																		},
																		"variableNames": [
																			{
																				"name": "tail",
																				"nativeSrc": "7949:4:17",
																				"nodeType": "YulIdentifier",
																				"src": "7949:4:17"
																			}
																		]
																	},
																	{
																		"nativeSrc": "8054:80:17",
																		"nodeType": "YulAssignment",
																		"src": "8054:80:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "8127:6:17",
																					"nodeType": "YulIdentifier",
																					"src": "8127:6:17"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_string_memory_ptr_$dyn_memory_ptr",
																				"nativeSrc": "8064:62:17",
																				"nodeType": "YulIdentifier",
																				"src": "8064:62:17"
																			},
																			"nativeSrc": "8064:70:17",
																			"nodeType": "YulFunctionCall",
																			"src": "8064:70:17"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "8054:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "8054:6:17"
																			}
																		]
																	},
																	{
																		"nativeSrc": "8147:21:17",
																		"nodeType": "YulAssignment",
																		"src": "8147:21:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "8158:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "8158:3:17"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8163:4:17",
																					"nodeType": "YulLiteral",
																					"src": "8163:4:17",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "8154:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "8154:3:17"
																			},
																			"nativeSrc": "8154:14:17",
																			"nodeType": "YulFunctionCall",
																			"src": "8154:14:17"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "8147:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "8147:3:17"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "7804:1:17",
																		"nodeType": "YulIdentifier",
																		"src": "7804:1:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7807:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "7807:6:17"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "7801:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "7801:2:17"
																},
																"nativeSrc": "7801:13:17",
																"nodeType": "YulFunctionCall",
																"src": "7801:13:17"
															},
															"nativeSrc": "7782:396:17",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "7815:18:17",
																"nodeType": "YulBlock",
																"src": "7815:18:17",
																"statements": [
																	{
																		"nativeSrc": "7817:14:17",
																		"nodeType": "YulAssignment",
																		"src": "7817:14:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "7826:1:17",
																					"nodeType": "YulIdentifier",
																					"src": "7826:1:17"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7829:1:17",
																					"nodeType": "YulLiteral",
																					"src": "7829:1:17",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "7822:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "7822:3:17"
																			},
																			"nativeSrc": "7822:9:17",
																			"nodeType": "YulFunctionCall",
																			"src": "7822:9:17"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "7817:1:17",
																				"nodeType": "YulIdentifier",
																				"src": "7817:1:17"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "7786:14:17",
																"nodeType": "YulBlock",
																"src": "7786:14:17",
																"statements": [
																	{
																		"nativeSrc": "7788:10:17",
																		"nodeType": "YulVariableDeclaration",
																		"src": "7788:10:17",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "7797:1:17",
																			"nodeType": "YulLiteral",
																			"src": "7797:1:17",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nativeSrc": "7792:1:17",
																				"nodeType": "YulTypedName",
																				"src": "7792:1:17",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "7782:396:17"
														},
														{
															"nativeSrc": "8187:11:17",
															"nodeType": "YulAssignment",
															"src": "8187:11:17",
															"value": {
																"name": "tail",
																"nativeSrc": "8194:4:17",
																"nodeType": "YulIdentifier",
																"src": "8194:4:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8187:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "8187:3:17"
																}
															]
														},
														{
															"nativeSrc": "8207:10:17",
															"nodeType": "YulAssignment",
															"src": "8207:10:17",
															"value": {
																"name": "pos",
																"nativeSrc": "8214:3:17",
																"nodeType": "YulIdentifier",
																"src": "8214:3:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8207:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "8207:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack",
												"nativeSrc": "7232:991:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7355:5:17",
														"nodeType": "YulTypedName",
														"src": "7355:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7362:3:17",
														"nodeType": "YulTypedName",
														"src": "7362:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7371:3:17",
														"nodeType": "YulTypedName",
														"src": "7371:3:17",
														"type": ""
													}
												],
												"src": "7232:991:17"
											},
											{
												"body": {
													"nativeSrc": "8397:245:17",
													"nodeType": "YulBlock",
													"src": "8397:245:17",
													"statements": [
														{
															"nativeSrc": "8407:26:17",
															"nodeType": "YulAssignment",
															"src": "8407:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8419:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "8419:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8430:2:17",
																		"nodeType": "YulLiteral",
																		"src": "8430:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8415:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "8415:3:17"
																},
																"nativeSrc": "8415:18:17",
																"nodeType": "YulFunctionCall",
																"src": "8415:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8407:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "8407:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8454:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "8454:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8465:1:17",
																				"nodeType": "YulLiteral",
																				"src": "8465:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8450:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "8450:3:17"
																		},
																		"nativeSrc": "8450:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "8450:17:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8473:4:17",
																				"nodeType": "YulIdentifier",
																				"src": "8473:4:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8479:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "8479:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8469:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "8469:3:17"
																		},
																		"nativeSrc": "8469:20:17",
																		"nodeType": "YulFunctionCall",
																		"src": "8469:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8443:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "8443:6:17"
																},
																"nativeSrc": "8443:47:17",
																"nodeType": "YulFunctionCall",
																"src": "8443:47:17"
															},
															"nativeSrc": "8443:47:17",
															"nodeType": "YulExpressionStatement",
															"src": "8443:47:17"
														},
														{
															"nativeSrc": "8499:136:17",
															"nodeType": "YulAssignment",
															"src": "8499:136:17",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8621:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "8621:6:17"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "8630:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "8630:4:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "8507:113:17",
																	"nodeType": "YulIdentifier",
																	"src": "8507:113:17"
																},
																"nativeSrc": "8507:128:17",
																"nodeType": "YulFunctionCall",
																"src": "8507:128:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8499:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "8499:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_string_memory_ptr_$dyn_memory_ptr__to_t_array$_t_string_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "8229:413:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8369:9:17",
														"nodeType": "YulTypedName",
														"src": "8369:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8381:6:17",
														"nodeType": "YulTypedName",
														"src": "8381:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8392:4:17",
														"nodeType": "YulTypedName",
														"src": "8392:4:17",
														"type": ""
													}
												],
												"src": "8229:413:17"
											},
											{
												"body": {
													"nativeSrc": "8714:263:17",
													"nodeType": "YulBlock",
													"src": "8714:263:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "8760:83:17",
																"nodeType": "YulBlock",
																"src": "8760:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8762:77:17",
																				"nodeType": "YulIdentifier",
																				"src": "8762:77:17"
																			},
																			"nativeSrc": "8762:79:17",
																			"nodeType": "YulFunctionCall",
																			"src": "8762:79:17"
																		},
																		"nativeSrc": "8762:79:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "8762:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8735:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "8735:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8744:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "8744:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8731:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "8731:3:17"
																		},
																		"nativeSrc": "8731:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "8731:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8756:2:17",
																		"nodeType": "YulLiteral",
																		"src": "8756:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8727:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "8727:3:17"
																},
																"nativeSrc": "8727:32:17",
																"nodeType": "YulFunctionCall",
																"src": "8727:32:17"
															},
															"nativeSrc": "8724:119:17",
															"nodeType": "YulIf",
															"src": "8724:119:17"
														},
														{
															"nativeSrc": "8853:117:17",
															"nodeType": "YulBlock",
															"src": "8853:117:17",
															"statements": [
																{
																	"nativeSrc": "8868:15:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8868:15:17",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8882:1:17",
																		"nodeType": "YulLiteral",
																		"src": "8882:1:17",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8872:6:17",
																			"nodeType": "YulTypedName",
																			"src": "8872:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8897:63:17",
																	"nodeType": "YulAssignment",
																	"src": "8897:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8932:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "8932:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8943:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "8943:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8928:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "8928:3:17"
																				},
																				"nativeSrc": "8928:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "8928:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8952:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "8952:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8907:20:17",
																			"nodeType": "YulIdentifier",
																			"src": "8907:20:17"
																		},
																		"nativeSrc": "8907:53:17",
																		"nodeType": "YulFunctionCall",
																		"src": "8907:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8897:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "8897:6:17"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "8648:329:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8684:9:17",
														"nodeType": "YulTypedName",
														"src": "8684:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8695:7:17",
														"nodeType": "YulTypedName",
														"src": "8695:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8707:6:17",
														"nodeType": "YulTypedName",
														"src": "8707:6:17",
														"type": ""
													}
												],
												"src": "8648:329:17"
											},
											{
												"body": {
													"nativeSrc": "9023:76:17",
													"nodeType": "YulBlock",
													"src": "9023:76:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "9077:16:17",
																"nodeType": "YulBlock",
																"src": "9077:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9086:1:17",
																					"nodeType": "YulLiteral",
																					"src": "9086:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9089:1:17",
																					"nodeType": "YulLiteral",
																					"src": "9089:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9079:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "9079:6:17"
																			},
																			"nativeSrc": "9079:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "9079:12:17"
																		},
																		"nativeSrc": "9079:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "9079:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9046:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "9046:5:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "9068:5:17",
																						"nodeType": "YulIdentifier",
																						"src": "9068:5:17"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "9053:14:17",
																					"nodeType": "YulIdentifier",
																					"src": "9053:14:17"
																				},
																				"nativeSrc": "9053:21:17",
																				"nodeType": "YulFunctionCall",
																				"src": "9053:21:17"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "9043:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "9043:2:17"
																		},
																		"nativeSrc": "9043:32:17",
																		"nodeType": "YulFunctionCall",
																		"src": "9043:32:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9036:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "9036:6:17"
																},
																"nativeSrc": "9036:40:17",
																"nodeType": "YulFunctionCall",
																"src": "9036:40:17"
															},
															"nativeSrc": "9033:60:17",
															"nodeType": "YulIf",
															"src": "9033:60:17"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "8983:116:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9016:5:17",
														"nodeType": "YulTypedName",
														"src": "9016:5:17",
														"type": ""
													}
												],
												"src": "8983:116:17"
											},
											{
												"body": {
													"nativeSrc": "9154:84:17",
													"nodeType": "YulBlock",
													"src": "9154:84:17",
													"statements": [
														{
															"nativeSrc": "9164:29:17",
															"nodeType": "YulAssignment",
															"src": "9164:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9186:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "9186:6:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "9173:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "9173:12:17"
																},
																"nativeSrc": "9173:20:17",
																"nodeType": "YulFunctionCall",
																"src": "9173:20:17"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "9164:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "9164:5:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9226:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "9226:5:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "9202:23:17",
																	"nodeType": "YulIdentifier",
																	"src": "9202:23:17"
																},
																"nativeSrc": "9202:30:17",
																"nodeType": "YulFunctionCall",
																"src": "9202:30:17"
															},
															"nativeSrc": "9202:30:17",
															"nodeType": "YulExpressionStatement",
															"src": "9202:30:17"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "9105:133:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "9132:6:17",
														"nodeType": "YulTypedName",
														"src": "9132:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9140:3:17",
														"nodeType": "YulTypedName",
														"src": "9140:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "9148:5:17",
														"nodeType": "YulTypedName",
														"src": "9148:5:17",
														"type": ""
													}
												],
												"src": "9105:133:17"
											},
											{
												"body": {
													"nativeSrc": "9324:388:17",
													"nodeType": "YulBlock",
													"src": "9324:388:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "9370:83:17",
																"nodeType": "YulBlock",
																"src": "9370:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9372:77:17",
																				"nodeType": "YulIdentifier",
																				"src": "9372:77:17"
																			},
																			"nativeSrc": "9372:79:17",
																			"nodeType": "YulFunctionCall",
																			"src": "9372:79:17"
																		},
																		"nativeSrc": "9372:79:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "9372:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9345:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "9345:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9354:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "9354:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9341:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "9341:3:17"
																		},
																		"nativeSrc": "9341:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "9341:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9366:2:17",
																		"nodeType": "YulLiteral",
																		"src": "9366:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9337:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "9337:3:17"
																},
																"nativeSrc": "9337:32:17",
																"nodeType": "YulFunctionCall",
																"src": "9337:32:17"
															},
															"nativeSrc": "9334:119:17",
															"nodeType": "YulIf",
															"src": "9334:119:17"
														},
														{
															"nativeSrc": "9463:117:17",
															"nodeType": "YulBlock",
															"src": "9463:117:17",
															"statements": [
																{
																	"nativeSrc": "9478:15:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9478:15:17",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9492:1:17",
																		"nodeType": "YulLiteral",
																		"src": "9492:1:17",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9482:6:17",
																			"nodeType": "YulTypedName",
																			"src": "9482:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9507:63:17",
																	"nodeType": "YulAssignment",
																	"src": "9507:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9542:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "9542:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9553:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "9553:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9538:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "9538:3:17"
																				},
																				"nativeSrc": "9538:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "9538:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9562:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "9562:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9517:20:17",
																			"nodeType": "YulIdentifier",
																			"src": "9517:20:17"
																		},
																		"nativeSrc": "9517:53:17",
																		"nodeType": "YulFunctionCall",
																		"src": "9517:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9507:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "9507:6:17"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9590:115:17",
															"nodeType": "YulBlock",
															"src": "9590:115:17",
															"statements": [
																{
																	"nativeSrc": "9605:16:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9605:16:17",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9619:2:17",
																		"nodeType": "YulLiteral",
																		"src": "9619:2:17",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9609:6:17",
																			"nodeType": "YulTypedName",
																			"src": "9609:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9635:60:17",
																	"nodeType": "YulAssignment",
																	"src": "9635:60:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9667:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "9667:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9678:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "9678:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9663:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "9663:3:17"
																				},
																				"nativeSrc": "9663:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "9663:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9687:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "9687:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "9645:17:17",
																			"nodeType": "YulIdentifier",
																			"src": "9645:17:17"
																		},
																		"nativeSrc": "9645:50:17",
																		"nodeType": "YulFunctionCall",
																		"src": "9645:50:17"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "9635:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "9635:6:17"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "9244:468:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9286:9:17",
														"nodeType": "YulTypedName",
														"src": "9286:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9297:7:17",
														"nodeType": "YulTypedName",
														"src": "9297:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9309:6:17",
														"nodeType": "YulTypedName",
														"src": "9309:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9317:6:17",
														"nodeType": "YulTypedName",
														"src": "9317:6:17",
														"type": ""
													}
												],
												"src": "9244:468:17"
											},
											{
												"body": {
													"nativeSrc": "9807:28:17",
													"nodeType": "YulBlock",
													"src": "9807:28:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9824:1:17",
																		"nodeType": "YulLiteral",
																		"src": "9824:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9827:1:17",
																		"nodeType": "YulLiteral",
																		"src": "9827:1:17",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9817:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "9817:6:17"
																},
																"nativeSrc": "9817:12:17",
																"nodeType": "YulFunctionCall",
																"src": "9817:12:17"
															},
															"nativeSrc": "9817:12:17",
															"nodeType": "YulExpressionStatement",
															"src": "9817:12:17"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "9718:117:17",
												"nodeType": "YulFunctionDefinition",
												"src": "9718:117:17"
											},
											{
												"body": {
													"nativeSrc": "9930:28:17",
													"nodeType": "YulBlock",
													"src": "9930:28:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9947:1:17",
																		"nodeType": "YulLiteral",
																		"src": "9947:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9950:1:17",
																		"nodeType": "YulLiteral",
																		"src": "9950:1:17",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9940:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "9940:6:17"
																},
																"nativeSrc": "9940:12:17",
																"nodeType": "YulFunctionCall",
																"src": "9940:12:17"
															},
															"nativeSrc": "9940:12:17",
															"nodeType": "YulExpressionStatement",
															"src": "9940:12:17"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "9841:117:17",
												"nodeType": "YulFunctionDefinition",
												"src": "9841:117:17"
											},
											{
												"body": {
													"nativeSrc": "9992:152:17",
													"nodeType": "YulBlock",
													"src": "9992:152:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10009:1:17",
																		"nodeType": "YulLiteral",
																		"src": "10009:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10012:77:17",
																		"nodeType": "YulLiteral",
																		"src": "10012:77:17",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10002:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "10002:6:17"
																},
																"nativeSrc": "10002:88:17",
																"nodeType": "YulFunctionCall",
																"src": "10002:88:17"
															},
															"nativeSrc": "10002:88:17",
															"nodeType": "YulExpressionStatement",
															"src": "10002:88:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10106:1:17",
																		"nodeType": "YulLiteral",
																		"src": "10106:1:17",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10109:4:17",
																		"nodeType": "YulLiteral",
																		"src": "10109:4:17",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10099:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "10099:6:17"
																},
																"nativeSrc": "10099:15:17",
																"nodeType": "YulFunctionCall",
																"src": "10099:15:17"
															},
															"nativeSrc": "10099:15:17",
															"nodeType": "YulExpressionStatement",
															"src": "10099:15:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10130:1:17",
																		"nodeType": "YulLiteral",
																		"src": "10130:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10133:4:17",
																		"nodeType": "YulLiteral",
																		"src": "10133:4:17",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10123:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "10123:6:17"
																},
																"nativeSrc": "10123:15:17",
																"nodeType": "YulFunctionCall",
																"src": "10123:15:17"
															},
															"nativeSrc": "10123:15:17",
															"nodeType": "YulExpressionStatement",
															"src": "10123:15:17"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "9964:180:17",
												"nodeType": "YulFunctionDefinition",
												"src": "9964:180:17"
											},
											{
												"body": {
													"nativeSrc": "10193:238:17",
													"nodeType": "YulBlock",
													"src": "10193:238:17",
													"statements": [
														{
															"nativeSrc": "10203:58:17",
															"nodeType": "YulVariableDeclaration",
															"src": "10203:58:17",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "10225:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "10225:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "10255:4:17",
																				"nodeType": "YulIdentifier",
																				"src": "10255:4:17"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "10233:21:17",
																			"nodeType": "YulIdentifier",
																			"src": "10233:21:17"
																		},
																		"nativeSrc": "10233:27:17",
																		"nodeType": "YulFunctionCall",
																		"src": "10233:27:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10221:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "10221:3:17"
																},
																"nativeSrc": "10221:40:17",
																"nodeType": "YulFunctionCall",
																"src": "10221:40:17"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "10207:10:17",
																	"nodeType": "YulTypedName",
																	"src": "10207:10:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10372:22:17",
																"nodeType": "YulBlock",
																"src": "10372:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "10374:16:17",
																				"nodeType": "YulIdentifier",
																				"src": "10374:16:17"
																			},
																			"nativeSrc": "10374:18:17",
																			"nodeType": "YulFunctionCall",
																			"src": "10374:18:17"
																		},
																		"nativeSrc": "10374:18:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "10374:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "10315:10:17",
																				"nodeType": "YulIdentifier",
																				"src": "10315:10:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10327:18:17",
																				"nodeType": "YulLiteral",
																				"src": "10327:18:17",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "10312:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "10312:2:17"
																		},
																		"nativeSrc": "10312:34:17",
																		"nodeType": "YulFunctionCall",
																		"src": "10312:34:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "10351:10:17",
																				"nodeType": "YulIdentifier",
																				"src": "10351:10:17"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "10363:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "10363:6:17"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "10348:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "10348:2:17"
																		},
																		"nativeSrc": "10348:22:17",
																		"nodeType": "YulFunctionCall",
																		"src": "10348:22:17"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "10309:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "10309:2:17"
																},
																"nativeSrc": "10309:62:17",
																"nodeType": "YulFunctionCall",
																"src": "10309:62:17"
															},
															"nativeSrc": "10306:88:17",
															"nodeType": "YulIf",
															"src": "10306:88:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10410:2:17",
																		"nodeType": "YulLiteral",
																		"src": "10410:2:17",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "10414:10:17",
																		"nodeType": "YulIdentifier",
																		"src": "10414:10:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10403:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "10403:6:17"
																},
																"nativeSrc": "10403:22:17",
																"nodeType": "YulFunctionCall",
																"src": "10403:22:17"
															},
															"nativeSrc": "10403:22:17",
															"nodeType": "YulExpressionStatement",
															"src": "10403:22:17"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "10150:281:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10179:6:17",
														"nodeType": "YulTypedName",
														"src": "10179:6:17",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "10187:4:17",
														"nodeType": "YulTypedName",
														"src": "10187:4:17",
														"type": ""
													}
												],
												"src": "10150:281:17"
											},
											{
												"body": {
													"nativeSrc": "10478:88:17",
													"nodeType": "YulBlock",
													"src": "10478:88:17",
													"statements": [
														{
															"nativeSrc": "10488:30:17",
															"nodeType": "YulAssignment",
															"src": "10488:30:17",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "10498:18:17",
																	"nodeType": "YulIdentifier",
																	"src": "10498:18:17"
																},
																"nativeSrc": "10498:20:17",
																"nodeType": "YulFunctionCall",
																"src": "10498:20:17"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "10488:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "10488:6:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "10547:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "10547:6:17"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "10555:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "10555:4:17"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "10527:19:17",
																	"nodeType": "YulIdentifier",
																	"src": "10527:19:17"
																},
																"nativeSrc": "10527:33:17",
																"nodeType": "YulFunctionCall",
																"src": "10527:33:17"
															},
															"nativeSrc": "10527:33:17",
															"nodeType": "YulExpressionStatement",
															"src": "10527:33:17"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "10437:129:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "10462:4:17",
														"nodeType": "YulTypedName",
														"src": "10462:4:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "10471:6:17",
														"nodeType": "YulTypedName",
														"src": "10471:6:17",
														"type": ""
													}
												],
												"src": "10437:129:17"
											},
											{
												"body": {
													"nativeSrc": "10638:241:17",
													"nodeType": "YulBlock",
													"src": "10638:241:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "10743:22:17",
																"nodeType": "YulBlock",
																"src": "10743:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "10745:16:17",
																				"nodeType": "YulIdentifier",
																				"src": "10745:16:17"
																			},
																			"nativeSrc": "10745:18:17",
																			"nodeType": "YulFunctionCall",
																			"src": "10745:18:17"
																		},
																		"nativeSrc": "10745:18:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "10745:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "10715:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "10715:6:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10723:18:17",
																		"nodeType": "YulLiteral",
																		"src": "10723:18:17",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10712:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "10712:2:17"
																},
																"nativeSrc": "10712:30:17",
																"nodeType": "YulFunctionCall",
																"src": "10712:30:17"
															},
															"nativeSrc": "10709:56:17",
															"nodeType": "YulIf",
															"src": "10709:56:17"
														},
														{
															"nativeSrc": "10775:37:17",
															"nodeType": "YulAssignment",
															"src": "10775:37:17",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "10805:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "10805:6:17"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "10783:21:17",
																	"nodeType": "YulIdentifier",
																	"src": "10783:21:17"
																},
																"nativeSrc": "10783:29:17",
																"nodeType": "YulFunctionCall",
																"src": "10783:29:17"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "10775:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "10775:4:17"
																}
															]
														},
														{
															"nativeSrc": "10849:23:17",
															"nodeType": "YulAssignment",
															"src": "10849:23:17",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "10861:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "10861:4:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10867:4:17",
																		"nodeType": "YulLiteral",
																		"src": "10867:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10857:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "10857:3:17"
																},
																"nativeSrc": "10857:15:17",
																"nodeType": "YulFunctionCall",
																"src": "10857:15:17"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "10849:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "10849:4:17"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nativeSrc": "10572:307:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "10622:6:17",
														"nodeType": "YulTypedName",
														"src": "10622:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "10633:4:17",
														"nodeType": "YulTypedName",
														"src": "10633:4:17",
														"type": ""
													}
												],
												"src": "10572:307:17"
											},
											{
												"body": {
													"nativeSrc": "10949:82:17",
													"nodeType": "YulBlock",
													"src": "10949:82:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "10972:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "10972:3:17"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "10977:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "10977:3:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10982:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "10982:6:17"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "10959:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "10959:12:17"
																},
																"nativeSrc": "10959:30:17",
																"nodeType": "YulFunctionCall",
																"src": "10959:30:17"
															},
															"nativeSrc": "10959:30:17",
															"nodeType": "YulExpressionStatement",
															"src": "10959:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "11009:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "11009:3:17"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "11014:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "11014:6:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11005:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "11005:3:17"
																		},
																		"nativeSrc": "11005:16:17",
																		"nodeType": "YulFunctionCall",
																		"src": "11005:16:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11023:1:17",
																		"nodeType": "YulLiteral",
																		"src": "11023:1:17",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10998:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "10998:6:17"
																},
																"nativeSrc": "10998:27:17",
																"nodeType": "YulFunctionCall",
																"src": "10998:27:17"
															},
															"nativeSrc": "10998:27:17",
															"nodeType": "YulExpressionStatement",
															"src": "10998:27:17"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "10885:146:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "10931:3:17",
														"nodeType": "YulTypedName",
														"src": "10931:3:17",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "10936:3:17",
														"nodeType": "YulTypedName",
														"src": "10936:3:17",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "10941:6:17",
														"nodeType": "YulTypedName",
														"src": "10941:6:17",
														"type": ""
													}
												],
												"src": "10885:146:17"
											},
											{
												"body": {
													"nativeSrc": "11120:340:17",
													"nodeType": "YulBlock",
													"src": "11120:340:17",
													"statements": [
														{
															"nativeSrc": "11130:74:17",
															"nodeType": "YulAssignment",
															"src": "11130:74:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "11196:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "11196:6:17"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nativeSrc": "11155:40:17",
																			"nodeType": "YulIdentifier",
																			"src": "11155:40:17"
																		},
																		"nativeSrc": "11155:48:17",
																		"nodeType": "YulFunctionCall",
																		"src": "11155:48:17"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "11139:15:17",
																	"nodeType": "YulIdentifier",
																	"src": "11139:15:17"
																},
																"nativeSrc": "11139:65:17",
																"nodeType": "YulFunctionCall",
																"src": "11139:65:17"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "11130:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "11130:5:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "11220:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "11220:5:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11227:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "11227:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11213:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "11213:6:17"
																},
																"nativeSrc": "11213:21:17",
																"nodeType": "YulFunctionCall",
																"src": "11213:21:17"
															},
															"nativeSrc": "11213:21:17",
															"nodeType": "YulExpressionStatement",
															"src": "11213:21:17"
														},
														{
															"nativeSrc": "11243:27:17",
															"nodeType": "YulVariableDeclaration",
															"src": "11243:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "11258:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "11258:5:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11265:4:17",
																		"nodeType": "YulLiteral",
																		"src": "11265:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11254:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "11254:3:17"
																},
																"nativeSrc": "11254:16:17",
																"nodeType": "YulFunctionCall",
																"src": "11254:16:17"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "11247:3:17",
																	"nodeType": "YulTypedName",
																	"src": "11247:3:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11308:83:17",
																"nodeType": "YulBlock",
																"src": "11308:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "11310:77:17",
																				"nodeType": "YulIdentifier",
																				"src": "11310:77:17"
																			},
																			"nativeSrc": "11310:79:17",
																			"nodeType": "YulFunctionCall",
																			"src": "11310:79:17"
																		},
																		"nativeSrc": "11310:79:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "11310:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "11289:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "11289:3:17"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "11294:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "11294:6:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11285:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "11285:3:17"
																		},
																		"nativeSrc": "11285:16:17",
																		"nodeType": "YulFunctionCall",
																		"src": "11285:16:17"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "11303:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "11303:3:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11282:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "11282:2:17"
																},
																"nativeSrc": "11282:25:17",
																"nodeType": "YulFunctionCall",
																"src": "11282:25:17"
															},
															"nativeSrc": "11279:112:17",
															"nodeType": "YulIf",
															"src": "11279:112:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "11437:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "11437:3:17"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "11442:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "11442:3:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11447:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "11447:6:17"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "11400:36:17",
																	"nodeType": "YulIdentifier",
																	"src": "11400:36:17"
																},
																"nativeSrc": "11400:54:17",
																"nodeType": "YulFunctionCall",
																"src": "11400:54:17"
															},
															"nativeSrc": "11400:54:17",
															"nodeType": "YulExpressionStatement",
															"src": "11400:54:17"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nativeSrc": "11037:423:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "11093:3:17",
														"nodeType": "YulTypedName",
														"src": "11093:3:17",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "11098:6:17",
														"nodeType": "YulTypedName",
														"src": "11098:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "11106:3:17",
														"nodeType": "YulTypedName",
														"src": "11106:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "11114:5:17",
														"nodeType": "YulTypedName",
														"src": "11114:5:17",
														"type": ""
													}
												],
												"src": "11037:423:17"
											},
											{
												"body": {
													"nativeSrc": "11540:277:17",
													"nodeType": "YulBlock",
													"src": "11540:277:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "11589:83:17",
																"nodeType": "YulBlock",
																"src": "11589:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "11591:77:17",
																				"nodeType": "YulIdentifier",
																				"src": "11591:77:17"
																			},
																			"nativeSrc": "11591:79:17",
																			"nodeType": "YulFunctionCall",
																			"src": "11591:79:17"
																		},
																		"nativeSrc": "11591:79:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "11591:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "11568:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "11568:6:17"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11576:4:17",
																						"nodeType": "YulLiteral",
																						"src": "11576:4:17",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11564:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "11564:3:17"
																				},
																				"nativeSrc": "11564:17:17",
																				"nodeType": "YulFunctionCall",
																				"src": "11564:17:17"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "11583:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "11583:3:17"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "11560:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "11560:3:17"
																		},
																		"nativeSrc": "11560:27:17",
																		"nodeType": "YulFunctionCall",
																		"src": "11560:27:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11553:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "11553:6:17"
																},
																"nativeSrc": "11553:35:17",
																"nodeType": "YulFunctionCall",
																"src": "11553:35:17"
															},
															"nativeSrc": "11550:122:17",
															"nodeType": "YulIf",
															"src": "11550:122:17"
														},
														{
															"nativeSrc": "11681:34:17",
															"nodeType": "YulVariableDeclaration",
															"src": "11681:34:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "11708:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "11708:6:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "11695:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "11695:12:17"
																},
																"nativeSrc": "11695:20:17",
																"nodeType": "YulFunctionCall",
																"src": "11695:20:17"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "11685:6:17",
																	"nodeType": "YulTypedName",
																	"src": "11685:6:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "11724:87:17",
															"nodeType": "YulAssignment",
															"src": "11724:87:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "11784:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "11784:6:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11792:4:17",
																				"nodeType": "YulLiteral",
																				"src": "11792:4:17",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11780:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "11780:3:17"
																		},
																		"nativeSrc": "11780:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "11780:17:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11799:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "11799:6:17"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "11807:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "11807:3:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nativeSrc": "11733:46:17",
																	"nodeType": "YulIdentifier",
																	"src": "11733:46:17"
																},
																"nativeSrc": "11733:78:17",
																"nodeType": "YulFunctionCall",
																"src": "11733:78:17"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "11724:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "11724:5:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nativeSrc": "11479:338:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "11518:6:17",
														"nodeType": "YulTypedName",
														"src": "11518:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "11526:3:17",
														"nodeType": "YulTypedName",
														"src": "11526:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "11534:5:17",
														"nodeType": "YulTypedName",
														"src": "11534:5:17",
														"type": ""
													}
												],
												"src": "11479:338:17"
											},
											{
												"body": {
													"nativeSrc": "11949:817:17",
													"nodeType": "YulBlock",
													"src": "11949:817:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "11996:83:17",
																"nodeType": "YulBlock",
																"src": "11996:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "11998:77:17",
																				"nodeType": "YulIdentifier",
																				"src": "11998:77:17"
																			},
																			"nativeSrc": "11998:79:17",
																			"nodeType": "YulFunctionCall",
																			"src": "11998:79:17"
																		},
																		"nativeSrc": "11998:79:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "11998:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11970:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "11970:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11979:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "11979:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11966:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "11966:3:17"
																		},
																		"nativeSrc": "11966:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "11966:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11991:3:17",
																		"nodeType": "YulLiteral",
																		"src": "11991:3:17",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "11962:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "11962:3:17"
																},
																"nativeSrc": "11962:33:17",
																"nodeType": "YulFunctionCall",
																"src": "11962:33:17"
															},
															"nativeSrc": "11959:120:17",
															"nodeType": "YulIf",
															"src": "11959:120:17"
														},
														{
															"nativeSrc": "12089:117:17",
															"nodeType": "YulBlock",
															"src": "12089:117:17",
															"statements": [
																{
																	"nativeSrc": "12104:15:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12104:15:17",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12118:1:17",
																		"nodeType": "YulLiteral",
																		"src": "12118:1:17",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12108:6:17",
																			"nodeType": "YulTypedName",
																			"src": "12108:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12133:63:17",
																	"nodeType": "YulAssignment",
																	"src": "12133:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12168:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "12168:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12179:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "12179:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12164:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "12164:3:17"
																				},
																				"nativeSrc": "12164:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "12164:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12188:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "12188:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "12143:20:17",
																			"nodeType": "YulIdentifier",
																			"src": "12143:20:17"
																		},
																		"nativeSrc": "12143:53:17",
																		"nodeType": "YulFunctionCall",
																		"src": "12143:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "12133:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "12133:6:17"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "12216:118:17",
															"nodeType": "YulBlock",
															"src": "12216:118:17",
															"statements": [
																{
																	"nativeSrc": "12231:16:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12231:16:17",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12245:2:17",
																		"nodeType": "YulLiteral",
																		"src": "12245:2:17",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12235:6:17",
																			"nodeType": "YulTypedName",
																			"src": "12235:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12261:63:17",
																	"nodeType": "YulAssignment",
																	"src": "12261:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12296:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "12296:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12307:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "12307:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12292:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "12292:3:17"
																				},
																				"nativeSrc": "12292:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "12292:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12316:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "12316:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "12271:20:17",
																			"nodeType": "YulIdentifier",
																			"src": "12271:20:17"
																		},
																		"nativeSrc": "12271:53:17",
																		"nodeType": "YulFunctionCall",
																		"src": "12271:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "12261:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "12261:6:17"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "12344:118:17",
															"nodeType": "YulBlock",
															"src": "12344:118:17",
															"statements": [
																{
																	"nativeSrc": "12359:16:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12359:16:17",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12373:2:17",
																		"nodeType": "YulLiteral",
																		"src": "12373:2:17",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12363:6:17",
																			"nodeType": "YulTypedName",
																			"src": "12363:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12389:63:17",
																	"nodeType": "YulAssignment",
																	"src": "12389:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12424:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "12424:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12435:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "12435:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12420:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "12420:3:17"
																				},
																				"nativeSrc": "12420:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "12420:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12444:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "12444:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "12399:20:17",
																			"nodeType": "YulIdentifier",
																			"src": "12399:20:17"
																		},
																		"nativeSrc": "12399:53:17",
																		"nodeType": "YulFunctionCall",
																		"src": "12399:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "12389:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "12389:6:17"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "12472:287:17",
															"nodeType": "YulBlock",
															"src": "12472:287:17",
															"statements": [
																{
																	"nativeSrc": "12487:46:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12487:46:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12518:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "12518:9:17"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12529:2:17",
																						"nodeType": "YulLiteral",
																						"src": "12529:2:17",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12514:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "12514:3:17"
																				},
																				"nativeSrc": "12514:18:17",
																				"nodeType": "YulFunctionCall",
																				"src": "12514:18:17"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "12501:12:17",
																			"nodeType": "YulIdentifier",
																			"src": "12501:12:17"
																		},
																		"nativeSrc": "12501:32:17",
																		"nodeType": "YulFunctionCall",
																		"src": "12501:32:17"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12491:6:17",
																			"nodeType": "YulTypedName",
																			"src": "12491:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "12580:83:17",
																		"nodeType": "YulBlock",
																		"src": "12580:83:17",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "12582:77:17",
																						"nodeType": "YulIdentifier",
																						"src": "12582:77:17"
																					},
																					"nativeSrc": "12582:79:17",
																					"nodeType": "YulFunctionCall",
																					"src": "12582:79:17"
																				},
																				"nativeSrc": "12582:79:17",
																				"nodeType": "YulExpressionStatement",
																				"src": "12582:79:17"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "12552:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "12552:6:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12560:18:17",
																				"nodeType": "YulLiteral",
																				"src": "12560:18:17",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "12549:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "12549:2:17"
																		},
																		"nativeSrc": "12549:30:17",
																		"nodeType": "YulFunctionCall",
																		"src": "12549:30:17"
																	},
																	"nativeSrc": "12546:117:17",
																	"nodeType": "YulIf",
																	"src": "12546:117:17"
																},
																{
																	"nativeSrc": "12677:72:17",
																	"nodeType": "YulAssignment",
																	"src": "12677:72:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12721:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "12721:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12732:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "12732:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12717:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "12717:3:17"
																				},
																				"nativeSrc": "12717:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "12717:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12741:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "12741:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nativeSrc": "12687:29:17",
																			"nodeType": "YulIdentifier",
																			"src": "12687:29:17"
																		},
																		"nativeSrc": "12687:62:17",
																		"nodeType": "YulFunctionCall",
																		"src": "12687:62:17"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "12677:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "12677:6:17"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nativeSrc": "11823:943:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11895:9:17",
														"nodeType": "YulTypedName",
														"src": "11895:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "11906:7:17",
														"nodeType": "YulTypedName",
														"src": "11906:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "11918:6:17",
														"nodeType": "YulTypedName",
														"src": "11918:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11926:6:17",
														"nodeType": "YulTypedName",
														"src": "11926:6:17",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "11934:6:17",
														"nodeType": "YulTypedName",
														"src": "11934:6:17",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "11942:6:17",
														"nodeType": "YulTypedName",
														"src": "11942:6:17",
														"type": ""
													}
												],
												"src": "11823:943:17"
											},
											{
												"body": {
													"nativeSrc": "12864:229:17",
													"nodeType": "YulBlock",
													"src": "12864:229:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "12969:22:17",
																"nodeType": "YulBlock",
																"src": "12969:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "12971:16:17",
																				"nodeType": "YulIdentifier",
																				"src": "12971:16:17"
																			},
																			"nativeSrc": "12971:18:17",
																			"nodeType": "YulFunctionCall",
																			"src": "12971:18:17"
																		},
																		"nativeSrc": "12971:18:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "12971:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "12941:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "12941:6:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12949:18:17",
																		"nodeType": "YulLiteral",
																		"src": "12949:18:17",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12938:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "12938:2:17"
																},
																"nativeSrc": "12938:30:17",
																"nodeType": "YulFunctionCall",
																"src": "12938:30:17"
															},
															"nativeSrc": "12935:56:17",
															"nodeType": "YulIf",
															"src": "12935:56:17"
														},
														{
															"nativeSrc": "13001:25:17",
															"nodeType": "YulAssignment",
															"src": "13001:25:17",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "13013:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "13013:6:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13021:4:17",
																		"nodeType": "YulLiteral",
																		"src": "13021:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "13009:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "13009:3:17"
																},
																"nativeSrc": "13009:17:17",
																"nodeType": "YulFunctionCall",
																"src": "13009:17:17"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "13001:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "13001:4:17"
																}
															]
														},
														{
															"nativeSrc": "13063:23:17",
															"nodeType": "YulAssignment",
															"src": "13063:23:17",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "13075:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "13075:4:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13081:4:17",
																		"nodeType": "YulLiteral",
																		"src": "13081:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13071:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "13071:3:17"
																},
																"nativeSrc": "13071:15:17",
																"nodeType": "YulFunctionCall",
																"src": "13071:15:17"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "13063:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "13063:4:17"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_string_memory_ptr_$dyn_memory_ptr",
												"nativeSrc": "12772:321:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "12848:6:17",
														"nodeType": "YulTypedName",
														"src": "12848:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "12859:4:17",
														"nodeType": "YulTypedName",
														"src": "12859:4:17",
														"type": ""
													}
												],
												"src": "12772:321:17"
											},
											{
												"body": {
													"nativeSrc": "13188:28:17",
													"nodeType": "YulBlock",
													"src": "13188:28:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13205:1:17",
																		"nodeType": "YulLiteral",
																		"src": "13205:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13208:1:17",
																		"nodeType": "YulLiteral",
																		"src": "13208:1:17",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "13198:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "13198:6:17"
																},
																"nativeSrc": "13198:12:17",
																"nodeType": "YulFunctionCall",
																"src": "13198:12:17"
															},
															"nativeSrc": "13198:12:17",
															"nodeType": "YulExpressionStatement",
															"src": "13198:12:17"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nativeSrc": "13099:117:17",
												"nodeType": "YulFunctionDefinition",
												"src": "13099:117:17"
											},
											{
												"body": {
													"nativeSrc": "13289:241:17",
													"nodeType": "YulBlock",
													"src": "13289:241:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "13394:22:17",
																"nodeType": "YulBlock",
																"src": "13394:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "13396:16:17",
																				"nodeType": "YulIdentifier",
																				"src": "13396:16:17"
																			},
																			"nativeSrc": "13396:18:17",
																			"nodeType": "YulFunctionCall",
																			"src": "13396:18:17"
																		},
																		"nativeSrc": "13396:18:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "13396:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "13366:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "13366:6:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13374:18:17",
																		"nodeType": "YulLiteral",
																		"src": "13374:18:17",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "13363:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "13363:2:17"
																},
																"nativeSrc": "13363:30:17",
																"nodeType": "YulFunctionCall",
																"src": "13363:30:17"
															},
															"nativeSrc": "13360:56:17",
															"nodeType": "YulIf",
															"src": "13360:56:17"
														},
														{
															"nativeSrc": "13426:37:17",
															"nodeType": "YulAssignment",
															"src": "13426:37:17",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "13456:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "13456:6:17"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "13434:21:17",
																	"nodeType": "YulIdentifier",
																	"src": "13434:21:17"
																},
																"nativeSrc": "13434:29:17",
																"nodeType": "YulFunctionCall",
																"src": "13434:29:17"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "13426:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "13426:4:17"
																}
															]
														},
														{
															"nativeSrc": "13500:23:17",
															"nodeType": "YulAssignment",
															"src": "13500:23:17",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "13512:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "13512:4:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13518:4:17",
																		"nodeType": "YulLiteral",
																		"src": "13518:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13508:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "13508:3:17"
																},
																"nativeSrc": "13508:15:17",
																"nodeType": "YulFunctionCall",
																"src": "13508:15:17"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "13500:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "13500:4:17"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "13222:308:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "13273:6:17",
														"nodeType": "YulTypedName",
														"src": "13273:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "13284:4:17",
														"nodeType": "YulTypedName",
														"src": "13284:4:17",
														"type": ""
													}
												],
												"src": "13222:308:17"
											},
											{
												"body": {
													"nativeSrc": "13620:341:17",
													"nodeType": "YulBlock",
													"src": "13620:341:17",
													"statements": [
														{
															"nativeSrc": "13630:75:17",
															"nodeType": "YulAssignment",
															"src": "13630:75:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "13697:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "13697:6:17"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "13655:41:17",
																			"nodeType": "YulIdentifier",
																			"src": "13655:41:17"
																		},
																		"nativeSrc": "13655:49:17",
																		"nodeType": "YulFunctionCall",
																		"src": "13655:49:17"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "13639:15:17",
																	"nodeType": "YulIdentifier",
																	"src": "13639:15:17"
																},
																"nativeSrc": "13639:66:17",
																"nodeType": "YulFunctionCall",
																"src": "13639:66:17"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "13630:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "13630:5:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "13721:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "13721:5:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "13728:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "13728:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13714:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "13714:6:17"
																},
																"nativeSrc": "13714:21:17",
																"nodeType": "YulFunctionCall",
																"src": "13714:21:17"
															},
															"nativeSrc": "13714:21:17",
															"nodeType": "YulExpressionStatement",
															"src": "13714:21:17"
														},
														{
															"nativeSrc": "13744:27:17",
															"nodeType": "YulVariableDeclaration",
															"src": "13744:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "13759:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "13759:5:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13766:4:17",
																		"nodeType": "YulLiteral",
																		"src": "13766:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13755:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "13755:3:17"
																},
																"nativeSrc": "13755:16:17",
																"nodeType": "YulFunctionCall",
																"src": "13755:16:17"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "13748:3:17",
																	"nodeType": "YulTypedName",
																	"src": "13748:3:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13809:83:17",
																"nodeType": "YulBlock",
																"src": "13809:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "13811:77:17",
																				"nodeType": "YulIdentifier",
																				"src": "13811:77:17"
																			},
																			"nativeSrc": "13811:79:17",
																			"nodeType": "YulFunctionCall",
																			"src": "13811:79:17"
																		},
																		"nativeSrc": "13811:79:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "13811:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "13790:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "13790:3:17"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "13795:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "13795:6:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13786:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "13786:3:17"
																		},
																		"nativeSrc": "13786:16:17",
																		"nodeType": "YulFunctionCall",
																		"src": "13786:16:17"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "13804:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "13804:3:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "13783:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "13783:2:17"
																},
																"nativeSrc": "13783:25:17",
																"nodeType": "YulFunctionCall",
																"src": "13783:25:17"
															},
															"nativeSrc": "13780:112:17",
															"nodeType": "YulIf",
															"src": "13780:112:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "13938:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "13938:3:17"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "13943:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "13943:3:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "13948:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "13948:6:17"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "13901:36:17",
																	"nodeType": "YulIdentifier",
																	"src": "13901:36:17"
																},
																"nativeSrc": "13901:54:17",
																"nodeType": "YulFunctionCall",
																"src": "13901:54:17"
															},
															"nativeSrc": "13901:54:17",
															"nodeType": "YulExpressionStatement",
															"src": "13901:54:17"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr",
												"nativeSrc": "13536:425:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "13593:3:17",
														"nodeType": "YulTypedName",
														"src": "13593:3:17",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "13598:6:17",
														"nodeType": "YulTypedName",
														"src": "13598:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "13606:3:17",
														"nodeType": "YulTypedName",
														"src": "13606:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "13614:5:17",
														"nodeType": "YulTypedName",
														"src": "13614:5:17",
														"type": ""
													}
												],
												"src": "13536:425:17"
											},
											{
												"body": {
													"nativeSrc": "14043:278:17",
													"nodeType": "YulBlock",
													"src": "14043:278:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "14092:83:17",
																"nodeType": "YulBlock",
																"src": "14092:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "14094:77:17",
																				"nodeType": "YulIdentifier",
																				"src": "14094:77:17"
																			},
																			"nativeSrc": "14094:79:17",
																			"nodeType": "YulFunctionCall",
																			"src": "14094:79:17"
																		},
																		"nativeSrc": "14094:79:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "14094:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "14071:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "14071:6:17"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "14079:4:17",
																						"nodeType": "YulLiteral",
																						"src": "14079:4:17",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "14067:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "14067:3:17"
																				},
																				"nativeSrc": "14067:17:17",
																				"nodeType": "YulFunctionCall",
																				"src": "14067:17:17"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "14086:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "14086:3:17"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "14063:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "14063:3:17"
																		},
																		"nativeSrc": "14063:27:17",
																		"nodeType": "YulFunctionCall",
																		"src": "14063:27:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "14056:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "14056:6:17"
																},
																"nativeSrc": "14056:35:17",
																"nodeType": "YulFunctionCall",
																"src": "14056:35:17"
															},
															"nativeSrc": "14053:122:17",
															"nodeType": "YulIf",
															"src": "14053:122:17"
														},
														{
															"nativeSrc": "14184:34:17",
															"nodeType": "YulVariableDeclaration",
															"src": "14184:34:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "14211:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "14211:6:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "14198:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "14198:12:17"
																},
																"nativeSrc": "14198:20:17",
																"nodeType": "YulFunctionCall",
																"src": "14198:20:17"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "14188:6:17",
																	"nodeType": "YulTypedName",
																	"src": "14188:6:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "14227:88:17",
															"nodeType": "YulAssignment",
															"src": "14227:88:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "14288:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "14288:6:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14296:4:17",
																				"nodeType": "YulLiteral",
																				"src": "14296:4:17",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14284:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "14284:3:17"
																		},
																		"nativeSrc": "14284:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "14284:17:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "14303:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "14303:6:17"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "14311:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "14311:3:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr",
																	"nativeSrc": "14236:47:17",
																	"nodeType": "YulIdentifier",
																	"src": "14236:47:17"
																},
																"nativeSrc": "14236:79:17",
																"nodeType": "YulFunctionCall",
																"src": "14236:79:17"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "14227:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "14227:5:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr",
												"nativeSrc": "13981:340:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "14021:6:17",
														"nodeType": "YulTypedName",
														"src": "14021:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "14029:3:17",
														"nodeType": "YulTypedName",
														"src": "14029:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "14037:5:17",
														"nodeType": "YulTypedName",
														"src": "14037:5:17",
														"type": ""
													}
												],
												"src": "13981:340:17"
											},
											{
												"body": {
													"nativeSrc": "14455:833:17",
													"nodeType": "YulBlock",
													"src": "14455:833:17",
													"statements": [
														{
															"nativeSrc": "14465:100:17",
															"nodeType": "YulAssignment",
															"src": "14465:100:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "14557:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "14557:6:17"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_string_memory_ptr_$dyn_memory_ptr",
																			"nativeSrc": "14490:66:17",
																			"nodeType": "YulIdentifier",
																			"src": "14490:66:17"
																		},
																		"nativeSrc": "14490:74:17",
																		"nodeType": "YulFunctionCall",
																		"src": "14490:74:17"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "14474:15:17",
																	"nodeType": "YulIdentifier",
																	"src": "14474:15:17"
																},
																"nativeSrc": "14474:91:17",
																"nodeType": "YulFunctionCall",
																"src": "14474:91:17"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "14465:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "14465:5:17"
																}
															]
														},
														{
															"nativeSrc": "14574:16:17",
															"nodeType": "YulVariableDeclaration",
															"src": "14574:16:17",
															"value": {
																"name": "array",
																"nativeSrc": "14585:5:17",
																"nodeType": "YulIdentifier",
																"src": "14585:5:17"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "14578:3:17",
																	"nodeType": "YulTypedName",
																	"src": "14578:3:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "14607:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "14607:5:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "14614:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "14614:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14600:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "14600:6:17"
																},
																"nativeSrc": "14600:21:17",
																"nodeType": "YulFunctionCall",
																"src": "14600:21:17"
															},
															"nativeSrc": "14600:21:17",
															"nodeType": "YulExpressionStatement",
															"src": "14600:21:17"
														},
														{
															"nativeSrc": "14630:23:17",
															"nodeType": "YulAssignment",
															"src": "14630:23:17",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "14641:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "14641:5:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14648:4:17",
																		"nodeType": "YulLiteral",
																		"src": "14648:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14637:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "14637:3:17"
																},
																"nativeSrc": "14637:16:17",
																"nodeType": "YulFunctionCall",
																"src": "14637:16:17"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nativeSrc": "14630:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "14630:3:17"
																}
															]
														},
														{
															"nativeSrc": "14663:44:17",
															"nodeType": "YulVariableDeclaration",
															"src": "14663:44:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "14681:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "14681:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "14693:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "14693:6:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14701:4:17",
																				"nodeType": "YulLiteral",
																				"src": "14701:4:17",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "14689:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "14689:3:17"
																		},
																		"nativeSrc": "14689:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "14689:17:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14677:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "14677:3:17"
																},
																"nativeSrc": "14677:30:17",
																"nodeType": "YulFunctionCall",
																"src": "14677:30:17"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nativeSrc": "14667:6:17",
																	"nodeType": "YulTypedName",
																	"src": "14667:6:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14735:103:17",
																"nodeType": "YulBlock",
																"src": "14735:103:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "14749:77:17",
																				"nodeType": "YulIdentifier",
																				"src": "14749:77:17"
																			},
																			"nativeSrc": "14749:79:17",
																			"nodeType": "YulFunctionCall",
																			"src": "14749:79:17"
																		},
																		"nativeSrc": "14749:79:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "14749:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nativeSrc": "14722:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "14722:6:17"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "14730:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "14730:3:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "14719:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "14719:2:17"
																},
																"nativeSrc": "14719:15:17",
																"nodeType": "YulFunctionCall",
																"src": "14719:15:17"
															},
															"nativeSrc": "14716:122:17",
															"nodeType": "YulIf",
															"src": "14716:122:17"
														},
														{
															"body": {
																"nativeSrc": "14923:359:17",
																"nodeType": "YulBlock",
																"src": "14923:359:17",
																"statements": [
																	{
																		"nativeSrc": "14938:36:17",
																		"nodeType": "YulVariableDeclaration",
																		"src": "14938:36:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "14970:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "14970:3:17"
																				}
																			],
																			"functionName": {
																				"name": "calldataload",
																				"nativeSrc": "14957:12:17",
																				"nodeType": "YulIdentifier",
																				"src": "14957:12:17"
																			},
																			"nativeSrc": "14957:17:17",
																			"nodeType": "YulFunctionCall",
																			"src": "14957:17:17"
																		},
																		"variables": [
																			{
																				"name": "innerOffset",
																				"nativeSrc": "14942:11:17",
																				"nodeType": "YulTypedName",
																				"src": "14942:11:17",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "15026:83:17",
																			"nodeType": "YulBlock",
																			"src": "15026:83:17",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																							"nativeSrc": "15028:77:17",
																							"nodeType": "YulIdentifier",
																							"src": "15028:77:17"
																						},
																						"nativeSrc": "15028:79:17",
																						"nodeType": "YulFunctionCall",
																						"src": "15028:79:17"
																					},
																					"nativeSrc": "15028:79:17",
																					"nodeType": "YulExpressionStatement",
																					"src": "15028:79:17"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "innerOffset",
																					"nativeSrc": "14993:11:17",
																					"nodeType": "YulIdentifier",
																					"src": "14993:11:17"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "15006:18:17",
																					"nodeType": "YulLiteral",
																					"src": "15006:18:17",
																					"type": "",
																					"value": "0xffffffffffffffff"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "14990:2:17",
																				"nodeType": "YulIdentifier",
																				"src": "14990:2:17"
																			},
																			"nativeSrc": "14990:35:17",
																			"nodeType": "YulFunctionCall",
																			"src": "14990:35:17"
																		},
																		"nativeSrc": "14987:122:17",
																		"nodeType": "YulIf",
																		"src": "14987:122:17"
																	},
																	{
																		"nativeSrc": "15122:42:17",
																		"nodeType": "YulVariableDeclaration",
																		"src": "15122:42:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "offset",
																					"nativeSrc": "15144:6:17",
																					"nodeType": "YulIdentifier",
																					"src": "15144:6:17"
																				},
																				{
																					"name": "innerOffset",
																					"nativeSrc": "15152:11:17",
																					"nodeType": "YulIdentifier",
																					"src": "15152:11:17"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "15140:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "15140:3:17"
																			},
																			"nativeSrc": "15140:24:17",
																			"nodeType": "YulFunctionCall",
																			"src": "15140:24:17"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nativeSrc": "15126:10:17",
																				"nodeType": "YulTypedName",
																				"src": "15126:10:17",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "15185:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "15185:3:17"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nativeSrc": "15221:10:17",
																							"nodeType": "YulIdentifier",
																							"src": "15221:10:17"
																						},
																						{
																							"name": "end",
																							"nativeSrc": "15233:3:17",
																							"nodeType": "YulIdentifier",
																							"src": "15233:3:17"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_string_memory_ptr",
																						"nativeSrc": "15190:30:17",
																						"nodeType": "YulIdentifier",
																						"src": "15190:30:17"
																					},
																					"nativeSrc": "15190:47:17",
																					"nodeType": "YulFunctionCall",
																					"src": "15190:47:17"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "15178:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "15178:6:17"
																			},
																			"nativeSrc": "15178:60:17",
																			"nodeType": "YulFunctionCall",
																			"src": "15178:60:17"
																		},
																		"nativeSrc": "15178:60:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "15178:60:17"
																	},
																	{
																		"nativeSrc": "15251:21:17",
																		"nodeType": "YulAssignment",
																		"src": "15251:21:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "15262:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "15262:3:17"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "15267:4:17",
																					"nodeType": "YulLiteral",
																					"src": "15267:4:17",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "15258:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "15258:3:17"
																			},
																			"nativeSrc": "15258:14:17",
																			"nodeType": "YulFunctionCall",
																			"src": "15258:14:17"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nativeSrc": "15251:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "15251:3:17"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "14876:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "14876:3:17"
																	},
																	{
																		"name": "srcEnd",
																		"nativeSrc": "14881:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "14881:6:17"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "14873:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "14873:2:17"
																},
																"nativeSrc": "14873:15:17",
																"nodeType": "YulFunctionCall",
																"src": "14873:15:17"
															},
															"nativeSrc": "14847:435:17",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "14889:25:17",
																"nodeType": "YulBlock",
																"src": "14889:25:17",
																"statements": [
																	{
																		"nativeSrc": "14891:21:17",
																		"nodeType": "YulAssignment",
																		"src": "14891:21:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "14902:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "14902:3:17"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "14907:4:17",
																					"nodeType": "YulLiteral",
																					"src": "14907:4:17",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "14898:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "14898:3:17"
																			},
																			"nativeSrc": "14898:14:17",
																			"nodeType": "YulFunctionCall",
																			"src": "14898:14:17"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nativeSrc": "14891:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "14891:3:17"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "14851:21:17",
																"nodeType": "YulBlock",
																"src": "14851:21:17",
																"statements": [
																	{
																		"nativeSrc": "14853:17:17",
																		"nodeType": "YulVariableDeclaration",
																		"src": "14853:17:17",
																		"value": {
																			"name": "offset",
																			"nativeSrc": "14864:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "14864:6:17"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nativeSrc": "14857:3:17",
																				"nodeType": "YulTypedName",
																				"src": "14857:3:17",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "14847:435:17"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr",
												"nativeSrc": "14343:945:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "14425:6:17",
														"nodeType": "YulTypedName",
														"src": "14425:6:17",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "14433:6:17",
														"nodeType": "YulTypedName",
														"src": "14433:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "14441:3:17",
														"nodeType": "YulTypedName",
														"src": "14441:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "14449:5:17",
														"nodeType": "YulTypedName",
														"src": "14449:5:17",
														"type": ""
													}
												],
												"src": "14343:945:17"
											},
											{
												"body": {
													"nativeSrc": "15397:303:17",
													"nodeType": "YulBlock",
													"src": "15397:303:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "15446:83:17",
																"nodeType": "YulBlock",
																"src": "15446:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "15448:77:17",
																				"nodeType": "YulIdentifier",
																				"src": "15448:77:17"
																			},
																			"nativeSrc": "15448:79:17",
																			"nodeType": "YulFunctionCall",
																			"src": "15448:79:17"
																		},
																		"nativeSrc": "15448:79:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "15448:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "15425:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "15425:6:17"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "15433:4:17",
																						"nodeType": "YulLiteral",
																						"src": "15433:4:17",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "15421:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "15421:3:17"
																				},
																				"nativeSrc": "15421:17:17",
																				"nodeType": "YulFunctionCall",
																				"src": "15421:17:17"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "15440:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "15440:3:17"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "15417:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "15417:3:17"
																		},
																		"nativeSrc": "15417:27:17",
																		"nodeType": "YulFunctionCall",
																		"src": "15417:27:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "15410:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "15410:6:17"
																},
																"nativeSrc": "15410:35:17",
																"nodeType": "YulFunctionCall",
																"src": "15410:35:17"
															},
															"nativeSrc": "15407:122:17",
															"nodeType": "YulIf",
															"src": "15407:122:17"
														},
														{
															"nativeSrc": "15538:34:17",
															"nodeType": "YulVariableDeclaration",
															"src": "15538:34:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "15565:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "15565:6:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "15552:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "15552:12:17"
																},
																"nativeSrc": "15552:20:17",
																"nodeType": "YulFunctionCall",
																"src": "15552:20:17"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "15542:6:17",
																	"nodeType": "YulTypedName",
																	"src": "15542:6:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "15581:113:17",
															"nodeType": "YulAssignment",
															"src": "15581:113:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "15667:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "15667:6:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15675:4:17",
																				"nodeType": "YulLiteral",
																				"src": "15675:4:17",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15663:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "15663:3:17"
																		},
																		"nativeSrc": "15663:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "15663:17:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "15682:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "15682:6:17"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "15690:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "15690:3:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr",
																	"nativeSrc": "15590:72:17",
																	"nodeType": "YulIdentifier",
																	"src": "15590:72:17"
																},
																"nativeSrc": "15590:104:17",
																"nodeType": "YulFunctionCall",
																"src": "15590:104:17"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "15581:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "15581:5:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_string_memory_ptr_$dyn_memory_ptr",
												"nativeSrc": "15310:390:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "15375:6:17",
														"nodeType": "YulTypedName",
														"src": "15375:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "15383:3:17",
														"nodeType": "YulTypedName",
														"src": "15383:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "15391:5:17",
														"nodeType": "YulTypedName",
														"src": "15391:5:17",
														"type": ""
													}
												],
												"src": "15310:390:17"
											},
											{
												"body": {
													"nativeSrc": "15807:458:17",
													"nodeType": "YulBlock",
													"src": "15807:458:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "15853:83:17",
																"nodeType": "YulBlock",
																"src": "15853:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "15855:77:17",
																				"nodeType": "YulIdentifier",
																				"src": "15855:77:17"
																			},
																			"nativeSrc": "15855:79:17",
																			"nodeType": "YulFunctionCall",
																			"src": "15855:79:17"
																		},
																		"nativeSrc": "15855:79:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "15855:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "15828:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "15828:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15837:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "15837:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15824:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "15824:3:17"
																		},
																		"nativeSrc": "15824:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "15824:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15849:2:17",
																		"nodeType": "YulLiteral",
																		"src": "15849:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "15820:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "15820:3:17"
																},
																"nativeSrc": "15820:32:17",
																"nodeType": "YulFunctionCall",
																"src": "15820:32:17"
															},
															"nativeSrc": "15817:119:17",
															"nodeType": "YulIf",
															"src": "15817:119:17"
														},
														{
															"nativeSrc": "15946:312:17",
															"nodeType": "YulBlock",
															"src": "15946:312:17",
															"statements": [
																{
																	"nativeSrc": "15961:45:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "15961:45:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "15992:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "15992:9:17"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "16003:1:17",
																						"nodeType": "YulLiteral",
																						"src": "16003:1:17",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "15988:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "15988:3:17"
																				},
																				"nativeSrc": "15988:17:17",
																				"nodeType": "YulFunctionCall",
																				"src": "15988:17:17"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "15975:12:17",
																			"nodeType": "YulIdentifier",
																			"src": "15975:12:17"
																		},
																		"nativeSrc": "15975:31:17",
																		"nodeType": "YulFunctionCall",
																		"src": "15975:31:17"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "15965:6:17",
																			"nodeType": "YulTypedName",
																			"src": "15965:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "16053:83:17",
																		"nodeType": "YulBlock",
																		"src": "16053:83:17",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "16055:77:17",
																						"nodeType": "YulIdentifier",
																						"src": "16055:77:17"
																					},
																					"nativeSrc": "16055:79:17",
																					"nodeType": "YulFunctionCall",
																					"src": "16055:79:17"
																				},
																				"nativeSrc": "16055:79:17",
																				"nodeType": "YulExpressionStatement",
																				"src": "16055:79:17"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "16025:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "16025:6:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16033:18:17",
																				"nodeType": "YulLiteral",
																				"src": "16033:18:17",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "16022:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "16022:2:17"
																		},
																		"nativeSrc": "16022:30:17",
																		"nodeType": "YulFunctionCall",
																		"src": "16022:30:17"
																	},
																	"nativeSrc": "16019:117:17",
																	"nodeType": "YulIf",
																	"src": "16019:117:17"
																},
																{
																	"nativeSrc": "16150:98:17",
																	"nodeType": "YulAssignment",
																	"src": "16150:98:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "16220:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "16220:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "16231:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "16231:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16216:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "16216:3:17"
																				},
																				"nativeSrc": "16216:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "16216:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16240:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "16240:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_string_memory_ptr_$dyn_memory_ptr",
																			"nativeSrc": "16160:55:17",
																			"nodeType": "YulIdentifier",
																			"src": "16160:55:17"
																		},
																		"nativeSrc": "16160:88:17",
																		"nodeType": "YulFunctionCall",
																		"src": "16160:88:17"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "16150:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "16150:6:17"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_string_memory_ptr_$dyn_memory_ptr",
												"nativeSrc": "15706:559:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15777:9:17",
														"nodeType": "YulTypedName",
														"src": "15777:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "15788:7:17",
														"nodeType": "YulTypedName",
														"src": "15788:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "15800:6:17",
														"nodeType": "YulTypedName",
														"src": "15800:6:17",
														"type": ""
													}
												],
												"src": "15706:559:17"
											},
											{
												"body": {
													"nativeSrc": "16354:391:17",
													"nodeType": "YulBlock",
													"src": "16354:391:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "16400:83:17",
																"nodeType": "YulBlock",
																"src": "16400:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "16402:77:17",
																				"nodeType": "YulIdentifier",
																				"src": "16402:77:17"
																			},
																			"nativeSrc": "16402:79:17",
																			"nodeType": "YulFunctionCall",
																			"src": "16402:79:17"
																		},
																		"nativeSrc": "16402:79:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "16402:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16375:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "16375:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16384:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "16384:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16371:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "16371:3:17"
																		},
																		"nativeSrc": "16371:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "16371:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16396:2:17",
																		"nodeType": "YulLiteral",
																		"src": "16396:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "16367:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "16367:3:17"
																},
																"nativeSrc": "16367:32:17",
																"nodeType": "YulFunctionCall",
																"src": "16367:32:17"
															},
															"nativeSrc": "16364:119:17",
															"nodeType": "YulIf",
															"src": "16364:119:17"
														},
														{
															"nativeSrc": "16493:117:17",
															"nodeType": "YulBlock",
															"src": "16493:117:17",
															"statements": [
																{
																	"nativeSrc": "16508:15:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "16508:15:17",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "16522:1:17",
																		"nodeType": "YulLiteral",
																		"src": "16522:1:17",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "16512:6:17",
																			"nodeType": "YulTypedName",
																			"src": "16512:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "16537:63:17",
																	"nodeType": "YulAssignment",
																	"src": "16537:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "16572:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "16572:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "16583:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "16583:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16568:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "16568:3:17"
																				},
																				"nativeSrc": "16568:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "16568:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16592:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "16592:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "16547:20:17",
																			"nodeType": "YulIdentifier",
																			"src": "16547:20:17"
																		},
																		"nativeSrc": "16547:53:17",
																		"nodeType": "YulFunctionCall",
																		"src": "16547:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "16537:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "16537:6:17"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "16620:118:17",
															"nodeType": "YulBlock",
															"src": "16620:118:17",
															"statements": [
																{
																	"nativeSrc": "16635:16:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "16635:16:17",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "16649:2:17",
																		"nodeType": "YulLiteral",
																		"src": "16649:2:17",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "16639:6:17",
																			"nodeType": "YulTypedName",
																			"src": "16639:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "16665:63:17",
																	"nodeType": "YulAssignment",
																	"src": "16665:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "16700:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "16700:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "16711:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "16711:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16696:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "16696:3:17"
																				},
																				"nativeSrc": "16696:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "16696:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16720:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "16720:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "16675:20:17",
																			"nodeType": "YulIdentifier",
																			"src": "16675:20:17"
																		},
																		"nativeSrc": "16675:53:17",
																		"nodeType": "YulFunctionCall",
																		"src": "16675:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "16665:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "16665:6:17"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "16271:474:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16316:9:17",
														"nodeType": "YulTypedName",
														"src": "16316:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "16327:7:17",
														"nodeType": "YulTypedName",
														"src": "16327:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "16339:6:17",
														"nodeType": "YulTypedName",
														"src": "16339:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "16347:6:17",
														"nodeType": "YulTypedName",
														"src": "16347:6:17",
														"type": ""
													}
												],
												"src": "16271:474:17"
											},
											{
												"body": {
													"nativeSrc": "16779:152:17",
													"nodeType": "YulBlock",
													"src": "16779:152:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16796:1:17",
																		"nodeType": "YulLiteral",
																		"src": "16796:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16799:77:17",
																		"nodeType": "YulLiteral",
																		"src": "16799:77:17",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16789:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "16789:6:17"
																},
																"nativeSrc": "16789:88:17",
																"nodeType": "YulFunctionCall",
																"src": "16789:88:17"
															},
															"nativeSrc": "16789:88:17",
															"nodeType": "YulExpressionStatement",
															"src": "16789:88:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16893:1:17",
																		"nodeType": "YulLiteral",
																		"src": "16893:1:17",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16896:4:17",
																		"nodeType": "YulLiteral",
																		"src": "16896:4:17",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16886:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "16886:6:17"
																},
																"nativeSrc": "16886:15:17",
																"nodeType": "YulFunctionCall",
																"src": "16886:15:17"
															},
															"nativeSrc": "16886:15:17",
															"nodeType": "YulExpressionStatement",
															"src": "16886:15:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16917:1:17",
																		"nodeType": "YulLiteral",
																		"src": "16917:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16920:4:17",
																		"nodeType": "YulLiteral",
																		"src": "16920:4:17",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "16910:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "16910:6:17"
																},
																"nativeSrc": "16910:15:17",
																"nodeType": "YulFunctionCall",
																"src": "16910:15:17"
															},
															"nativeSrc": "16910:15:17",
															"nodeType": "YulExpressionStatement",
															"src": "16910:15:17"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "16751:180:17",
												"nodeType": "YulFunctionDefinition",
												"src": "16751:180:17"
											},
											{
												"body": {
													"nativeSrc": "16988:269:17",
													"nodeType": "YulBlock",
													"src": "16988:269:17",
													"statements": [
														{
															"nativeSrc": "16998:22:17",
															"nodeType": "YulAssignment",
															"src": "16998:22:17",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "17012:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "17012:4:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17018:1:17",
																		"nodeType": "YulLiteral",
																		"src": "17018:1:17",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "17008:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "17008:3:17"
																},
																"nativeSrc": "17008:12:17",
																"nodeType": "YulFunctionCall",
																"src": "17008:12:17"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "16998:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "16998:6:17"
																}
															]
														},
														{
															"nativeSrc": "17029:38:17",
															"nodeType": "YulVariableDeclaration",
															"src": "17029:38:17",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "17059:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "17059:4:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17065:1:17",
																		"nodeType": "YulLiteral",
																		"src": "17065:1:17",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "17055:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "17055:3:17"
																},
																"nativeSrc": "17055:12:17",
																"nodeType": "YulFunctionCall",
																"src": "17055:12:17"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "17033:18:17",
																	"nodeType": "YulTypedName",
																	"src": "17033:18:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "17106:51:17",
																"nodeType": "YulBlock",
																"src": "17106:51:17",
																"statements": [
																	{
																		"nativeSrc": "17120:27:17",
																		"nodeType": "YulAssignment",
																		"src": "17120:27:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "17134:6:17",
																					"nodeType": "YulIdentifier",
																					"src": "17134:6:17"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "17142:4:17",
																					"nodeType": "YulLiteral",
																					"src": "17142:4:17",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "17130:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "17130:3:17"
																			},
																			"nativeSrc": "17130:17:17",
																			"nodeType": "YulFunctionCall",
																			"src": "17130:17:17"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "17120:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "17120:6:17"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "17086:18:17",
																		"nodeType": "YulIdentifier",
																		"src": "17086:18:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "17079:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "17079:6:17"
																},
																"nativeSrc": "17079:26:17",
																"nodeType": "YulFunctionCall",
																"src": "17079:26:17"
															},
															"nativeSrc": "17076:81:17",
															"nodeType": "YulIf",
															"src": "17076:81:17"
														},
														{
															"body": {
																"nativeSrc": "17209:42:17",
																"nodeType": "YulBlock",
																"src": "17209:42:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "17223:16:17",
																				"nodeType": "YulIdentifier",
																				"src": "17223:16:17"
																			},
																			"nativeSrc": "17223:18:17",
																			"nodeType": "YulFunctionCall",
																			"src": "17223:18:17"
																		},
																		"nativeSrc": "17223:18:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "17223:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "17173:18:17",
																		"nodeType": "YulIdentifier",
																		"src": "17173:18:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "17196:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "17196:6:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17204:2:17",
																				"nodeType": "YulLiteral",
																				"src": "17204:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "17193:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "17193:2:17"
																		},
																		"nativeSrc": "17193:14:17",
																		"nodeType": "YulFunctionCall",
																		"src": "17193:14:17"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "17170:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "17170:2:17"
																},
																"nativeSrc": "17170:38:17",
																"nodeType": "YulFunctionCall",
																"src": "17170:38:17"
															},
															"nativeSrc": "17167:84:17",
															"nodeType": "YulIf",
															"src": "17167:84:17"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "16937:320:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "16972:4:17",
														"nodeType": "YulTypedName",
														"src": "16972:4:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "16981:6:17",
														"nodeType": "YulTypedName",
														"src": "16981:6:17",
														"type": ""
													}
												],
												"src": "16937:320:17"
											},
											{
												"body": {
													"nativeSrc": "17417:288:17",
													"nodeType": "YulBlock",
													"src": "17417:288:17",
													"statements": [
														{
															"nativeSrc": "17427:26:17",
															"nodeType": "YulAssignment",
															"src": "17427:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17439:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "17439:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17450:2:17",
																		"nodeType": "YulLiteral",
																		"src": "17450:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17435:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "17435:3:17"
																},
																"nativeSrc": "17435:18:17",
																"nodeType": "YulFunctionCall",
																"src": "17435:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17427:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "17427:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "17507:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "17507:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17520:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "17520:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17531:1:17",
																				"nodeType": "YulLiteral",
																				"src": "17531:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17516:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "17516:3:17"
																		},
																		"nativeSrc": "17516:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "17516:17:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "17463:43:17",
																	"nodeType": "YulIdentifier",
																	"src": "17463:43:17"
																},
																"nativeSrc": "17463:71:17",
																"nodeType": "YulFunctionCall",
																"src": "17463:71:17"
															},
															"nativeSrc": "17463:71:17",
															"nodeType": "YulExpressionStatement",
															"src": "17463:71:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "17588:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "17588:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17601:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "17601:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17612:2:17",
																				"nodeType": "YulLiteral",
																				"src": "17612:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17597:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "17597:3:17"
																		},
																		"nativeSrc": "17597:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "17597:18:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "17544:43:17",
																	"nodeType": "YulIdentifier",
																	"src": "17544:43:17"
																},
																"nativeSrc": "17544:72:17",
																"nodeType": "YulFunctionCall",
																"src": "17544:72:17"
															},
															"nativeSrc": "17544:72:17",
															"nodeType": "YulExpressionStatement",
															"src": "17544:72:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "17670:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "17670:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17683:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "17683:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17694:2:17",
																				"nodeType": "YulLiteral",
																				"src": "17694:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17679:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "17679:3:17"
																		},
																		"nativeSrc": "17679:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "17679:18:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "17626:43:17",
																	"nodeType": "YulIdentifier",
																	"src": "17626:43:17"
																},
																"nativeSrc": "17626:72:17",
																"nodeType": "YulFunctionCall",
																"src": "17626:72:17"
															},
															"nativeSrc": "17626:72:17",
															"nodeType": "YulExpressionStatement",
															"src": "17626:72:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "17263:442:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17373:9:17",
														"nodeType": "YulTypedName",
														"src": "17373:9:17",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "17385:6:17",
														"nodeType": "YulTypedName",
														"src": "17385:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "17393:6:17",
														"nodeType": "YulTypedName",
														"src": "17393:6:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "17401:6:17",
														"nodeType": "YulTypedName",
														"src": "17401:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17412:4:17",
														"nodeType": "YulTypedName",
														"src": "17412:4:17",
														"type": ""
													}
												],
												"src": "17263:442:17"
											},
											{
												"body": {
													"nativeSrc": "17837:206:17",
													"nodeType": "YulBlock",
													"src": "17837:206:17",
													"statements": [
														{
															"nativeSrc": "17847:26:17",
															"nodeType": "YulAssignment",
															"src": "17847:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17859:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "17859:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17870:2:17",
																		"nodeType": "YulLiteral",
																		"src": "17870:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17855:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "17855:3:17"
																},
																"nativeSrc": "17855:18:17",
																"nodeType": "YulFunctionCall",
																"src": "17855:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17847:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "17847:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "17927:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "17927:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17940:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "17940:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17951:1:17",
																				"nodeType": "YulLiteral",
																				"src": "17951:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17936:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "17936:3:17"
																		},
																		"nativeSrc": "17936:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "17936:17:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "17883:43:17",
																	"nodeType": "YulIdentifier",
																	"src": "17883:43:17"
																},
																"nativeSrc": "17883:71:17",
																"nodeType": "YulFunctionCall",
																"src": "17883:71:17"
															},
															"nativeSrc": "17883:71:17",
															"nodeType": "YulExpressionStatement",
															"src": "17883:71:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "18008:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "18008:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18021:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "18021:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18032:2:17",
																				"nodeType": "YulLiteral",
																				"src": "18032:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18017:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "18017:3:17"
																		},
																		"nativeSrc": "18017:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "18017:18:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "17964:43:17",
																	"nodeType": "YulIdentifier",
																	"src": "17964:43:17"
																},
																"nativeSrc": "17964:72:17",
																"nodeType": "YulFunctionCall",
																"src": "17964:72:17"
															},
															"nativeSrc": "17964:72:17",
															"nodeType": "YulExpressionStatement",
															"src": "17964:72:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "17711:332:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17801:9:17",
														"nodeType": "YulTypedName",
														"src": "17801:9:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "17813:6:17",
														"nodeType": "YulTypedName",
														"src": "17813:6:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "17821:6:17",
														"nodeType": "YulTypedName",
														"src": "17821:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17832:4:17",
														"nodeType": "YulTypedName",
														"src": "17832:4:17",
														"type": ""
													}
												],
												"src": "17711:332:17"
											},
											{
												"body": {
													"nativeSrc": "18077:152:17",
													"nodeType": "YulBlock",
													"src": "18077:152:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18094:1:17",
																		"nodeType": "YulLiteral",
																		"src": "18094:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18097:77:17",
																		"nodeType": "YulLiteral",
																		"src": "18097:77:17",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18087:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "18087:6:17"
																},
																"nativeSrc": "18087:88:17",
																"nodeType": "YulFunctionCall",
																"src": "18087:88:17"
															},
															"nativeSrc": "18087:88:17",
															"nodeType": "YulExpressionStatement",
															"src": "18087:88:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18191:1:17",
																		"nodeType": "YulLiteral",
																		"src": "18191:1:17",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18194:4:17",
																		"nodeType": "YulLiteral",
																		"src": "18194:4:17",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18184:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "18184:6:17"
																},
																"nativeSrc": "18184:15:17",
																"nodeType": "YulFunctionCall",
																"src": "18184:15:17"
															},
															"nativeSrc": "18184:15:17",
															"nodeType": "YulExpressionStatement",
															"src": "18184:15:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18215:1:17",
																		"nodeType": "YulLiteral",
																		"src": "18215:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18218:4:17",
																		"nodeType": "YulLiteral",
																		"src": "18218:4:17",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "18208:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "18208:6:17"
																},
																"nativeSrc": "18208:15:17",
																"nodeType": "YulFunctionCall",
																"src": "18208:15:17"
															},
															"nativeSrc": "18208:15:17",
															"nodeType": "YulExpressionStatement",
															"src": "18208:15:17"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "18049:180:17",
												"nodeType": "YulFunctionDefinition",
												"src": "18049:180:17"
											},
											{
												"body": {
													"nativeSrc": "18349:34:17",
													"nodeType": "YulBlock",
													"src": "18349:34:17",
													"statements": [
														{
															"nativeSrc": "18359:18:17",
															"nodeType": "YulAssignment",
															"src": "18359:18:17",
															"value": {
																"name": "pos",
																"nativeSrc": "18374:3:17",
																"nodeType": "YulIdentifier",
																"src": "18374:3:17"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "18359:11:17",
																	"nodeType": "YulIdentifier",
																	"src": "18359:11:17"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "18235:148:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18321:3:17",
														"nodeType": "YulTypedName",
														"src": "18321:3:17",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "18326:6:17",
														"nodeType": "YulTypedName",
														"src": "18326:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "18337:11:17",
														"nodeType": "YulTypedName",
														"src": "18337:11:17",
														"type": ""
													}
												],
												"src": "18235:148:17"
											},
											{
												"body": {
													"nativeSrc": "18499:280:17",
													"nodeType": "YulBlock",
													"src": "18499:280:17",
													"statements": [
														{
															"nativeSrc": "18509:53:17",
															"nodeType": "YulVariableDeclaration",
															"src": "18509:53:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "18556:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "18556:5:17"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "18523:32:17",
																	"nodeType": "YulIdentifier",
																	"src": "18523:32:17"
																},
																"nativeSrc": "18523:39:17",
																"nodeType": "YulFunctionCall",
																"src": "18523:39:17"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "18513:6:17",
																	"nodeType": "YulTypedName",
																	"src": "18513:6:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "18571:96:17",
															"nodeType": "YulAssignment",
															"src": "18571:96:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18655:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "18655:3:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "18660:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "18660:6:17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "18578:76:17",
																	"nodeType": "YulIdentifier",
																	"src": "18578:76:17"
																},
																"nativeSrc": "18578:89:17",
																"nodeType": "YulFunctionCall",
																"src": "18578:89:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18571:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "18571:3:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "18715:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "18715:5:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18722:4:17",
																				"nodeType": "YulLiteral",
																				"src": "18722:4:17",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18711:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "18711:3:17"
																		},
																		"nativeSrc": "18711:16:17",
																		"nodeType": "YulFunctionCall",
																		"src": "18711:16:17"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "18729:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "18729:3:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "18734:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "18734:6:17"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "18676:34:17",
																	"nodeType": "YulIdentifier",
																	"src": "18676:34:17"
																},
																"nativeSrc": "18676:65:17",
																"nodeType": "YulFunctionCall",
																"src": "18676:65:17"
															},
															"nativeSrc": "18676:65:17",
															"nodeType": "YulExpressionStatement",
															"src": "18676:65:17"
														},
														{
															"nativeSrc": "18750:23:17",
															"nodeType": "YulAssignment",
															"src": "18750:23:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18761:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "18761:3:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "18766:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "18766:6:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18757:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "18757:3:17"
																},
																"nativeSrc": "18757:16:17",
																"nodeType": "YulFunctionCall",
																"src": "18757:16:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18750:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "18750:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "18389:390:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "18480:5:17",
														"nodeType": "YulTypedName",
														"src": "18480:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "18487:3:17",
														"nodeType": "YulTypedName",
														"src": "18487:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18495:3:17",
														"nodeType": "YulTypedName",
														"src": "18495:3:17",
														"type": ""
													}
												],
												"src": "18389:390:17"
											},
											{
												"body": {
													"nativeSrc": "18969:251:17",
													"nodeType": "YulBlock",
													"src": "18969:251:17",
													"statements": [
														{
															"nativeSrc": "18980:102:17",
															"nodeType": "YulAssignment",
															"src": "18980:102:17",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "19069:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "19069:6:17"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "19078:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "19078:3:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "18987:81:17",
																	"nodeType": "YulIdentifier",
																	"src": "18987:81:17"
																},
																"nativeSrc": "18987:95:17",
																"nodeType": "YulFunctionCall",
																"src": "18987:95:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18980:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "18980:3:17"
																}
															]
														},
														{
															"nativeSrc": "19092:102:17",
															"nodeType": "YulAssignment",
															"src": "19092:102:17",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "19181:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "19181:6:17"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "19190:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "19190:3:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "19099:81:17",
																	"nodeType": "YulIdentifier",
																	"src": "19099:81:17"
																},
																"nativeSrc": "19099:95:17",
																"nodeType": "YulFunctionCall",
																"src": "19099:95:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19092:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "19092:3:17"
																}
															]
														},
														{
															"nativeSrc": "19204:10:17",
															"nodeType": "YulAssignment",
															"src": "19204:10:17",
															"value": {
																"name": "pos",
																"nativeSrc": "19211:3:17",
																"nodeType": "YulIdentifier",
																"src": "19211:3:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "19204:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "19204:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "18785:435:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18940:3:17",
														"nodeType": "YulTypedName",
														"src": "18940:3:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "18946:6:17",
														"nodeType": "YulTypedName",
														"src": "18946:6:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "18954:6:17",
														"nodeType": "YulTypedName",
														"src": "18954:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18965:3:17",
														"nodeType": "YulTypedName",
														"src": "18965:3:17",
														"type": ""
													}
												],
												"src": "18785:435:17"
											},
											{
												"body": {
													"nativeSrc": "19284:40:17",
													"nodeType": "YulBlock",
													"src": "19284:40:17",
													"statements": [
														{
															"nativeSrc": "19295:22:17",
															"nodeType": "YulAssignment",
															"src": "19295:22:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "19311:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "19311:5:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "19305:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "19305:5:17"
																},
																"nativeSrc": "19305:12:17",
																"nodeType": "YulFunctionCall",
																"src": "19305:12:17"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "19295:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "19295:6:17"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "19226:98:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "19267:5:17",
														"nodeType": "YulTypedName",
														"src": "19267:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "19277:6:17",
														"nodeType": "YulTypedName",
														"src": "19277:6:17",
														"type": ""
													}
												],
												"src": "19226:98:17"
											},
											{
												"body": {
													"nativeSrc": "19425:73:17",
													"nodeType": "YulBlock",
													"src": "19425:73:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19442:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "19442:3:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "19447:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "19447:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19435:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "19435:6:17"
																},
																"nativeSrc": "19435:19:17",
																"nodeType": "YulFunctionCall",
																"src": "19435:19:17"
															},
															"nativeSrc": "19435:19:17",
															"nodeType": "YulExpressionStatement",
															"src": "19435:19:17"
														},
														{
															"nativeSrc": "19463:29:17",
															"nodeType": "YulAssignment",
															"src": "19463:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19482:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "19482:3:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19487:4:17",
																		"nodeType": "YulLiteral",
																		"src": "19487:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19478:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "19478:3:17"
																},
																"nativeSrc": "19478:14:17",
																"nodeType": "YulFunctionCall",
																"src": "19478:14:17"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "19463:11:17",
																	"nodeType": "YulIdentifier",
																	"src": "19463:11:17"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "19330:168:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "19397:3:17",
														"nodeType": "YulTypedName",
														"src": "19397:3:17",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "19402:6:17",
														"nodeType": "YulTypedName",
														"src": "19402:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "19413:11:17",
														"nodeType": "YulTypedName",
														"src": "19413:11:17",
														"type": ""
													}
												],
												"src": "19330:168:17"
											},
											{
												"body": {
													"nativeSrc": "19594:283:17",
													"nodeType": "YulBlock",
													"src": "19594:283:17",
													"statements": [
														{
															"nativeSrc": "19604:52:17",
															"nodeType": "YulVariableDeclaration",
															"src": "19604:52:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "19650:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "19650:5:17"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "19618:31:17",
																	"nodeType": "YulIdentifier",
																	"src": "19618:31:17"
																},
																"nativeSrc": "19618:38:17",
																"nodeType": "YulFunctionCall",
																"src": "19618:38:17"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "19608:6:17",
																	"nodeType": "YulTypedName",
																	"src": "19608:6:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "19665:77:17",
															"nodeType": "YulAssignment",
															"src": "19665:77:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19730:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "19730:3:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "19735:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "19735:6:17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "19672:57:17",
																	"nodeType": "YulIdentifier",
																	"src": "19672:57:17"
																},
																"nativeSrc": "19672:70:17",
																"nodeType": "YulFunctionCall",
																"src": "19672:70:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19665:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "19665:3:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "19790:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "19790:5:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19797:4:17",
																				"nodeType": "YulLiteral",
																				"src": "19797:4:17",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19786:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "19786:3:17"
																		},
																		"nativeSrc": "19786:16:17",
																		"nodeType": "YulFunctionCall",
																		"src": "19786:16:17"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "19804:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "19804:3:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "19809:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "19809:6:17"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "19751:34:17",
																	"nodeType": "YulIdentifier",
																	"src": "19751:34:17"
																},
																"nativeSrc": "19751:65:17",
																"nodeType": "YulFunctionCall",
																"src": "19751:65:17"
															},
															"nativeSrc": "19751:65:17",
															"nodeType": "YulExpressionStatement",
															"src": "19751:65:17"
														},
														{
															"nativeSrc": "19825:46:17",
															"nodeType": "YulAssignment",
															"src": "19825:46:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19836:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "19836:3:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "19863:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "19863:6:17"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "19841:21:17",
																			"nodeType": "YulIdentifier",
																			"src": "19841:21:17"
																		},
																		"nativeSrc": "19841:29:17",
																		"nodeType": "YulFunctionCall",
																		"src": "19841:29:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19832:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "19832:3:17"
																},
																"nativeSrc": "19832:39:17",
																"nodeType": "YulFunctionCall",
																"src": "19832:39:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "19825:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "19825:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "19504:373:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "19575:5:17",
														"nodeType": "YulTypedName",
														"src": "19575:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "19582:3:17",
														"nodeType": "YulTypedName",
														"src": "19582:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "19590:3:17",
														"nodeType": "YulTypedName",
														"src": "19590:3:17",
														"type": ""
													}
												],
												"src": "19504:373:17"
											},
											{
												"body": {
													"nativeSrc": "20083:440:17",
													"nodeType": "YulBlock",
													"src": "20083:440:17",
													"statements": [
														{
															"nativeSrc": "20093:27:17",
															"nodeType": "YulAssignment",
															"src": "20093:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20105:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "20105:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20116:3:17",
																		"nodeType": "YulLiteral",
																		"src": "20116:3:17",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20101:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "20101:3:17"
																},
																"nativeSrc": "20101:19:17",
																"nodeType": "YulFunctionCall",
																"src": "20101:19:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20093:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "20093:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "20174:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "20174:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20187:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "20187:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20198:1:17",
																				"nodeType": "YulLiteral",
																				"src": "20198:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20183:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "20183:3:17"
																		},
																		"nativeSrc": "20183:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "20183:17:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "20130:43:17",
																	"nodeType": "YulIdentifier",
																	"src": "20130:43:17"
																},
																"nativeSrc": "20130:71:17",
																"nodeType": "YulFunctionCall",
																"src": "20130:71:17"
															},
															"nativeSrc": "20130:71:17",
															"nodeType": "YulExpressionStatement",
															"src": "20130:71:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "20255:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "20255:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20268:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "20268:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20279:2:17",
																				"nodeType": "YulLiteral",
																				"src": "20279:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20264:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "20264:3:17"
																		},
																		"nativeSrc": "20264:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "20264:18:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "20211:43:17",
																	"nodeType": "YulIdentifier",
																	"src": "20211:43:17"
																},
																"nativeSrc": "20211:72:17",
																"nodeType": "YulFunctionCall",
																"src": "20211:72:17"
															},
															"nativeSrc": "20211:72:17",
															"nodeType": "YulExpressionStatement",
															"src": "20211:72:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "20337:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "20337:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20350:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "20350:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20361:2:17",
																				"nodeType": "YulLiteral",
																				"src": "20361:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20346:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "20346:3:17"
																		},
																		"nativeSrc": "20346:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "20346:18:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "20293:43:17",
																	"nodeType": "YulIdentifier",
																	"src": "20293:43:17"
																},
																"nativeSrc": "20293:72:17",
																"nodeType": "YulFunctionCall",
																"src": "20293:72:17"
															},
															"nativeSrc": "20293:72:17",
															"nodeType": "YulExpressionStatement",
															"src": "20293:72:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20386:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "20386:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20397:2:17",
																				"nodeType": "YulLiteral",
																				"src": "20397:2:17",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20382:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "20382:3:17"
																		},
																		"nativeSrc": "20382:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "20382:18:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "20406:4:17",
																				"nodeType": "YulIdentifier",
																				"src": "20406:4:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "20412:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "20412:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "20402:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "20402:3:17"
																		},
																		"nativeSrc": "20402:20:17",
																		"nodeType": "YulFunctionCall",
																		"src": "20402:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20375:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "20375:6:17"
																},
																"nativeSrc": "20375:48:17",
																"nodeType": "YulFunctionCall",
																"src": "20375:48:17"
															},
															"nativeSrc": "20375:48:17",
															"nodeType": "YulExpressionStatement",
															"src": "20375:48:17"
														},
														{
															"nativeSrc": "20432:84:17",
															"nodeType": "YulAssignment",
															"src": "20432:84:17",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "20502:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "20502:6:17"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "20511:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "20511:4:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "20440:61:17",
																	"nodeType": "YulIdentifier",
																	"src": "20440:61:17"
																},
																"nativeSrc": "20440:76:17",
																"nodeType": "YulFunctionCall",
																"src": "20440:76:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20432:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "20432:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "19883:640:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20031:9:17",
														"nodeType": "YulTypedName",
														"src": "20031:9:17",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "20043:6:17",
														"nodeType": "YulTypedName",
														"src": "20043:6:17",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "20051:6:17",
														"nodeType": "YulTypedName",
														"src": "20051:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "20059:6:17",
														"nodeType": "YulTypedName",
														"src": "20059:6:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "20067:6:17",
														"nodeType": "YulTypedName",
														"src": "20067:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20078:4:17",
														"nodeType": "YulTypedName",
														"src": "20078:4:17",
														"type": ""
													}
												],
												"src": "19883:640:17"
											},
											{
												"body": {
													"nativeSrc": "20591:79:17",
													"nodeType": "YulBlock",
													"src": "20591:79:17",
													"statements": [
														{
															"nativeSrc": "20601:22:17",
															"nodeType": "YulAssignment",
															"src": "20601:22:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "20616:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "20616:6:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "20610:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "20610:5:17"
																},
																"nativeSrc": "20610:13:17",
																"nodeType": "YulFunctionCall",
																"src": "20610:13:17"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "20601:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "20601:5:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "20658:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "20658:5:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "20632:25:17",
																	"nodeType": "YulIdentifier",
																	"src": "20632:25:17"
																},
																"nativeSrc": "20632:32:17",
																"nodeType": "YulFunctionCall",
																"src": "20632:32:17"
															},
															"nativeSrc": "20632:32:17",
															"nodeType": "YulExpressionStatement",
															"src": "20632:32:17"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nativeSrc": "20529:141:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "20569:6:17",
														"nodeType": "YulTypedName",
														"src": "20569:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "20577:3:17",
														"nodeType": "YulTypedName",
														"src": "20577:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "20585:5:17",
														"nodeType": "YulTypedName",
														"src": "20585:5:17",
														"type": ""
													}
												],
												"src": "20529:141:17"
											},
											{
												"body": {
													"nativeSrc": "20752:273:17",
													"nodeType": "YulBlock",
													"src": "20752:273:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "20798:83:17",
																"nodeType": "YulBlock",
																"src": "20798:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "20800:77:17",
																				"nodeType": "YulIdentifier",
																				"src": "20800:77:17"
																			},
																			"nativeSrc": "20800:79:17",
																			"nodeType": "YulFunctionCall",
																			"src": "20800:79:17"
																		},
																		"nativeSrc": "20800:79:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "20800:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "20773:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "20773:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "20782:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "20782:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "20769:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "20769:3:17"
																		},
																		"nativeSrc": "20769:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "20769:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20794:2:17",
																		"nodeType": "YulLiteral",
																		"src": "20794:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "20765:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "20765:3:17"
																},
																"nativeSrc": "20765:32:17",
																"nodeType": "YulFunctionCall",
																"src": "20765:32:17"
															},
															"nativeSrc": "20762:119:17",
															"nodeType": "YulIf",
															"src": "20762:119:17"
														},
														{
															"nativeSrc": "20891:127:17",
															"nodeType": "YulBlock",
															"src": "20891:127:17",
															"statements": [
																{
																	"nativeSrc": "20906:15:17",
																	"nodeType": "YulVariableDeclaration",
																	"src": "20906:15:17",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "20920:1:17",
																		"nodeType": "YulLiteral",
																		"src": "20920:1:17",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "20910:6:17",
																			"nodeType": "YulTypedName",
																			"src": "20910:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "20935:73:17",
																	"nodeType": "YulAssignment",
																	"src": "20935:73:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "20980:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "20980:9:17"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "20991:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "20991:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "20976:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "20976:3:17"
																				},
																				"nativeSrc": "20976:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "20976:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "21000:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "21000:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nativeSrc": "20945:30:17",
																			"nodeType": "YulIdentifier",
																			"src": "20945:30:17"
																		},
																		"nativeSrc": "20945:63:17",
																		"nodeType": "YulFunctionCall",
																		"src": "20945:63:17"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "20935:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "20935:6:17"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nativeSrc": "20676:349:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20722:9:17",
														"nodeType": "YulTypedName",
														"src": "20722:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "20733:7:17",
														"nodeType": "YulTypedName",
														"src": "20733:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "20745:6:17",
														"nodeType": "YulTypedName",
														"src": "20745:6:17",
														"type": ""
													}
												],
												"src": "20676:349:17"
											},
											{
												"body": {
													"nativeSrc": "21059:152:17",
													"nodeType": "YulBlock",
													"src": "21059:152:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "21076:1:17",
																		"nodeType": "YulLiteral",
																		"src": "21076:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21079:77:17",
																		"nodeType": "YulLiteral",
																		"src": "21079:77:17",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21069:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "21069:6:17"
																},
																"nativeSrc": "21069:88:17",
																"nodeType": "YulFunctionCall",
																"src": "21069:88:17"
															},
															"nativeSrc": "21069:88:17",
															"nodeType": "YulExpressionStatement",
															"src": "21069:88:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "21173:1:17",
																		"nodeType": "YulLiteral",
																		"src": "21173:1:17",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21176:4:17",
																		"nodeType": "YulLiteral",
																		"src": "21176:4:17",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21166:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "21166:6:17"
																},
																"nativeSrc": "21166:15:17",
																"nodeType": "YulFunctionCall",
																"src": "21166:15:17"
															},
															"nativeSrc": "21166:15:17",
															"nodeType": "YulExpressionStatement",
															"src": "21166:15:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "21197:1:17",
																		"nodeType": "YulLiteral",
																		"src": "21197:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21200:4:17",
																		"nodeType": "YulLiteral",
																		"src": "21200:4:17",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "21190:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "21190:6:17"
																},
																"nativeSrc": "21190:15:17",
																"nodeType": "YulFunctionCall",
																"src": "21190:15:17"
															},
															"nativeSrc": "21190:15:17",
															"nodeType": "YulExpressionStatement",
															"src": "21190:15:17"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "21031:180:17",
												"nodeType": "YulFunctionDefinition",
												"src": "21031:180:17"
											},
											{
												"body": {
													"nativeSrc": "21245:152:17",
													"nodeType": "YulBlock",
													"src": "21245:152:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "21262:1:17",
																		"nodeType": "YulLiteral",
																		"src": "21262:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21265:77:17",
																		"nodeType": "YulLiteral",
																		"src": "21265:77:17",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21255:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "21255:6:17"
																},
																"nativeSrc": "21255:88:17",
																"nodeType": "YulFunctionCall",
																"src": "21255:88:17"
															},
															"nativeSrc": "21255:88:17",
															"nodeType": "YulExpressionStatement",
															"src": "21255:88:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "21359:1:17",
																		"nodeType": "YulLiteral",
																		"src": "21359:1:17",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21362:4:17",
																		"nodeType": "YulLiteral",
																		"src": "21362:4:17",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21352:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "21352:6:17"
																},
																"nativeSrc": "21352:15:17",
																"nodeType": "YulFunctionCall",
																"src": "21352:15:17"
															},
															"nativeSrc": "21352:15:17",
															"nodeType": "YulExpressionStatement",
															"src": "21352:15:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "21383:1:17",
																		"nodeType": "YulLiteral",
																		"src": "21383:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21386:4:17",
																		"nodeType": "YulLiteral",
																		"src": "21386:4:17",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "21376:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "21376:6:17"
																},
																"nativeSrc": "21376:15:17",
																"nodeType": "YulFunctionCall",
																"src": "21376:15:17"
															},
															"nativeSrc": "21376:15:17",
															"nodeType": "YulExpressionStatement",
															"src": "21376:15:17"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "21217:180:17",
												"nodeType": "YulFunctionDefinition",
												"src": "21217:180:17"
											},
											{
												"body": {
													"nativeSrc": "21448:149:17",
													"nodeType": "YulBlock",
													"src": "21448:149:17",
													"statements": [
														{
															"nativeSrc": "21458:25:17",
															"nodeType": "YulAssignment",
															"src": "21458:25:17",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "21481:1:17",
																		"nodeType": "YulIdentifier",
																		"src": "21481:1:17"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "21463:17:17",
																	"nodeType": "YulIdentifier",
																	"src": "21463:17:17"
																},
																"nativeSrc": "21463:20:17",
																"nodeType": "YulFunctionCall",
																"src": "21463:20:17"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "21458:1:17",
																	"nodeType": "YulIdentifier",
																	"src": "21458:1:17"
																}
															]
														},
														{
															"nativeSrc": "21492:25:17",
															"nodeType": "YulAssignment",
															"src": "21492:25:17",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "21515:1:17",
																		"nodeType": "YulIdentifier",
																		"src": "21515:1:17"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "21497:17:17",
																	"nodeType": "YulIdentifier",
																	"src": "21497:17:17"
																},
																"nativeSrc": "21497:20:17",
																"nodeType": "YulFunctionCall",
																"src": "21497:20:17"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "21492:1:17",
																	"nodeType": "YulIdentifier",
																	"src": "21492:1:17"
																}
															]
														},
														{
															"nativeSrc": "21526:17:17",
															"nodeType": "YulAssignment",
															"src": "21526:17:17",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "21538:1:17",
																		"nodeType": "YulIdentifier",
																		"src": "21538:1:17"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "21541:1:17",
																		"nodeType": "YulIdentifier",
																		"src": "21541:1:17"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "21534:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "21534:3:17"
																},
																"nativeSrc": "21534:9:17",
																"nodeType": "YulFunctionCall",
																"src": "21534:9:17"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "21526:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "21526:4:17"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "21568:22:17",
																"nodeType": "YulBlock",
																"src": "21568:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "21570:16:17",
																				"nodeType": "YulIdentifier",
																				"src": "21570:16:17"
																			},
																			"nativeSrc": "21570:18:17",
																			"nodeType": "YulFunctionCall",
																			"src": "21570:18:17"
																		},
																		"nativeSrc": "21570:18:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "21570:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "21559:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "21559:4:17"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "21565:1:17",
																		"nodeType": "YulIdentifier",
																		"src": "21565:1:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "21556:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "21556:2:17"
																},
																"nativeSrc": "21556:11:17",
																"nodeType": "YulFunctionCall",
																"src": "21556:11:17"
															},
															"nativeSrc": "21553:37:17",
															"nodeType": "YulIf",
															"src": "21553:37:17"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "21403:194:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "21434:1:17",
														"nodeType": "YulTypedName",
														"src": "21434:1:17",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "21437:1:17",
														"nodeType": "YulTypedName",
														"src": "21437:1:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "21443:4:17",
														"nodeType": "YulTypedName",
														"src": "21443:4:17",
														"type": ""
													}
												],
												"src": "21403:194:17"
											},
											{
												"body": {
													"nativeSrc": "21631:152:17",
													"nodeType": "YulBlock",
													"src": "21631:152:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "21648:1:17",
																		"nodeType": "YulLiteral",
																		"src": "21648:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21651:77:17",
																		"nodeType": "YulLiteral",
																		"src": "21651:77:17",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21641:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "21641:6:17"
																},
																"nativeSrc": "21641:88:17",
																"nodeType": "YulFunctionCall",
																"src": "21641:88:17"
															},
															"nativeSrc": "21641:88:17",
															"nodeType": "YulExpressionStatement",
															"src": "21641:88:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "21745:1:17",
																		"nodeType": "YulLiteral",
																		"src": "21745:1:17",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21748:4:17",
																		"nodeType": "YulLiteral",
																		"src": "21748:4:17",
																		"type": "",
																		"value": "0x31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21738:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "21738:6:17"
																},
																"nativeSrc": "21738:15:17",
																"nodeType": "YulFunctionCall",
																"src": "21738:15:17"
															},
															"nativeSrc": "21738:15:17",
															"nodeType": "YulExpressionStatement",
															"src": "21738:15:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "21769:1:17",
																		"nodeType": "YulLiteral",
																		"src": "21769:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21772:4:17",
																		"nodeType": "YulLiteral",
																		"src": "21772:4:17",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "21762:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "21762:6:17"
																},
																"nativeSrc": "21762:15:17",
																"nodeType": "YulFunctionCall",
																"src": "21762:15:17"
															},
															"nativeSrc": "21762:15:17",
															"nodeType": "YulExpressionStatement",
															"src": "21762:15:17"
														}
													]
												},
												"name": "panic_error_0x31",
												"nativeSrc": "21603:180:17",
												"nodeType": "YulFunctionDefinition",
												"src": "21603:180:17"
											},
											{
												"body": {
													"nativeSrc": "21843:87:17",
													"nodeType": "YulBlock",
													"src": "21843:87:17",
													"statements": [
														{
															"nativeSrc": "21853:11:17",
															"nodeType": "YulAssignment",
															"src": "21853:11:17",
															"value": {
																"name": "ptr",
																"nativeSrc": "21861:3:17",
																"nodeType": "YulIdentifier",
																"src": "21861:3:17"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "21853:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "21853:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "21881:1:17",
																		"nodeType": "YulLiteral",
																		"src": "21881:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "21884:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "21884:3:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21874:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "21874:6:17"
																},
																"nativeSrc": "21874:14:17",
																"nodeType": "YulFunctionCall",
																"src": "21874:14:17"
															},
															"nativeSrc": "21874:14:17",
															"nodeType": "YulExpressionStatement",
															"src": "21874:14:17"
														},
														{
															"nativeSrc": "21897:26:17",
															"nodeType": "YulAssignment",
															"src": "21897:26:17",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "21915:1:17",
																		"nodeType": "YulLiteral",
																		"src": "21915:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21918:4:17",
																		"nodeType": "YulLiteral",
																		"src": "21918:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "21905:9:17",
																	"nodeType": "YulIdentifier",
																	"src": "21905:9:17"
																},
																"nativeSrc": "21905:18:17",
																"nodeType": "YulFunctionCall",
																"src": "21905:18:17"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "21897:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "21897:4:17"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "21789:141:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "21830:3:17",
														"nodeType": "YulTypedName",
														"src": "21830:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "21838:4:17",
														"nodeType": "YulTypedName",
														"src": "21838:4:17",
														"type": ""
													}
												],
												"src": "21789:141:17"
											},
											{
												"body": {
													"nativeSrc": "21980:49:17",
													"nodeType": "YulBlock",
													"src": "21980:49:17",
													"statements": [
														{
															"nativeSrc": "21990:33:17",
															"nodeType": "YulAssignment",
															"src": "21990:33:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "22008:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "22008:5:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22015:2:17",
																				"nodeType": "YulLiteral",
																				"src": "22015:2:17",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22004:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "22004:3:17"
																		},
																		"nativeSrc": "22004:14:17",
																		"nodeType": "YulFunctionCall",
																		"src": "22004:14:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22020:2:17",
																		"nodeType": "YulLiteral",
																		"src": "22020:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "22000:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "22000:3:17"
																},
																"nativeSrc": "22000:23:17",
																"nodeType": "YulFunctionCall",
																"src": "22000:23:17"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "21990:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "21990:6:17"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "21936:93:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "21963:5:17",
														"nodeType": "YulTypedName",
														"src": "21963:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "21973:6:17",
														"nodeType": "YulTypedName",
														"src": "21973:6:17",
														"type": ""
													}
												],
												"src": "21936:93:17"
											},
											{
												"body": {
													"nativeSrc": "22088:54:17",
													"nodeType": "YulBlock",
													"src": "22088:54:17",
													"statements": [
														{
															"nativeSrc": "22098:37:17",
															"nodeType": "YulAssignment",
															"src": "22098:37:17",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "22123:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "22123:4:17"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "22129:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "22129:5:17"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "22119:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "22119:3:17"
																},
																"nativeSrc": "22119:16:17",
																"nodeType": "YulFunctionCall",
																"src": "22119:16:17"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "22098:8:17",
																	"nodeType": "YulIdentifier",
																	"src": "22098:8:17"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "22035:107:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "22063:4:17",
														"nodeType": "YulTypedName",
														"src": "22063:4:17",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "22069:5:17",
														"nodeType": "YulTypedName",
														"src": "22069:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "22079:8:17",
														"nodeType": "YulTypedName",
														"src": "22079:8:17",
														"type": ""
													}
												],
												"src": "22035:107:17"
											},
											{
												"body": {
													"nativeSrc": "22224:317:17",
													"nodeType": "YulBlock",
													"src": "22224:317:17",
													"statements": [
														{
															"nativeSrc": "22234:35:17",
															"nodeType": "YulVariableDeclaration",
															"src": "22234:35:17",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "22255:10:17",
																		"nodeType": "YulIdentifier",
																		"src": "22255:10:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22267:1:17",
																		"nodeType": "YulLiteral",
																		"src": "22267:1:17",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "22251:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "22251:3:17"
																},
																"nativeSrc": "22251:18:17",
																"nodeType": "YulFunctionCall",
																"src": "22251:18:17"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "22238:9:17",
																	"nodeType": "YulTypedName",
																	"src": "22238:9:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "22278:109:17",
															"nodeType": "YulVariableDeclaration",
															"src": "22278:109:17",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "22309:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "22309:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22320:66:17",
																		"nodeType": "YulLiteral",
																		"src": "22320:66:17",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "22290:18:17",
																	"nodeType": "YulIdentifier",
																	"src": "22290:18:17"
																},
																"nativeSrc": "22290:97:17",
																"nodeType": "YulFunctionCall",
																"src": "22290:97:17"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "22282:4:17",
																	"nodeType": "YulTypedName",
																	"src": "22282:4:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "22396:51:17",
															"nodeType": "YulAssignment",
															"src": "22396:51:17",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "22427:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "22427:9:17"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "22438:8:17",
																		"nodeType": "YulIdentifier",
																		"src": "22438:8:17"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "22408:18:17",
																	"nodeType": "YulIdentifier",
																	"src": "22408:18:17"
																},
																"nativeSrc": "22408:39:17",
																"nodeType": "YulFunctionCall",
																"src": "22408:39:17"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "22396:8:17",
																	"nodeType": "YulIdentifier",
																	"src": "22396:8:17"
																}
															]
														},
														{
															"nativeSrc": "22456:30:17",
															"nodeType": "YulAssignment",
															"src": "22456:30:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "22469:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "22469:5:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "22480:4:17",
																				"nodeType": "YulIdentifier",
																				"src": "22480:4:17"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "22476:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "22476:3:17"
																		},
																		"nativeSrc": "22476:9:17",
																		"nodeType": "YulFunctionCall",
																		"src": "22476:9:17"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "22465:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "22465:3:17"
																},
																"nativeSrc": "22465:21:17",
																"nodeType": "YulFunctionCall",
																"src": "22465:21:17"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "22456:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "22456:5:17"
																}
															]
														},
														{
															"nativeSrc": "22495:40:17",
															"nodeType": "YulAssignment",
															"src": "22495:40:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "22508:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "22508:5:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "22519:8:17",
																				"nodeType": "YulIdentifier",
																				"src": "22519:8:17"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "22529:4:17",
																				"nodeType": "YulIdentifier",
																				"src": "22529:4:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "22515:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "22515:3:17"
																		},
																		"nativeSrc": "22515:19:17",
																		"nodeType": "YulFunctionCall",
																		"src": "22515:19:17"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "22505:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "22505:2:17"
																},
																"nativeSrc": "22505:30:17",
																"nodeType": "YulFunctionCall",
																"src": "22505:30:17"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "22495:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "22495:6:17"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "22148:393:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "22185:5:17",
														"nodeType": "YulTypedName",
														"src": "22185:5:17",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "22192:10:17",
														"nodeType": "YulTypedName",
														"src": "22192:10:17",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "22204:8:17",
														"nodeType": "YulTypedName",
														"src": "22204:8:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "22217:6:17",
														"nodeType": "YulTypedName",
														"src": "22217:6:17",
														"type": ""
													}
												],
												"src": "22148:393:17"
											},
											{
												"body": {
													"nativeSrc": "22579:28:17",
													"nodeType": "YulBlock",
													"src": "22579:28:17",
													"statements": [
														{
															"nativeSrc": "22589:12:17",
															"nodeType": "YulAssignment",
															"src": "22589:12:17",
															"value": {
																"name": "value",
																"nativeSrc": "22596:5:17",
																"nodeType": "YulIdentifier",
																"src": "22596:5:17"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "22589:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "22589:3:17"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "22547:60:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "22565:5:17",
														"nodeType": "YulTypedName",
														"src": "22565:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "22575:3:17",
														"nodeType": "YulTypedName",
														"src": "22575:3:17",
														"type": ""
													}
												],
												"src": "22547:60:17"
											},
											{
												"body": {
													"nativeSrc": "22673:82:17",
													"nodeType": "YulBlock",
													"src": "22673:82:17",
													"statements": [
														{
															"nativeSrc": "22683:66:17",
															"nodeType": "YulAssignment",
															"src": "22683:66:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "22741:5:17",
																						"nodeType": "YulIdentifier",
																						"src": "22741:5:17"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "22723:17:17",
																					"nodeType": "YulIdentifier",
																					"src": "22723:17:17"
																				},
																				"nativeSrc": "22723:24:17",
																				"nodeType": "YulFunctionCall",
																				"src": "22723:24:17"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "22714:8:17",
																			"nodeType": "YulIdentifier",
																			"src": "22714:8:17"
																		},
																		"nativeSrc": "22714:34:17",
																		"nodeType": "YulFunctionCall",
																		"src": "22714:34:17"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "22696:17:17",
																	"nodeType": "YulIdentifier",
																	"src": "22696:17:17"
																},
																"nativeSrc": "22696:53:17",
																"nodeType": "YulFunctionCall",
																"src": "22696:53:17"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "22683:9:17",
																	"nodeType": "YulIdentifier",
																	"src": "22683:9:17"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "22613:142:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "22653:5:17",
														"nodeType": "YulTypedName",
														"src": "22653:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "22663:9:17",
														"nodeType": "YulTypedName",
														"src": "22663:9:17",
														"type": ""
													}
												],
												"src": "22613:142:17"
											},
											{
												"body": {
													"nativeSrc": "22808:28:17",
													"nodeType": "YulBlock",
													"src": "22808:28:17",
													"statements": [
														{
															"nativeSrc": "22818:12:17",
															"nodeType": "YulAssignment",
															"src": "22818:12:17",
															"value": {
																"name": "value",
																"nativeSrc": "22825:5:17",
																"nodeType": "YulIdentifier",
																"src": "22825:5:17"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "22818:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "22818:3:17"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "22761:75:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "22794:5:17",
														"nodeType": "YulTypedName",
														"src": "22794:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "22804:3:17",
														"nodeType": "YulTypedName",
														"src": "22804:3:17",
														"type": ""
													}
												],
												"src": "22761:75:17"
											},
											{
												"body": {
													"nativeSrc": "22918:193:17",
													"nodeType": "YulBlock",
													"src": "22918:193:17",
													"statements": [
														{
															"nativeSrc": "22928:63:17",
															"nodeType": "YulVariableDeclaration",
															"src": "22928:63:17",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "22983:7:17",
																		"nodeType": "YulIdentifier",
																		"src": "22983:7:17"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "22952:30:17",
																	"nodeType": "YulIdentifier",
																	"src": "22952:30:17"
																},
																"nativeSrc": "22952:39:17",
																"nodeType": "YulFunctionCall",
																"src": "22952:39:17"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "22932:16:17",
																	"nodeType": "YulTypedName",
																	"src": "22932:16:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "23007:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "23007:4:17"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "23047:4:17",
																						"nodeType": "YulIdentifier",
																						"src": "23047:4:17"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "23041:5:17",
																					"nodeType": "YulIdentifier",
																					"src": "23041:5:17"
																				},
																				"nativeSrc": "23041:11:17",
																				"nodeType": "YulFunctionCall",
																				"src": "23041:11:17"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "23054:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "23054:6:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "23086:16:17",
																						"nodeType": "YulIdentifier",
																						"src": "23086:16:17"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "23062:23:17",
																					"nodeType": "YulIdentifier",
																					"src": "23062:23:17"
																				},
																				"nativeSrc": "23062:41:17",
																				"nodeType": "YulFunctionCall",
																				"src": "23062:41:17"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "23013:27:17",
																			"nodeType": "YulIdentifier",
																			"src": "23013:27:17"
																		},
																		"nativeSrc": "23013:91:17",
																		"nodeType": "YulFunctionCall",
																		"src": "23013:91:17"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "23000:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "23000:6:17"
																},
																"nativeSrc": "23000:105:17",
																"nodeType": "YulFunctionCall",
																"src": "23000:105:17"
															},
															"nativeSrc": "23000:105:17",
															"nodeType": "YulExpressionStatement",
															"src": "23000:105:17"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "22842:269:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "22895:4:17",
														"nodeType": "YulTypedName",
														"src": "22895:4:17",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "22901:6:17",
														"nodeType": "YulTypedName",
														"src": "22901:6:17",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "22909:7:17",
														"nodeType": "YulTypedName",
														"src": "22909:7:17",
														"type": ""
													}
												],
												"src": "22842:269:17"
											},
											{
												"body": {
													"nativeSrc": "23166:24:17",
													"nodeType": "YulBlock",
													"src": "23166:24:17",
													"statements": [
														{
															"nativeSrc": "23176:8:17",
															"nodeType": "YulAssignment",
															"src": "23176:8:17",
															"value": {
																"kind": "number",
																"nativeSrc": "23183:1:17",
																"nodeType": "YulLiteral",
																"src": "23183:1:17",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "23176:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "23176:3:17"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "23117:73:17",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "23162:3:17",
														"nodeType": "YulTypedName",
														"src": "23162:3:17",
														"type": ""
													}
												],
												"src": "23117:73:17"
											},
											{
												"body": {
													"nativeSrc": "23249:136:17",
													"nodeType": "YulBlock",
													"src": "23249:136:17",
													"statements": [
														{
															"nativeSrc": "23259:46:17",
															"nodeType": "YulVariableDeclaration",
															"src": "23259:46:17",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "23273:30:17",
																	"nodeType": "YulIdentifier",
																	"src": "23273:30:17"
																},
																"nativeSrc": "23273:32:17",
																"nodeType": "YulFunctionCall",
																"src": "23273:32:17"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "23263:6:17",
																	"nodeType": "YulTypedName",
																	"src": "23263:6:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "23358:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "23358:4:17"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "23364:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "23364:6:17"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "23372:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "23372:6:17"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "23314:43:17",
																	"nodeType": "YulIdentifier",
																	"src": "23314:43:17"
																},
																"nativeSrc": "23314:65:17",
																"nodeType": "YulFunctionCall",
																"src": "23314:65:17"
															},
															"nativeSrc": "23314:65:17",
															"nodeType": "YulExpressionStatement",
															"src": "23314:65:17"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "23196:189:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "23235:4:17",
														"nodeType": "YulTypedName",
														"src": "23235:4:17",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "23241:6:17",
														"nodeType": "YulTypedName",
														"src": "23241:6:17",
														"type": ""
													}
												],
												"src": "23196:189:17"
											},
											{
												"body": {
													"nativeSrc": "23441:136:17",
													"nodeType": "YulBlock",
													"src": "23441:136:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "23508:63:17",
																"nodeType": "YulBlock",
																"src": "23508:63:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "23552:5:17",
																					"nodeType": "YulIdentifier",
																					"src": "23552:5:17"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "23559:1:17",
																					"nodeType": "YulLiteral",
																					"src": "23559:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "23522:29:17",
																				"nodeType": "YulIdentifier",
																				"src": "23522:29:17"
																			},
																			"nativeSrc": "23522:39:17",
																			"nodeType": "YulFunctionCall",
																			"src": "23522:39:17"
																		},
																		"nativeSrc": "23522:39:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "23522:39:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "23461:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "23461:5:17"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "23468:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "23468:3:17"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "23458:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "23458:2:17"
																},
																"nativeSrc": "23458:14:17",
																"nodeType": "YulFunctionCall",
																"src": "23458:14:17"
															},
															"nativeSrc": "23451:120:17",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "23473:26:17",
																"nodeType": "YulBlock",
																"src": "23473:26:17",
																"statements": [
																	{
																		"nativeSrc": "23475:22:17",
																		"nodeType": "YulAssignment",
																		"src": "23475:22:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "23488:5:17",
																					"nodeType": "YulIdentifier",
																					"src": "23488:5:17"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "23495:1:17",
																					"nodeType": "YulLiteral",
																					"src": "23495:1:17",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "23484:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "23484:3:17"
																			},
																			"nativeSrc": "23484:13:17",
																			"nodeType": "YulFunctionCall",
																			"src": "23484:13:17"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "23475:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "23475:5:17"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "23455:2:17",
																"nodeType": "YulBlock",
																"src": "23455:2:17",
																"statements": []
															},
															"src": "23451:120:17"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "23391:186:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "23429:5:17",
														"nodeType": "YulTypedName",
														"src": "23429:5:17",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "23436:3:17",
														"nodeType": "YulTypedName",
														"src": "23436:3:17",
														"type": ""
													}
												],
												"src": "23391:186:17"
											},
											{
												"body": {
													"nativeSrc": "23662:464:17",
													"nodeType": "YulBlock",
													"src": "23662:464:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "23688:431:17",
																"nodeType": "YulBlock",
																"src": "23688:431:17",
																"statements": [
																	{
																		"nativeSrc": "23702:54:17",
																		"nodeType": "YulVariableDeclaration",
																		"src": "23702:54:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "23750:5:17",
																					"nodeType": "YulIdentifier",
																					"src": "23750:5:17"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "23718:31:17",
																				"nodeType": "YulIdentifier",
																				"src": "23718:31:17"
																			},
																			"nativeSrc": "23718:38:17",
																			"nodeType": "YulFunctionCall",
																			"src": "23718:38:17"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "23706:8:17",
																				"nodeType": "YulTypedName",
																				"src": "23706:8:17",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "23769:63:17",
																		"nodeType": "YulVariableDeclaration",
																		"src": "23769:63:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "23792:8:17",
																					"nodeType": "YulIdentifier",
																					"src": "23792:8:17"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "23820:10:17",
																							"nodeType": "YulIdentifier",
																							"src": "23820:10:17"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "23802:17:17",
																						"nodeType": "YulIdentifier",
																						"src": "23802:17:17"
																					},
																					"nativeSrc": "23802:29:17",
																					"nodeType": "YulFunctionCall",
																					"src": "23802:29:17"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "23788:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "23788:3:17"
																			},
																			"nativeSrc": "23788:44:17",
																			"nodeType": "YulFunctionCall",
																			"src": "23788:44:17"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "23773:11:17",
																				"nodeType": "YulTypedName",
																				"src": "23773:11:17",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "23989:27:17",
																			"nodeType": "YulBlock",
																			"src": "23989:27:17",
																			"statements": [
																				{
																					"nativeSrc": "23991:23:17",
																					"nodeType": "YulAssignment",
																					"src": "23991:23:17",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "24006:8:17",
																						"nodeType": "YulIdentifier",
																						"src": "24006:8:17"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "23991:11:17",
																							"nodeType": "YulIdentifier",
																							"src": "23991:11:17"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "23973:10:17",
																					"nodeType": "YulIdentifier",
																					"src": "23973:10:17"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "23985:2:17",
																					"nodeType": "YulLiteral",
																					"src": "23985:2:17",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "23970:2:17",
																				"nodeType": "YulIdentifier",
																				"src": "23970:2:17"
																			},
																			"nativeSrc": "23970:18:17",
																			"nodeType": "YulFunctionCall",
																			"src": "23970:18:17"
																		},
																		"nativeSrc": "23967:49:17",
																		"nodeType": "YulIf",
																		"src": "23967:49:17"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "24058:11:17",
																					"nodeType": "YulIdentifier",
																					"src": "24058:11:17"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "24075:8:17",
																							"nodeType": "YulIdentifier",
																							"src": "24075:8:17"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "24103:3:17",
																									"nodeType": "YulIdentifier",
																									"src": "24103:3:17"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "24085:17:17",
																								"nodeType": "YulIdentifier",
																								"src": "24085:17:17"
																							},
																							"nativeSrc": "24085:22:17",
																							"nodeType": "YulFunctionCall",
																							"src": "24085:22:17"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "24071:3:17",
																						"nodeType": "YulIdentifier",
																						"src": "24071:3:17"
																					},
																					"nativeSrc": "24071:37:17",
																					"nodeType": "YulFunctionCall",
																					"src": "24071:37:17"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "24029:28:17",
																				"nodeType": "YulIdentifier",
																				"src": "24029:28:17"
																			},
																			"nativeSrc": "24029:80:17",
																			"nodeType": "YulFunctionCall",
																			"src": "24029:80:17"
																		},
																		"nativeSrc": "24029:80:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "24029:80:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "23679:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "23679:3:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23684:2:17",
																		"nodeType": "YulLiteral",
																		"src": "23684:2:17",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "23676:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "23676:2:17"
																},
																"nativeSrc": "23676:11:17",
																"nodeType": "YulFunctionCall",
																"src": "23676:11:17"
															},
															"nativeSrc": "23673:446:17",
															"nodeType": "YulIf",
															"src": "23673:446:17"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "23583:543:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "23638:5:17",
														"nodeType": "YulTypedName",
														"src": "23638:5:17",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "23645:3:17",
														"nodeType": "YulTypedName",
														"src": "23645:3:17",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "23650:10:17",
														"nodeType": "YulTypedName",
														"src": "23650:10:17",
														"type": ""
													}
												],
												"src": "23583:543:17"
											},
											{
												"body": {
													"nativeSrc": "24195:54:17",
													"nodeType": "YulBlock",
													"src": "24195:54:17",
													"statements": [
														{
															"nativeSrc": "24205:37:17",
															"nodeType": "YulAssignment",
															"src": "24205:37:17",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "24230:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "24230:4:17"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "24236:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "24236:5:17"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "24226:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "24226:3:17"
																},
																"nativeSrc": "24226:16:17",
																"nodeType": "YulFunctionCall",
																"src": "24226:16:17"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "24205:8:17",
																	"nodeType": "YulIdentifier",
																	"src": "24205:8:17"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "24132:117:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "24170:4:17",
														"nodeType": "YulTypedName",
														"src": "24170:4:17",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "24176:5:17",
														"nodeType": "YulTypedName",
														"src": "24176:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "24186:8:17",
														"nodeType": "YulTypedName",
														"src": "24186:8:17",
														"type": ""
													}
												],
												"src": "24132:117:17"
											},
											{
												"body": {
													"nativeSrc": "24306:118:17",
													"nodeType": "YulBlock",
													"src": "24306:118:17",
													"statements": [
														{
															"nativeSrc": "24316:68:17",
															"nodeType": "YulVariableDeclaration",
															"src": "24316:68:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "24365:1:17",
																						"nodeType": "YulLiteral",
																						"src": "24365:1:17",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "24368:5:17",
																						"nodeType": "YulIdentifier",
																						"src": "24368:5:17"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "24361:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "24361:3:17"
																				},
																				"nativeSrc": "24361:13:17",
																				"nodeType": "YulFunctionCall",
																				"src": "24361:13:17"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "24380:1:17",
																						"nodeType": "YulLiteral",
																						"src": "24380:1:17",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "24376:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "24376:3:17"
																				},
																				"nativeSrc": "24376:6:17",
																				"nodeType": "YulFunctionCall",
																				"src": "24376:6:17"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "24332:28:17",
																			"nodeType": "YulIdentifier",
																			"src": "24332:28:17"
																		},
																		"nativeSrc": "24332:51:17",
																		"nodeType": "YulFunctionCall",
																		"src": "24332:51:17"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "24328:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "24328:3:17"
																},
																"nativeSrc": "24328:56:17",
																"nodeType": "YulFunctionCall",
																"src": "24328:56:17"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "24320:4:17",
																	"nodeType": "YulTypedName",
																	"src": "24320:4:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "24393:25:17",
															"nodeType": "YulAssignment",
															"src": "24393:25:17",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "24407:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "24407:4:17"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "24413:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "24413:4:17"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "24403:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "24403:3:17"
																},
																"nativeSrc": "24403:15:17",
																"nodeType": "YulFunctionCall",
																"src": "24403:15:17"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "24393:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "24393:6:17"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "24255:169:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "24283:4:17",
														"nodeType": "YulTypedName",
														"src": "24283:4:17",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "24289:5:17",
														"nodeType": "YulTypedName",
														"src": "24289:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "24299:6:17",
														"nodeType": "YulTypedName",
														"src": "24299:6:17",
														"type": ""
													}
												],
												"src": "24255:169:17"
											},
											{
												"body": {
													"nativeSrc": "24510:214:17",
													"nodeType": "YulBlock",
													"src": "24510:214:17",
													"statements": [
														{
															"nativeSrc": "24643:37:17",
															"nodeType": "YulAssignment",
															"src": "24643:37:17",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "24670:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "24670:4:17"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "24676:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "24676:3:17"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "24651:18:17",
																	"nodeType": "YulIdentifier",
																	"src": "24651:18:17"
																},
																"nativeSrc": "24651:29:17",
																"nodeType": "YulFunctionCall",
																"src": "24651:29:17"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "24643:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "24643:4:17"
																}
															]
														},
														{
															"nativeSrc": "24689:29:17",
															"nodeType": "YulAssignment",
															"src": "24689:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "24700:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "24700:4:17"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "24710:1:17",
																				"nodeType": "YulLiteral",
																				"src": "24710:1:17",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "24713:3:17",
																				"nodeType": "YulIdentifier",
																				"src": "24713:3:17"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "24706:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "24706:3:17"
																		},
																		"nativeSrc": "24706:11:17",
																		"nodeType": "YulFunctionCall",
																		"src": "24706:11:17"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "24697:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "24697:2:17"
																},
																"nativeSrc": "24697:21:17",
																"nodeType": "YulFunctionCall",
																"src": "24697:21:17"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "24689:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "24689:4:17"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "24429:295:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "24491:4:17",
														"nodeType": "YulTypedName",
														"src": "24491:4:17",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "24497:3:17",
														"nodeType": "YulTypedName",
														"src": "24497:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "24505:4:17",
														"nodeType": "YulTypedName",
														"src": "24505:4:17",
														"type": ""
													}
												],
												"src": "24429:295:17"
											},
											{
												"body": {
													"nativeSrc": "24821:1303:17",
													"nodeType": "YulBlock",
													"src": "24821:1303:17",
													"statements": [
														{
															"nativeSrc": "24832:51:17",
															"nodeType": "YulVariableDeclaration",
															"src": "24832:51:17",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "24879:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "24879:3:17"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "24846:32:17",
																	"nodeType": "YulIdentifier",
																	"src": "24846:32:17"
																},
																"nativeSrc": "24846:37:17",
																"nodeType": "YulFunctionCall",
																"src": "24846:37:17"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "24836:6:17",
																	"nodeType": "YulTypedName",
																	"src": "24836:6:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "24968:22:17",
																"nodeType": "YulBlock",
																"src": "24968:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "24970:16:17",
																				"nodeType": "YulIdentifier",
																				"src": "24970:16:17"
																			},
																			"nativeSrc": "24970:18:17",
																			"nodeType": "YulFunctionCall",
																			"src": "24970:18:17"
																		},
																		"nativeSrc": "24970:18:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "24970:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "24940:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "24940:6:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24948:18:17",
																		"nodeType": "YulLiteral",
																		"src": "24948:18:17",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "24937:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "24937:2:17"
																},
																"nativeSrc": "24937:30:17",
																"nodeType": "YulFunctionCall",
																"src": "24937:30:17"
															},
															"nativeSrc": "24934:56:17",
															"nodeType": "YulIf",
															"src": "24934:56:17"
														},
														{
															"nativeSrc": "25000:52:17",
															"nodeType": "YulVariableDeclaration",
															"src": "25000:52:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "25046:4:17",
																				"nodeType": "YulIdentifier",
																				"src": "25046:4:17"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "25040:5:17",
																			"nodeType": "YulIdentifier",
																			"src": "25040:5:17"
																		},
																		"nativeSrc": "25040:11:17",
																		"nodeType": "YulFunctionCall",
																		"src": "25040:11:17"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "25014:25:17",
																	"nodeType": "YulIdentifier",
																	"src": "25014:25:17"
																},
																"nativeSrc": "25014:38:17",
																"nodeType": "YulFunctionCall",
																"src": "25014:38:17"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "25004:6:17",
																	"nodeType": "YulTypedName",
																	"src": "25004:6:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "25145:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "25145:4:17"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "25151:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "25151:6:17"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "25159:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "25159:6:17"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "25099:45:17",
																	"nodeType": "YulIdentifier",
																	"src": "25099:45:17"
																},
																"nativeSrc": "25099:67:17",
																"nodeType": "YulFunctionCall",
																"src": "25099:67:17"
															},
															"nativeSrc": "25099:67:17",
															"nodeType": "YulExpressionStatement",
															"src": "25099:67:17"
														},
														{
															"nativeSrc": "25176:18:17",
															"nodeType": "YulVariableDeclaration",
															"src": "25176:18:17",
															"value": {
																"kind": "number",
																"nativeSrc": "25193:1:17",
																"nodeType": "YulLiteral",
																"src": "25193:1:17",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "25180:9:17",
																	"nodeType": "YulTypedName",
																	"src": "25180:9:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "25204:17:17",
															"nodeType": "YulAssignment",
															"src": "25204:17:17",
															"value": {
																"kind": "number",
																"nativeSrc": "25217:4:17",
																"nodeType": "YulLiteral",
																"src": "25217:4:17",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "25204:9:17",
																	"nodeType": "YulIdentifier",
																	"src": "25204:9:17"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "25268:611:17",
																		"nodeType": "YulBlock",
																		"src": "25268:611:17",
																		"statements": [
																			{
																				"nativeSrc": "25282:37:17",
																				"nodeType": "YulVariableDeclaration",
																				"src": "25282:37:17",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "25301:6:17",
																							"nodeType": "YulIdentifier",
																							"src": "25301:6:17"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "25313:4:17",
																									"nodeType": "YulLiteral",
																									"src": "25313:4:17",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "25309:3:17",
																								"nodeType": "YulIdentifier",
																								"src": "25309:3:17"
																							},
																							"nativeSrc": "25309:9:17",
																							"nodeType": "YulFunctionCall",
																							"src": "25309:9:17"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "25297:3:17",
																						"nodeType": "YulIdentifier",
																						"src": "25297:3:17"
																					},
																					"nativeSrc": "25297:22:17",
																					"nodeType": "YulFunctionCall",
																					"src": "25297:22:17"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "25286:7:17",
																						"nodeType": "YulTypedName",
																						"src": "25286:7:17",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "25333:51:17",
																				"nodeType": "YulVariableDeclaration",
																				"src": "25333:51:17",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "25379:4:17",
																							"nodeType": "YulIdentifier",
																							"src": "25379:4:17"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "25347:31:17",
																						"nodeType": "YulIdentifier",
																						"src": "25347:31:17"
																					},
																					"nativeSrc": "25347:37:17",
																					"nodeType": "YulFunctionCall",
																					"src": "25347:37:17"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "25337:6:17",
																						"nodeType": "YulTypedName",
																						"src": "25337:6:17",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "25397:10:17",
																				"nodeType": "YulVariableDeclaration",
																				"src": "25397:10:17",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "25406:1:17",
																					"nodeType": "YulLiteral",
																					"src": "25406:1:17",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "25401:1:17",
																						"nodeType": "YulTypedName",
																						"src": "25401:1:17",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "25465:163:17",
																					"nodeType": "YulBlock",
																					"src": "25465:163:17",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "25490:6:17",
																										"nodeType": "YulIdentifier",
																										"src": "25490:6:17"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "25508:3:17",
																														"nodeType": "YulIdentifier",
																														"src": "25508:3:17"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "25513:9:17",
																														"nodeType": "YulIdentifier",
																														"src": "25513:9:17"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "25504:3:17",
																													"nodeType": "YulIdentifier",
																													"src": "25504:3:17"
																												},
																												"nativeSrc": "25504:19:17",
																												"nodeType": "YulFunctionCall",
																												"src": "25504:19:17"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "25498:5:17",
																											"nodeType": "YulIdentifier",
																											"src": "25498:5:17"
																										},
																										"nativeSrc": "25498:26:17",
																										"nodeType": "YulFunctionCall",
																										"src": "25498:26:17"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "25483:6:17",
																									"nodeType": "YulIdentifier",
																									"src": "25483:6:17"
																								},
																								"nativeSrc": "25483:42:17",
																								"nodeType": "YulFunctionCall",
																								"src": "25483:42:17"
																							},
																							"nativeSrc": "25483:42:17",
																							"nodeType": "YulExpressionStatement",
																							"src": "25483:42:17"
																						},
																						{
																							"nativeSrc": "25542:24:17",
																							"nodeType": "YulAssignment",
																							"src": "25542:24:17",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "25556:6:17",
																										"nodeType": "YulIdentifier",
																										"src": "25556:6:17"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "25564:1:17",
																										"nodeType": "YulLiteral",
																										"src": "25564:1:17",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "25552:3:17",
																									"nodeType": "YulIdentifier",
																									"src": "25552:3:17"
																								},
																								"nativeSrc": "25552:14:17",
																								"nodeType": "YulFunctionCall",
																								"src": "25552:14:17"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "25542:6:17",
																									"nodeType": "YulIdentifier",
																									"src": "25542:6:17"
																								}
																							]
																						},
																						{
																							"nativeSrc": "25583:31:17",
																							"nodeType": "YulAssignment",
																							"src": "25583:31:17",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "25600:9:17",
																										"nodeType": "YulIdentifier",
																										"src": "25600:9:17"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "25611:2:17",
																										"nodeType": "YulLiteral",
																										"src": "25611:2:17",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "25596:3:17",
																									"nodeType": "YulIdentifier",
																									"src": "25596:3:17"
																								},
																								"nativeSrc": "25596:18:17",
																								"nodeType": "YulFunctionCall",
																								"src": "25596:18:17"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "25583:9:17",
																									"nodeType": "YulIdentifier",
																									"src": "25583:9:17"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "25431:1:17",
																							"nodeType": "YulIdentifier",
																							"src": "25431:1:17"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "25434:7:17",
																							"nodeType": "YulIdentifier",
																							"src": "25434:7:17"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "25428:2:17",
																						"nodeType": "YulIdentifier",
																						"src": "25428:2:17"
																					},
																					"nativeSrc": "25428:14:17",
																					"nodeType": "YulFunctionCall",
																					"src": "25428:14:17"
																				},
																				"nativeSrc": "25420:208:17",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "25443:21:17",
																					"nodeType": "YulBlock",
																					"src": "25443:21:17",
																					"statements": [
																						{
																							"nativeSrc": "25445:17:17",
																							"nodeType": "YulAssignment",
																							"src": "25445:17:17",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "25454:1:17",
																										"nodeType": "YulIdentifier",
																										"src": "25454:1:17"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "25457:4:17",
																										"nodeType": "YulLiteral",
																										"src": "25457:4:17",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "25450:3:17",
																									"nodeType": "YulIdentifier",
																									"src": "25450:3:17"
																								},
																								"nativeSrc": "25450:12:17",
																								"nodeType": "YulFunctionCall",
																								"src": "25450:12:17"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "25445:1:17",
																									"nodeType": "YulIdentifier",
																									"src": "25445:1:17"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "25424:3:17",
																					"nodeType": "YulBlock",
																					"src": "25424:3:17",
																					"statements": []
																				},
																				"src": "25420:208:17"
																			},
																			{
																				"body": {
																					"nativeSrc": "25664:156:17",
																					"nodeType": "YulBlock",
																					"src": "25664:156:17",
																					"statements": [
																						{
																							"nativeSrc": "25682:43:17",
																							"nodeType": "YulVariableDeclaration",
																							"src": "25682:43:17",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "25709:3:17",
																												"nodeType": "YulIdentifier",
																												"src": "25709:3:17"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "25714:9:17",
																												"nodeType": "YulIdentifier",
																												"src": "25714:9:17"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "25705:3:17",
																											"nodeType": "YulIdentifier",
																											"src": "25705:3:17"
																										},
																										"nativeSrc": "25705:19:17",
																										"nodeType": "YulFunctionCall",
																										"src": "25705:19:17"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "25699:5:17",
																									"nodeType": "YulIdentifier",
																									"src": "25699:5:17"
																								},
																								"nativeSrc": "25699:26:17",
																								"nodeType": "YulFunctionCall",
																								"src": "25699:26:17"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "25686:9:17",
																									"nodeType": "YulTypedName",
																									"src": "25686:9:17",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "25749:6:17",
																										"nodeType": "YulIdentifier",
																										"src": "25749:6:17"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "25776:9:17",
																												"nodeType": "YulIdentifier",
																												"src": "25776:9:17"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "25791:6:17",
																														"nodeType": "YulIdentifier",
																														"src": "25791:6:17"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "25799:4:17",
																														"nodeType": "YulLiteral",
																														"src": "25799:4:17",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "25787:3:17",
																													"nodeType": "YulIdentifier",
																													"src": "25787:3:17"
																												},
																												"nativeSrc": "25787:17:17",
																												"nodeType": "YulFunctionCall",
																												"src": "25787:17:17"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "25757:18:17",
																											"nodeType": "YulIdentifier",
																											"src": "25757:18:17"
																										},
																										"nativeSrc": "25757:48:17",
																										"nodeType": "YulFunctionCall",
																										"src": "25757:48:17"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "25742:6:17",
																									"nodeType": "YulIdentifier",
																									"src": "25742:6:17"
																								},
																								"nativeSrc": "25742:64:17",
																								"nodeType": "YulFunctionCall",
																								"src": "25742:64:17"
																							},
																							"nativeSrc": "25742:64:17",
																							"nodeType": "YulExpressionStatement",
																							"src": "25742:64:17"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "25647:7:17",
																							"nodeType": "YulIdentifier",
																							"src": "25647:7:17"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "25656:6:17",
																							"nodeType": "YulIdentifier",
																							"src": "25656:6:17"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "25644:2:17",
																						"nodeType": "YulIdentifier",
																						"src": "25644:2:17"
																					},
																					"nativeSrc": "25644:19:17",
																					"nodeType": "YulFunctionCall",
																					"src": "25644:19:17"
																				},
																				"nativeSrc": "25641:179:17",
																				"nodeType": "YulIf",
																				"src": "25641:179:17"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "25840:4:17",
																							"nodeType": "YulIdentifier",
																							"src": "25840:4:17"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "25854:6:17",
																											"nodeType": "YulIdentifier",
																											"src": "25854:6:17"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "25862:1:17",
																											"nodeType": "YulLiteral",
																											"src": "25862:1:17",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "25850:3:17",
																										"nodeType": "YulIdentifier",
																										"src": "25850:3:17"
																									},
																									"nativeSrc": "25850:14:17",
																									"nodeType": "YulFunctionCall",
																									"src": "25850:14:17"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "25866:1:17",
																									"nodeType": "YulLiteral",
																									"src": "25866:1:17",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "25846:3:17",
																								"nodeType": "YulIdentifier",
																								"src": "25846:3:17"
																							},
																							"nativeSrc": "25846:22:17",
																							"nodeType": "YulFunctionCall",
																							"src": "25846:22:17"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "25833:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "25833:6:17"
																					},
																					"nativeSrc": "25833:36:17",
																					"nodeType": "YulFunctionCall",
																					"src": "25833:36:17"
																				},
																				"nativeSrc": "25833:36:17",
																				"nodeType": "YulExpressionStatement",
																				"src": "25833:36:17"
																			}
																		]
																	},
																	"nativeSrc": "25261:618:17",
																	"nodeType": "YulCase",
																	"src": "25261:618:17",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "25266:1:17",
																		"nodeType": "YulLiteral",
																		"src": "25266:1:17",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "25896:222:17",
																		"nodeType": "YulBlock",
																		"src": "25896:222:17",
																		"statements": [
																			{
																				"nativeSrc": "25910:14:17",
																				"nodeType": "YulVariableDeclaration",
																				"src": "25910:14:17",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "25923:1:17",
																					"nodeType": "YulLiteral",
																					"src": "25923:1:17",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "25914:5:17",
																						"nodeType": "YulTypedName",
																						"src": "25914:5:17",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "25947:67:17",
																					"nodeType": "YulBlock",
																					"src": "25947:67:17",
																					"statements": [
																						{
																							"nativeSrc": "25965:35:17",
																							"nodeType": "YulAssignment",
																							"src": "25965:35:17",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "25984:3:17",
																												"nodeType": "YulIdentifier",
																												"src": "25984:3:17"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "25989:9:17",
																												"nodeType": "YulIdentifier",
																												"src": "25989:9:17"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "25980:3:17",
																											"nodeType": "YulIdentifier",
																											"src": "25980:3:17"
																										},
																										"nativeSrc": "25980:19:17",
																										"nodeType": "YulFunctionCall",
																										"src": "25980:19:17"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "25974:5:17",
																									"nodeType": "YulIdentifier",
																									"src": "25974:5:17"
																								},
																								"nativeSrc": "25974:26:17",
																								"nodeType": "YulFunctionCall",
																								"src": "25974:26:17"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "25965:5:17",
																									"nodeType": "YulIdentifier",
																									"src": "25965:5:17"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "25940:6:17",
																					"nodeType": "YulIdentifier",
																					"src": "25940:6:17"
																				},
																				"nativeSrc": "25937:77:17",
																				"nodeType": "YulIf",
																				"src": "25937:77:17"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "26034:4:17",
																							"nodeType": "YulIdentifier",
																							"src": "26034:4:17"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "26093:5:17",
																									"nodeType": "YulIdentifier",
																									"src": "26093:5:17"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "26100:6:17",
																									"nodeType": "YulIdentifier",
																									"src": "26100:6:17"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "26040:52:17",
																								"nodeType": "YulIdentifier",
																								"src": "26040:52:17"
																							},
																							"nativeSrc": "26040:67:17",
																							"nodeType": "YulFunctionCall",
																							"src": "26040:67:17"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "26027:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "26027:6:17"
																					},
																					"nativeSrc": "26027:81:17",
																					"nodeType": "YulFunctionCall",
																					"src": "26027:81:17"
																				},
																				"nativeSrc": "26027:81:17",
																				"nodeType": "YulExpressionStatement",
																				"src": "26027:81:17"
																			}
																		]
																	},
																	"nativeSrc": "25888:230:17",
																	"nodeType": "YulCase",
																	"src": "25888:230:17",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "25241:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "25241:6:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25249:2:17",
																		"nodeType": "YulLiteral",
																		"src": "25249:2:17",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "25238:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "25238:2:17"
																},
																"nativeSrc": "25238:14:17",
																"nodeType": "YulFunctionCall",
																"src": "25238:14:17"
															},
															"nativeSrc": "25231:887:17",
															"nodeType": "YulSwitch",
															"src": "25231:887:17"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "24729:1395:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "24810:4:17",
														"nodeType": "YulTypedName",
														"src": "24810:4:17",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "24816:3:17",
														"nodeType": "YulTypedName",
														"src": "24816:3:17",
														"type": ""
													}
												],
												"src": "24729:1395:17"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_string_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encodeUpdatedPos_t_string_memory_ptr_to_t_string_memory_ptr(value0, pos) -> updatedPos {\n        updatedPos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(value0, pos)\n    }\n\n    function array_nextElement_t_array$_t_string_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // string[] -> string[]\n    function abi_encode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let headStart := pos\n        let tail := add(pos, mul(length, 0x20))\n        let baseRef := array_dataslot_t_array$_t_string_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, sub(tail, headStart))\n            let elementValue0 := mload(srcPtr)\n            tail := abi_encodeUpdatedPos_t_string_memory_ptr_to_t_string_memory_ptr(elementValue0, tail)\n            srcPtr := array_nextElement_t_array$_t_string_memory_ptr_$dyn_memory_ptr(srcPtr)\n            pos := add(pos, 0x20)\n        }\n        pos := tail\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_string_memory_ptr_$dyn_memory_ptr__to_t_array$_t_string_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_allocation_size_t_array$_t_string_memory_ptr_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    // string[]\n    function abi_decode_available_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_string_memory_ptr_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let innerOffset := calldataload(src)\n            if gt(innerOffset, 0xffffffffffffffff) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n            let elementPos := add(offset, innerOffset)\n\n            mstore(dst, abi_decode_t_string_memory_ptr(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // string[]\n    function abi_decode_t_array$_t_string_memory_ptr_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_string_memory_ptr_$dyn_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_string_memory_ptr_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x31() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 17,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610140575f3560e01c806370a08231116100b6578063a22cb4651161007a578063a22cb46514610374578063b88d4fde14610390578063c87b56dd146103ac578063e3d61eb3146103dc578063e985e9c5146103f8578063f2fde38b1461042857610140565b806370a08231146102e2578063715018a6146103125780638da5cb5b1461031c57806395d89b411461033a578063a14481941461035857610140565b806323b872dd1161010857806323b872dd146101fc5780632f745c591461021857806342842e0e146102485780634bb30912146102645780634f6ccce7146102825780636352211e146102b257610140565b806301ffc9a71461014457806306fdde0314610174578063081812fc14610192578063095ea7b3146101c257806318160ddd146101de575b5f80fd5b61015e6004803603810190610159919061215e565b610444565b60405161016b91906121a3565b60405180910390f35b61017c610465565b6040516101899190612246565b60405180910390f35b6101ac60048036038101906101a79190612299565b6104f5565b6040516101b99190612303565b60405180910390f35b6101dc60048036038101906101d79190612346565b610510565b005b6101e6610526565b6040516101f39190612393565b60405180910390f35b610216600480360381019061021191906123ac565b610532565b005b610232600480360381019061022d9190612346565b610631565b60405161023f9190612393565b60405180910390f35b610262600480360381019061025d91906123ac565b6106d5565b005b61026c6106f4565b60405161027991906124ff565b60405180910390f35b61029c60048036038101906102979190612299565b6107c8565b6040516102a99190612393565b60405180910390f35b6102cc60048036038101906102c79190612299565b61083a565b6040516102d99190612303565b60405180910390f35b6102fc60048036038101906102f7919061251f565b61084b565b6040516103099190612393565b60405180910390f35b61031a610901565b005b610324610914565b6040516103319190612303565b60405180910390f35b61034261093b565b60405161034f9190612246565b60405180910390f35b610372600480360381019061036d9190612346565b6109cb565b005b61038e60048036038101906103899190612574565b6109e1565b005b6103aa60048036038101906103a591906126de565b6109f7565b005b6103c660048036038101906103c19190612299565b610a14565b6040516103d39190612246565b60405180910390f35b6103f660048036038101906103f191906128de565b610a7a565b005b610412600480360381019061040d9190612925565b610ad4565b60405161041f91906121a3565b60405180910390f35b610442600480360381019061043d919061251f565b610b62565b005b5f61044e82610be6565b8061045e575061045d82610c5f565b5b9050919050565b60606002805461047490612990565b80601f01602080910402602001604051908101604052809291908181526020018280546104a090612990565b80156104eb5780601f106104c2576101008083540402835291602001916104eb565b820191905f5260205f20905b8154815290600101906020018083116104ce57829003601f168201915b5050505050905090565b5f6104ff82610cc8565b5061050982610d4e565b9050919050565b610522828261051d610d87565b610d8e565b5050565b5f600a80549050905090565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036105a2575f6040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016105999190612303565b60405180910390fd5b5f6105b583836105b0610d87565b610da0565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461062b578382826040517f64283d7b000000000000000000000000000000000000000000000000000000008152600401610622939291906129c0565b60405180910390fd5b50505050565b5f61063b8361084b565b82106106805782826040517fa57d13dc0000000000000000000000000000000000000000000000000000000081526004016106779291906129f5565b60405180910390fd5b60085f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8381526020019081526020015f2054905092915050565b6106ef83838360405180602001604052805f8152506109f7565b505050565b60606001805480602002602001604051908101604052809291908181526020015f905b828210156107bf578382905f5260205f2001805461073490612990565b80601f016020809104026020016040519081016040528092919081815260200182805461076090612990565b80156107ab5780601f10610782576101008083540402835291602001916107ab565b820191905f5260205f20905b81548152906001019060200180831161078e57829003601f168201915b505050505081526020019060010190610717565b50505050905090565b5f6107d1610526565b8210610816575f826040517fa57d13dc00000000000000000000000000000000000000000000000000000000815260040161080d9291906129f5565b60405180910390fd5b600a828154811061082a57610829612a1c565b5b905f5260205f2001549050919050565b5f61084482610cc8565b9050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108bc575f6040517f89c62b640000000000000000000000000000000000000000000000000000000081526004016108b39190612303565b60405180910390fd5b60055f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610909610eba565b6109125f610f41565b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606003805461094a90612990565b80601f016020809104026020016040519081016040528092919081815260200182805461097690612990565b80156109c15780601f10610998576101008083540402835291602001916109c1565b820191905f5260205f20905b8154815290600101906020018083116109a457829003601f168201915b5050505050905090565b6109d3610eba565b6109dd8282611002565b5050565b6109f36109ec610d87565b838361101f565b5050565b610a02848484610532565b610a0e84848484611188565b50505050565b6060610a1f82610cc8565b505f610a2961133a565b90505f815111610a475760405180602001604052805f815250610a72565b80610a5184611350565b604051602001610a62929190612a83565b6040516020818303038152906040525b915050919050565b610a838161141a565b8060019080519060200190610a99929190612026565b507f9538911740e5519a40db77fb5f637de0d56cdd804318d81ae270cc24fbd8479e81604051610ac991906124ff565b60405180910390a150565b5f60075f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b610b6a610eba565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610bda575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610bd19190612303565b60405180910390fd5b610be381610f41565b50565b5f7f780e9d63000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610c585750610c5782611425565b5b9050919050565b5f7fa86517a1000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f80610cd383611506565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610d4557826040517f7e273289000000000000000000000000000000000000000000000000000000008152600401610d3c9190612393565b60405180910390fd5b80915050919050565b5f60065f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b5f33905090565b610d9b838383600161153f565b505050565b5f80610dad8585856116fe565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610df057610deb84611909565b610e2f565b8473ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610e2e57610e2d818561194d565b5b5b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603610e7057610e6b84611a97565b610eaf565b8473ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610eae57610ead8585611b57565b5b5b809150509392505050565b610ec2610d87565b73ffffffffffffffffffffffffffffffffffffffff16610ee0610914565b73ffffffffffffffffffffffffffffffffffffffff1614610f3f57610f03610d87565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610f369190612303565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b61101b828260405180602001604052805f815250611bdb565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361108f57816040517f5b08ba180000000000000000000000000000000000000000000000000000000081526004016110869190612303565b60405180910390fd5b8060075f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405161117b91906121a3565b60405180910390a3505050565b5f8373ffffffffffffffffffffffffffffffffffffffff163b1115611334578273ffffffffffffffffffffffffffffffffffffffff1663150b7a026111cb610d87565b8685856040518563ffffffff1660e01b81526004016111ed9493929190612af8565b6020604051808303815f875af192505050801561122857506040513d601f19601f820116820180604052508101906112259190612b56565b60015b6112a9573d805f8114611256576040519150601f19603f3d011682016040523d82523d5f602084013e61125b565b606091505b505f8151036112a157836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016112989190612303565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461133257836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016113299190612303565b60405180910390fd5b505b50505050565b606060405180602001604052805f815250905090565b60605f600161135e84611bf6565b0190505f8167ffffffffffffffff81111561137c5761137b6125ba565b5b6040519080825280601f01601f1916602001820160405280156113ae5781602001600182028036833780820191505090505b5090505f82602001820190505b60011561140f578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a858161140457611403612b81565b5b0494505f85036113bb575b819350505050919050565b611422610eba565b50565b5f7f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806114ef57507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806114ff57506114fe82611d47565b5b9050919050565b5f60045f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b808061157757505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b156116a9575f61158684610cc8565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156115f057508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b801561160357506116018184610ad4565b155b1561164557826040517fa9fbf51f00000000000000000000000000000000000000000000000000000000815260040161163c9190612303565b60405180910390fd5b81156116a757838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b8360065f8581526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b5f8061170984611506565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161461174a57611749818486611db0565b5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146117d5576117895f855f8061153f565b600160055f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825403925050819055505b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161461185457600160055f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8460045f8681526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b600a80549050600b5f8381526020019081526020015f2081905550600a81908060018154018082558091505060019003905f5260205f20015f909190919091505550565b5f6119578361084b565b90505f60095f8481526020019081526020015f20549050818114611a2e575f60085f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8481526020019081526020015f205490508060085f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8481526020019081526020015f20819055508160095f8381526020019081526020015f2081905550505b60095f8481526020019081526020015f205f905560085f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8381526020019081526020015f205f905550505050565b5f6001600a80549050611aaa9190612bdb565b90505f600b5f8481526020019081526020015f205490505f600a8381548110611ad657611ad5612a1c565b5b905f5260205f200154905080600a8381548110611af657611af5612a1c565b5b905f5260205f20018190555081600b5f8381526020019081526020015f2081905550600b5f8581526020019081526020015f205f9055600a805480611b3e57611b3d612c0e565b5b600190038181905f5260205f20015f9055905550505050565b5f6001611b638461084b565b611b6d9190612bdb565b90508160085f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8381526020019081526020015f20819055508060095f8481526020019081526020015f2081905550505050565b611be58383611e73565b611bf15f848484611188565b505050565b5f805f90507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611c52577a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008381611c4857611c47612b81565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310611c8f576d04ee2d6d415b85acef81000000008381611c8557611c84612b81565b5b0492506020810190505b662386f26fc100008310611cbe57662386f26fc100008381611cb457611cb3612b81565b5b0492506010810190505b6305f5e1008310611ce7576305f5e1008381611cdd57611cdc612b81565b5b0492506008810190505b6127108310611d0c576127108381611d0257611d01612b81565b5b0492506004810190505b60648310611d2f5760648381611d2557611d24612b81565b5b0492506002810190505b600a8310611d3e576001810190505b80915050919050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b611dbb838383611f66565b611e6e575f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611e2f57806040517f7e273289000000000000000000000000000000000000000000000000000000008152600401611e269190612393565b60405180910390fd5b81816040517f177e802f000000000000000000000000000000000000000000000000000000008152600401611e659291906129f5565b60405180910390fd5b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611ee3575f6040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401611eda9190612303565b60405180910390fd5b5f611eef83835f610da0565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611f61575f6040517f73c6ac6e000000000000000000000000000000000000000000000000000000008152600401611f589190612303565b60405180910390fd5b505050565b5f8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561201d57508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480611fde5750611fdd8484610ad4565b5b8061201c57508273ffffffffffffffffffffffffffffffffffffffff1661200483610d4e565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b828054828255905f5260205f2090810192821561206c579160200282015b8281111561206b57825182908161205b9190612dd8565b5091602001919060010190612044565b5b509050612079919061207d565b5090565b5b8082111561209c575f818161209391906120a0565b5060010161207e565b5090565b5080546120ac90612990565b5f825580601f106120bd57506120da565b601f0160209004905f5260205f20908101906120d991906120dd565b5b50565b5b808211156120f4575f815f9055506001016120de565b5090565b5f604051905090565b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61213d81612109565b8114612147575f80fd5b50565b5f8135905061215881612134565b92915050565b5f6020828403121561217357612172612101565b5b5f6121808482850161214a565b91505092915050565b5f8115159050919050565b61219d81612189565b82525050565b5f6020820190506121b65f830184612194565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b838110156121f35780820151818401526020810190506121d8565b5f8484015250505050565b5f601f19601f8301169050919050565b5f612218826121bc565b61222281856121c6565b93506122328185602086016121d6565b61223b816121fe565b840191505092915050565b5f6020820190508181035f83015261225e818461220e565b905092915050565b5f819050919050565b61227881612266565b8114612282575f80fd5b50565b5f813590506122938161226f565b92915050565b5f602082840312156122ae576122ad612101565b5b5f6122bb84828501612285565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6122ed826122c4565b9050919050565b6122fd816122e3565b82525050565b5f6020820190506123165f8301846122f4565b92915050565b612325816122e3565b811461232f575f80fd5b50565b5f813590506123408161231c565b92915050565b5f806040838503121561235c5761235b612101565b5b5f61236985828601612332565b925050602061237a85828601612285565b9150509250929050565b61238d81612266565b82525050565b5f6020820190506123a65f830184612384565b92915050565b5f805f606084860312156123c3576123c2612101565b5b5f6123d086828701612332565b93505060206123e186828701612332565b92505060406123f286828701612285565b9150509250925092565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b5f82825260208201905092915050565b5f61243f826121bc565b6124498185612425565b93506124598185602086016121d6565b612462816121fe565b840191505092915050565b5f6124788383612435565b905092915050565b5f602082019050919050565b5f612496826123fc565b6124a08185612406565b9350836020820285016124b285612416565b805f5b858110156124ed57848403895281516124ce858261246d565b94506124d983612480565b925060208a019950506001810190506124b5565b50829750879550505050505092915050565b5f6020820190508181035f830152612517818461248c565b905092915050565b5f6020828403121561253457612533612101565b5b5f61254184828501612332565b91505092915050565b61255381612189565b811461255d575f80fd5b50565b5f8135905061256e8161254a565b92915050565b5f806040838503121561258a57612589612101565b5b5f61259785828601612332565b92505060206125a885828601612560565b9150509250929050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6125f0826121fe565b810181811067ffffffffffffffff8211171561260f5761260e6125ba565b5b80604052505050565b5f6126216120f8565b905061262d82826125e7565b919050565b5f67ffffffffffffffff82111561264c5761264b6125ba565b5b612655826121fe565b9050602081019050919050565b828183375f83830152505050565b5f61268261267d84612632565b612618565b90508281526020810184848401111561269e5761269d6125b6565b5b6126a9848285612662565b509392505050565b5f82601f8301126126c5576126c46125b2565b5b81356126d5848260208601612670565b91505092915050565b5f805f80608085870312156126f6576126f5612101565b5b5f61270387828801612332565b945050602061271487828801612332565b935050604061272587828801612285565b925050606085013567ffffffffffffffff81111561274657612745612105565b5b612752878288016126b1565b91505092959194509250565b5f67ffffffffffffffff821115612778576127776125ba565b5b602082029050602081019050919050565b5f80fd5b5f67ffffffffffffffff8211156127a7576127a66125ba565b5b6127b0826121fe565b9050602081019050919050565b5f6127cf6127ca8461278d565b612618565b9050828152602081018484840111156127eb576127ea6125b6565b5b6127f6848285612662565b509392505050565b5f82601f830112612812576128116125b2565b5b81356128228482602086016127bd565b91505092915050565b5f61283d6128388461275e565b612618565b905080838252602082019050602084028301858111156128605761285f612789565b5b835b818110156128a757803567ffffffffffffffff811115612885576128846125b2565b5b80860161289289826127fe565b85526020850194505050602081019050612862565b5050509392505050565b5f82601f8301126128c5576128c46125b2565b5b81356128d584826020860161282b565b91505092915050565b5f602082840312156128f3576128f2612101565b5b5f82013567ffffffffffffffff8111156129105761290f612105565b5b61291c848285016128b1565b91505092915050565b5f806040838503121561293b5761293a612101565b5b5f61294885828601612332565b925050602061295985828601612332565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806129a757607f821691505b6020821081036129ba576129b9612963565b5b50919050565b5f6060820190506129d35f8301866122f4565b6129e06020830185612384565b6129ed60408301846122f4565b949350505050565b5f604082019050612a085f8301856122f4565b612a156020830184612384565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f81905092915050565b5f612a5d826121bc565b612a678185612a49565b9350612a778185602086016121d6565b80840191505092915050565b5f612a8e8285612a53565b9150612a9a8284612a53565b91508190509392505050565b5f81519050919050565b5f82825260208201905092915050565b5f612aca82612aa6565b612ad48185612ab0565b9350612ae48185602086016121d6565b612aed816121fe565b840191505092915050565b5f608082019050612b0b5f8301876122f4565b612b1860208301866122f4565b612b256040830185612384565b8181036060830152612b378184612ac0565b905095945050505050565b5f81519050612b5081612134565b92915050565b5f60208284031215612b6b57612b6a612101565b5b5f612b7884828501612b42565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f612be582612266565b9150612bf083612266565b9250828203905081811115612c0857612c07612bae565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603160045260245ffd5b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302612c977fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82612c5c565b612ca18683612c5c565b95508019841693508086168417925050509392505050565b5f819050919050565b5f612cdc612cd7612cd284612266565b612cb9565b612266565b9050919050565b5f819050919050565b612cf583612cc2565b612d09612d0182612ce3565b848454612c68565b825550505050565b5f90565b612d1d612d11565b612d28818484612cec565b505050565b5b81811015612d4b57612d405f82612d15565b600181019050612d2e565b5050565b601f821115612d9057612d6181612c3b565b612d6a84612c4d565b81016020851015612d79578190505b612d8d612d8585612c4d565b830182612d2d565b50505b505050565b5f82821c905092915050565b5f612db05f1984600802612d95565b1980831691505092915050565b5f612dc88383612da1565b9150826002028217905092915050565b612de1826121bc565b67ffffffffffffffff811115612dfa57612df96125ba565b5b612e048254612990565b612e0f828285612d4f565b5f60209050601f831160018114612e40575f8415612e2e578287015190505b612e388582612dbd565b865550612e9f565b601f198416612e4e86612c3b565b5f5b82811015612e7557848901518255600182019150602085019450602081019050612e50565b86831015612e925784890151612e8e601f891682612da1565b8355505b6001600288020188555050505b50505050505056fea2646970667358221220e06809d39f80a7006582920d1d879ae3c27af9cb995beca63c3b95262bd5dd3264736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x140 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xB6 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x374 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x390 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x3AC JUMPI DUP1 PUSH4 0xE3D61EB3 EQ PUSH2 0x3DC JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x3F8 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x428 JUMPI PUSH2 0x140 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2E2 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x312 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x31C JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x33A JUMPI DUP1 PUSH4 0xA1448194 EQ PUSH2 0x358 JUMPI PUSH2 0x140 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x108 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0x2F745C59 EQ PUSH2 0x218 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x248 JUMPI DUP1 PUSH4 0x4BB30912 EQ PUSH2 0x264 JUMPI DUP1 PUSH4 0x4F6CCCE7 EQ PUSH2 0x282 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x2B2 JUMPI PUSH2 0x140 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x144 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x174 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x192 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1C2 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1DE JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x15E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x159 SWAP2 SWAP1 PUSH2 0x215E JUMP JUMPDEST PUSH2 0x444 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16B SWAP2 SWAP1 PUSH2 0x21A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17C PUSH2 0x465 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x189 SWAP2 SWAP1 PUSH2 0x2246 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A7 SWAP2 SWAP1 PUSH2 0x2299 JUMP JUMPDEST PUSH2 0x4F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B9 SWAP2 SWAP1 PUSH2 0x2303 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D7 SWAP2 SWAP1 PUSH2 0x2346 JUMP JUMPDEST PUSH2 0x510 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E6 PUSH2 0x526 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F3 SWAP2 SWAP1 PUSH2 0x2393 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x216 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x211 SWAP2 SWAP1 PUSH2 0x23AC JUMP JUMPDEST PUSH2 0x532 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x232 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22D SWAP2 SWAP1 PUSH2 0x2346 JUMP JUMPDEST PUSH2 0x631 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23F SWAP2 SWAP1 PUSH2 0x2393 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x262 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25D SWAP2 SWAP1 PUSH2 0x23AC JUMP JUMPDEST PUSH2 0x6D5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x26C PUSH2 0x6F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x279 SWAP2 SWAP1 PUSH2 0x24FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x297 SWAP2 SWAP1 PUSH2 0x2299 JUMP JUMPDEST PUSH2 0x7C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A9 SWAP2 SWAP1 PUSH2 0x2393 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C7 SWAP2 SWAP1 PUSH2 0x2299 JUMP JUMPDEST PUSH2 0x83A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D9 SWAP2 SWAP1 PUSH2 0x2303 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F7 SWAP2 SWAP1 PUSH2 0x251F JUMP JUMPDEST PUSH2 0x84B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x309 SWAP2 SWAP1 PUSH2 0x2393 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31A PUSH2 0x901 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x324 PUSH2 0x914 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x331 SWAP2 SWAP1 PUSH2 0x2303 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x342 PUSH2 0x93B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34F SWAP2 SWAP1 PUSH2 0x2246 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x372 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x36D SWAP2 SWAP1 PUSH2 0x2346 JUMP JUMPDEST PUSH2 0x9CB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x38E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x389 SWAP2 SWAP1 PUSH2 0x2574 JUMP JUMPDEST PUSH2 0x9E1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3AA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A5 SWAP2 SWAP1 PUSH2 0x26DE JUMP JUMPDEST PUSH2 0x9F7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3C6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C1 SWAP2 SWAP1 PUSH2 0x2299 JUMP JUMPDEST PUSH2 0xA14 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D3 SWAP2 SWAP1 PUSH2 0x2246 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F1 SWAP2 SWAP1 PUSH2 0x28DE JUMP JUMPDEST PUSH2 0xA7A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x412 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x40D SWAP2 SWAP1 PUSH2 0x2925 JUMP JUMPDEST PUSH2 0xAD4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x41F SWAP2 SWAP1 PUSH2 0x21A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x442 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x43D SWAP2 SWAP1 PUSH2 0x251F JUMP JUMPDEST PUSH2 0xB62 JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH2 0x44E DUP3 PUSH2 0xBE6 JUMP JUMPDEST DUP1 PUSH2 0x45E JUMPI POP PUSH2 0x45D DUP3 PUSH2 0xC5F JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x474 SWAP1 PUSH2 0x2990 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4A0 SWAP1 PUSH2 0x2990 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4EB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4C2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4EB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4CE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x4FF DUP3 PUSH2 0xCC8 JUMP JUMPDEST POP PUSH2 0x509 DUP3 PUSH2 0xD4E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x522 DUP3 DUP3 PUSH2 0x51D PUSH2 0xD87 JUMP JUMPDEST PUSH2 0xD8E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5A2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x599 SWAP2 SWAP1 PUSH2 0x2303 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x5B5 DUP4 DUP4 PUSH2 0x5B0 PUSH2 0xD87 JUMP JUMPDEST PUSH2 0xDA0 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x62B JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x622 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x29C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x63B DUP4 PUSH2 0x84B JUMP JUMPDEST DUP3 LT PUSH2 0x680 JUMPI DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0xA57D13DC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x677 SWAP3 SWAP2 SWAP1 PUSH2 0x29F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6EF DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x9F7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x7BF JUMPI DUP4 DUP3 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD DUP1 SLOAD PUSH2 0x734 SWAP1 PUSH2 0x2990 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x760 SWAP1 PUSH2 0x2990 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7AB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x782 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7AB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x78E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x717 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x7D1 PUSH2 0x526 JUMP JUMPDEST DUP3 LT PUSH2 0x816 JUMPI PUSH0 DUP3 PUSH1 0x40 MLOAD PUSH32 0xA57D13DC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x80D SWAP3 SWAP2 SWAP1 PUSH2 0x29F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x82A JUMPI PUSH2 0x829 PUSH2 0x2A1C JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x844 DUP3 PUSH2 0xCC8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8BC JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8B3 SWAP2 SWAP1 PUSH2 0x2303 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x909 PUSH2 0xEBA JUMP JUMPDEST PUSH2 0x912 PUSH0 PUSH2 0xF41 JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x94A SWAP1 PUSH2 0x2990 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x976 SWAP1 PUSH2 0x2990 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x9C1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x998 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x9C1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x9A4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x9D3 PUSH2 0xEBA JUMP JUMPDEST PUSH2 0x9DD DUP3 DUP3 PUSH2 0x1002 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x9F3 PUSH2 0x9EC PUSH2 0xD87 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x101F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xA02 DUP5 DUP5 DUP5 PUSH2 0x532 JUMP JUMPDEST PUSH2 0xA0E DUP5 DUP5 DUP5 DUP5 PUSH2 0x1188 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xA1F DUP3 PUSH2 0xCC8 JUMP JUMPDEST POP PUSH0 PUSH2 0xA29 PUSH2 0x133A JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0xA47 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0xA72 JUMP JUMPDEST DUP1 PUSH2 0xA51 DUP5 PUSH2 0x1350 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xA62 SWAP3 SWAP2 SWAP1 PUSH2 0x2A83 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA83 DUP2 PUSH2 0x141A JUMP JUMPDEST DUP1 PUSH1 0x1 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0xA99 SWAP3 SWAP2 SWAP1 PUSH2 0x2026 JUMP JUMPDEST POP PUSH32 0x9538911740E5519A40DB77FB5F637DE0D56CDD804318D81AE270CC24FBD8479E DUP2 PUSH1 0x40 MLOAD PUSH2 0xAC9 SWAP2 SWAP1 PUSH2 0x24FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xB6A PUSH2 0xEBA JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBDA JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBD1 SWAP2 SWAP1 PUSH2 0x2303 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBE3 DUP2 PUSH2 0xF41 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH32 0x780E9D6300000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0xC58 JUMPI POP PUSH2 0xC57 DUP3 PUSH2 0x1425 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH32 0xA86517A100000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xCD3 DUP4 PUSH2 0x1506 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD45 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD3C SWAP2 SWAP1 PUSH2 0x2393 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xD9B DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x153F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xDAD DUP6 DUP6 DUP6 PUSH2 0x16FE JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDF0 JUMPI PUSH2 0xDEB DUP5 PUSH2 0x1909 JUMP JUMPDEST PUSH2 0xE2F JUMP JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE2E JUMPI PUSH2 0xE2D DUP2 DUP6 PUSH2 0x194D JUMP JUMPDEST JUMPDEST JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE70 JUMPI PUSH2 0xE6B DUP5 PUSH2 0x1A97 JUMP JUMPDEST PUSH2 0xEAF JUMP JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xEAE JUMPI PUSH2 0xEAD DUP6 DUP6 PUSH2 0x1B57 JUMP JUMPDEST JUMPDEST JUMPDEST DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xEC2 PUSH2 0xD87 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xEE0 PUSH2 0x914 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF3F JUMPI PUSH2 0xF03 PUSH2 0xD87 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF36 SWAP2 SWAP1 PUSH2 0x2303 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x101B DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x1BDB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x108F JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1086 SWAP2 SWAP1 PUSH2 0x2303 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x117B SWAP2 SWAP1 PUSH2 0x21A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x1334 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x11CB PUSH2 0xD87 JUMP JUMPDEST DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11ED SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2AF8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1228 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1225 SWAP2 SWAP1 PUSH2 0x2B56 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x12A9 JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1256 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x125B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x12A1 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1298 SWAP2 SWAP1 PUSH2 0x2303 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1332 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1329 SWAP2 SWAP1 PUSH2 0x2303 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x1 PUSH2 0x135E DUP5 PUSH2 0x1BF6 JUMP JUMPDEST ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x137C JUMPI PUSH2 0x137B PUSH2 0x25BA JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x13AE JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x140F JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x1404 JUMPI PUSH2 0x1403 PUSH2 0x2B81 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH0 DUP6 SUB PUSH2 0x13BB JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1422 PUSH2 0xEBA JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x14EF JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x14FF JUMPI POP PUSH2 0x14FE DUP3 PUSH2 0x1D47 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1577 JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x16A9 JUMPI PUSH0 PUSH2 0x1586 DUP5 PUSH2 0xCC8 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x15F0 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1603 JUMPI POP PUSH2 0x1601 DUP2 DUP5 PUSH2 0xAD4 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x1645 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x163C SWAP2 SWAP1 PUSH2 0x2303 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x16A7 JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x6 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x1709 DUP5 PUSH2 0x1506 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x174A JUMPI PUSH2 0x1749 DUP2 DUP5 DUP7 PUSH2 0x1DB0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x17D5 JUMPI PUSH2 0x1789 PUSH0 DUP6 PUSH0 DUP1 PUSH2 0x153F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x5 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1854 JUMPI PUSH1 0x1 PUSH1 0x5 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x4 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD SWAP1 POP PUSH1 0xB PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0xA DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1957 DUP4 PUSH2 0x84B JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x9 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 EQ PUSH2 0x1A2E JUMPI PUSH0 PUSH1 0x8 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP1 PUSH1 0x8 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x9 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x9 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SSTORE PUSH1 0x8 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0xA DUP1 SLOAD SWAP1 POP PUSH2 0x1AAA SWAP2 SWAP1 PUSH2 0x2BDB JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0xB PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 PUSH1 0xA DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1AD6 JUMPI PUSH2 0x1AD5 PUSH2 0x2A1C JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 PUSH1 0xA DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1AF6 JUMPI PUSH2 0x1AF5 PUSH2 0x2A1C JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0xB PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0xB PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SSTORE PUSH1 0xA DUP1 SLOAD DUP1 PUSH2 0x1B3E JUMPI PUSH2 0x1B3D PUSH2 0x2C0E JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SSTORE SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH2 0x1B63 DUP5 PUSH2 0x84B JUMP JUMPDEST PUSH2 0x1B6D SWAP2 SWAP1 PUSH2 0x2BDB JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x8 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x9 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH2 0x1BE5 DUP4 DUP4 PUSH2 0x1E73 JUMP JUMPDEST PUSH2 0x1BF1 PUSH0 DUP5 DUP5 DUP5 PUSH2 0x1188 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x1C52 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x1C48 JUMPI PUSH2 0x1C47 PUSH2 0x2B81 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1C8F JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x1C85 JUMPI PUSH2 0x1C84 PUSH2 0x2B81 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x1CBE JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x1CB4 JUMPI PUSH2 0x1CB3 PUSH2 0x2B81 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1CE7 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x1CDD JUMPI PUSH2 0x1CDC PUSH2 0x2B81 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1D0C JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x1D02 JUMPI PUSH2 0x1D01 PUSH2 0x2B81 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x1D2F JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1D25 JUMPI PUSH2 0x1D24 PUSH2 0x2B81 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x1D3E JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DBB DUP4 DUP4 DUP4 PUSH2 0x1F66 JUMP JUMPDEST PUSH2 0x1E6E JUMPI PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1E2F JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E26 SWAP2 SWAP1 PUSH2 0x2393 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E65 SWAP3 SWAP2 SWAP1 PUSH2 0x29F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1EE3 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1EDA SWAP2 SWAP1 PUSH2 0x2303 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x1EEF DUP4 DUP4 PUSH0 PUSH2 0xDA0 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1F61 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F58 SWAP2 SWAP1 PUSH2 0x2303 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x201D JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1FDE JUMPI POP PUSH2 0x1FDD DUP5 DUP5 PUSH2 0xAD4 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x201C JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2004 DUP4 PUSH2 0xD4E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x206C JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x206B JUMPI DUP3 MLOAD DUP3 SWAP1 DUP2 PUSH2 0x205B SWAP2 SWAP1 PUSH2 0x2DD8 JUMP JUMPDEST POP SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x2044 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x2079 SWAP2 SWAP1 PUSH2 0x207D JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x209C JUMPI PUSH0 DUP2 DUP2 PUSH2 0x2093 SWAP2 SWAP1 PUSH2 0x20A0 JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x207E JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST POP DUP1 SLOAD PUSH2 0x20AC SWAP1 PUSH2 0x2990 JUMP JUMPDEST PUSH0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH2 0x20BD JUMPI POP PUSH2 0x20DA JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x20D9 SWAP2 SWAP1 PUSH2 0x20DD JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x20F4 JUMPI PUSH0 DUP2 PUSH0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x20DE JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x213D DUP2 PUSH2 0x2109 JUMP JUMPDEST DUP2 EQ PUSH2 0x2147 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2158 DUP2 PUSH2 0x2134 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2173 JUMPI PUSH2 0x2172 PUSH2 0x2101 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2180 DUP5 DUP3 DUP6 ADD PUSH2 0x214A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x219D DUP2 PUSH2 0x2189 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x21B6 PUSH0 DUP4 ADD DUP5 PUSH2 0x2194 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x21F3 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x21D8 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2218 DUP3 PUSH2 0x21BC JUMP JUMPDEST PUSH2 0x2222 DUP2 DUP6 PUSH2 0x21C6 JUMP JUMPDEST SWAP4 POP PUSH2 0x2232 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x21D6 JUMP JUMPDEST PUSH2 0x223B DUP2 PUSH2 0x21FE JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x225E DUP2 DUP5 PUSH2 0x220E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2278 DUP2 PUSH2 0x2266 JUMP JUMPDEST DUP2 EQ PUSH2 0x2282 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2293 DUP2 PUSH2 0x226F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x22AE JUMPI PUSH2 0x22AD PUSH2 0x2101 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x22BB DUP5 DUP3 DUP6 ADD PUSH2 0x2285 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x22ED DUP3 PUSH2 0x22C4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x22FD DUP2 PUSH2 0x22E3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2316 PUSH0 DUP4 ADD DUP5 PUSH2 0x22F4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2325 DUP2 PUSH2 0x22E3 JUMP JUMPDEST DUP2 EQ PUSH2 0x232F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2340 DUP2 PUSH2 0x231C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x235C JUMPI PUSH2 0x235B PUSH2 0x2101 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2369 DUP6 DUP3 DUP7 ADD PUSH2 0x2332 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x237A DUP6 DUP3 DUP7 ADD PUSH2 0x2285 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x238D DUP2 PUSH2 0x2266 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x23A6 PUSH0 DUP4 ADD DUP5 PUSH2 0x2384 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x23C3 JUMPI PUSH2 0x23C2 PUSH2 0x2101 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x23D0 DUP7 DUP3 DUP8 ADD PUSH2 0x2332 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x23E1 DUP7 DUP3 DUP8 ADD PUSH2 0x2332 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x23F2 DUP7 DUP3 DUP8 ADD PUSH2 0x2285 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x243F DUP3 PUSH2 0x21BC JUMP JUMPDEST PUSH2 0x2449 DUP2 DUP6 PUSH2 0x2425 JUMP JUMPDEST SWAP4 POP PUSH2 0x2459 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x21D6 JUMP JUMPDEST PUSH2 0x2462 DUP2 PUSH2 0x21FE JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2478 DUP4 DUP4 PUSH2 0x2435 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2496 DUP3 PUSH2 0x23FC JUMP JUMPDEST PUSH2 0x24A0 DUP2 DUP6 PUSH2 0x2406 JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x24B2 DUP6 PUSH2 0x2416 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x24ED JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x24CE DUP6 DUP3 PUSH2 0x246D JUMP JUMPDEST SWAP5 POP PUSH2 0x24D9 DUP4 PUSH2 0x2480 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x24B5 JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2517 DUP2 DUP5 PUSH2 0x248C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2534 JUMPI PUSH2 0x2533 PUSH2 0x2101 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2541 DUP5 DUP3 DUP6 ADD PUSH2 0x2332 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2553 DUP2 PUSH2 0x2189 JUMP JUMPDEST DUP2 EQ PUSH2 0x255D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x256E DUP2 PUSH2 0x254A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x258A JUMPI PUSH2 0x2589 PUSH2 0x2101 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2597 DUP6 DUP3 DUP7 ADD PUSH2 0x2332 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x25A8 DUP6 DUP3 DUP7 ADD PUSH2 0x2560 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x25F0 DUP3 PUSH2 0x21FE JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x260F JUMPI PUSH2 0x260E PUSH2 0x25BA JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2621 PUSH2 0x20F8 JUMP JUMPDEST SWAP1 POP PUSH2 0x262D DUP3 DUP3 PUSH2 0x25E7 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x264C JUMPI PUSH2 0x264B PUSH2 0x25BA JUMP JUMPDEST JUMPDEST PUSH2 0x2655 DUP3 PUSH2 0x21FE JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2682 PUSH2 0x267D DUP5 PUSH2 0x2632 JUMP JUMPDEST PUSH2 0x2618 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x269E JUMPI PUSH2 0x269D PUSH2 0x25B6 JUMP JUMPDEST JUMPDEST PUSH2 0x26A9 DUP5 DUP3 DUP6 PUSH2 0x2662 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x26C5 JUMPI PUSH2 0x26C4 PUSH2 0x25B2 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x26D5 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2670 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x26F6 JUMPI PUSH2 0x26F5 PUSH2 0x2101 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2703 DUP8 DUP3 DUP9 ADD PUSH2 0x2332 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x2714 DUP8 DUP3 DUP9 ADD PUSH2 0x2332 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2725 DUP8 DUP3 DUP9 ADD PUSH2 0x2285 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2746 JUMPI PUSH2 0x2745 PUSH2 0x2105 JUMP JUMPDEST JUMPDEST PUSH2 0x2752 DUP8 DUP3 DUP9 ADD PUSH2 0x26B1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2778 JUMPI PUSH2 0x2777 PUSH2 0x25BA JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x27A7 JUMPI PUSH2 0x27A6 PUSH2 0x25BA JUMP JUMPDEST JUMPDEST PUSH2 0x27B0 DUP3 PUSH2 0x21FE JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x27CF PUSH2 0x27CA DUP5 PUSH2 0x278D JUMP JUMPDEST PUSH2 0x2618 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x27EB JUMPI PUSH2 0x27EA PUSH2 0x25B6 JUMP JUMPDEST JUMPDEST PUSH2 0x27F6 DUP5 DUP3 DUP6 PUSH2 0x2662 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2812 JUMPI PUSH2 0x2811 PUSH2 0x25B2 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2822 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x27BD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x283D PUSH2 0x2838 DUP5 PUSH2 0x275E JUMP JUMPDEST PUSH2 0x2618 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x2860 JUMPI PUSH2 0x285F PUSH2 0x2789 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x28A7 JUMPI DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2885 JUMPI PUSH2 0x2884 PUSH2 0x25B2 JUMP JUMPDEST JUMPDEST DUP1 DUP7 ADD PUSH2 0x2892 DUP10 DUP3 PUSH2 0x27FE JUMP JUMPDEST DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP5 POP POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2862 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x28C5 JUMPI PUSH2 0x28C4 PUSH2 0x25B2 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x28D5 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x282B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x28F3 JUMPI PUSH2 0x28F2 PUSH2 0x2101 JUMP JUMPDEST JUMPDEST PUSH0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2910 JUMPI PUSH2 0x290F PUSH2 0x2105 JUMP JUMPDEST JUMPDEST PUSH2 0x291C DUP5 DUP3 DUP6 ADD PUSH2 0x28B1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x293B JUMPI PUSH2 0x293A PUSH2 0x2101 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2948 DUP6 DUP3 DUP7 ADD PUSH2 0x2332 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2959 DUP6 DUP3 DUP7 ADD PUSH2 0x2332 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x29A7 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x29BA JUMPI PUSH2 0x29B9 PUSH2 0x2963 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x29D3 PUSH0 DUP4 ADD DUP7 PUSH2 0x22F4 JUMP JUMPDEST PUSH2 0x29E0 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2384 JUMP JUMPDEST PUSH2 0x29ED PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x22F4 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2A08 PUSH0 DUP4 ADD DUP6 PUSH2 0x22F4 JUMP JUMPDEST PUSH2 0x2A15 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2384 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2A5D DUP3 PUSH2 0x21BC JUMP JUMPDEST PUSH2 0x2A67 DUP2 DUP6 PUSH2 0x2A49 JUMP JUMPDEST SWAP4 POP PUSH2 0x2A77 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x21D6 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2A8E DUP3 DUP6 PUSH2 0x2A53 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A9A DUP3 DUP5 PUSH2 0x2A53 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2ACA DUP3 PUSH2 0x2AA6 JUMP JUMPDEST PUSH2 0x2AD4 DUP2 DUP6 PUSH2 0x2AB0 JUMP JUMPDEST SWAP4 POP PUSH2 0x2AE4 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x21D6 JUMP JUMPDEST PUSH2 0x2AED DUP2 PUSH2 0x21FE JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2B0B PUSH0 DUP4 ADD DUP8 PUSH2 0x22F4 JUMP JUMPDEST PUSH2 0x2B18 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x22F4 JUMP JUMPDEST PUSH2 0x2B25 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2384 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2B37 DUP2 DUP5 PUSH2 0x2AC0 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2B50 DUP2 PUSH2 0x2134 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2B6B JUMPI PUSH2 0x2B6A PUSH2 0x2101 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2B78 DUP5 DUP3 DUP6 ADD PUSH2 0x2B42 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2BE5 DUP3 PUSH2 0x2266 JUMP JUMPDEST SWAP2 POP PUSH2 0x2BF0 DUP4 PUSH2 0x2266 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2C08 JUMPI PUSH2 0x2C07 PUSH2 0x2BAE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x2C97 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x2C5C JUMP JUMPDEST PUSH2 0x2CA1 DUP7 DUP4 PUSH2 0x2C5C JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2CDC PUSH2 0x2CD7 PUSH2 0x2CD2 DUP5 PUSH2 0x2266 JUMP JUMPDEST PUSH2 0x2CB9 JUMP JUMPDEST PUSH2 0x2266 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2CF5 DUP4 PUSH2 0x2CC2 JUMP JUMPDEST PUSH2 0x2D09 PUSH2 0x2D01 DUP3 PUSH2 0x2CE3 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x2C68 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x2D1D PUSH2 0x2D11 JUMP JUMPDEST PUSH2 0x2D28 DUP2 DUP5 DUP5 PUSH2 0x2CEC JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2D4B JUMPI PUSH2 0x2D40 PUSH0 DUP3 PUSH2 0x2D15 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2D2E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2D90 JUMPI PUSH2 0x2D61 DUP2 PUSH2 0x2C3B JUMP JUMPDEST PUSH2 0x2D6A DUP5 PUSH2 0x2C4D JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x2D79 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x2D8D PUSH2 0x2D85 DUP6 PUSH2 0x2C4D JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x2D2D JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2DB0 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x2D95 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2DC8 DUP4 DUP4 PUSH2 0x2DA1 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2DE1 DUP3 PUSH2 0x21BC JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2DFA JUMPI PUSH2 0x2DF9 PUSH2 0x25BA JUMP JUMPDEST JUMPDEST PUSH2 0x2E04 DUP3 SLOAD PUSH2 0x2990 JUMP JUMPDEST PUSH2 0x2E0F DUP3 DUP3 DUP6 PUSH2 0x2D4F JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2E40 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x2E2E JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x2E38 DUP6 DUP3 PUSH2 0x2DBD JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x2E9F JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x2E4E DUP7 PUSH2 0x2C3B JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2E75 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2E50 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x2E92 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x2E8E PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x2DA1 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE0 PUSH9 0x9D39F80A700658292 0xD SAR DUP8 SWAP11 0xE3 0xC2 PUSH27 0xF9CB995BECA63C3B95262BD5DD3264736F6C634300081800330000 ",
							"sourceMap": "289:726:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;447:283;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2365:89:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3497:154;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3323:113;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2062:102:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4143:578:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1736:255:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4787:132:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;233:104:15;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2236:226:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2185:118:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1920:208;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;1638:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2518:93:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;910:103:14;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3718:144:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4985:208;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2677:255;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;343:199:15;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3928:153:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;447:283:14;583:4;622:47;657:11;622:34;:47::i;:::-;:101;;;;685:38;711:11;685:25;:38::i;:::-;622:101;603:120;;447:283;;;:::o;2365:89:2:-;2410:13;2442:5;2435:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2365:89;:::o;3497:154::-;3564:7;3583:22;3597:7;3583:13;:22::i;:::-;;3623:21;3636:7;3623:12;:21::i;:::-;3616:28;;3497:154;;;:::o;3323:113::-;3394:35;3403:2;3407:7;3416:12;:10;:12::i;:::-;3394:8;:35::i;:::-;3323:113;;:::o;2062:102:5:-;2114:7;2140:10;:17;;;;2133:24;;2062:102;:::o;4143:578:2:-;4251:1;4237:16;;:2;:16;;;4233:87;;4306:1;4276:33;;;;;;;;;;;:::i;:::-;;;;;;;;4233:87;4538:21;4562:34;4570:2;4574:7;4583:12;:10;:12::i;:::-;4562:7;:34::i;:::-;4538:58;;4627:4;4610:21;;:13;:21;;;4606:109;;4675:4;4681:7;4690:13;4654:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;4606:109;4223:498;4143:578;;;:::o;1736:255:5:-;1824:7;1856:16;1866:5;1856:9;:16::i;:::-;1847:5;:25;1843:99;;1918:5;1925;1895:36;;;;;;;;;;;;:::i;:::-;;;;;;;;1843:99;1958:12;:19;1971:5;1958:19;;;;;;;;;;;;;;;:26;1978:5;1958:26;;;;;;;;;;;;1951:33;;1736:255;;;;:::o;4787:132:2:-;4873:39;4890:4;4896:2;4900:7;4873:39;;;;;;;;;;;;:16;:39::i;:::-;4787:132;;;:::o;233:104:15:-;286:15;320:10;313:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;233:104;:::o;2236:226:5:-;2302:7;2334:13;:11;:13::i;:::-;2325:5;:22;2321:101;;2401:1;2405:5;2370:41;;;;;;;;;;;;:::i;:::-;;;;;;;;2321:101;2438:10;2449:5;2438:17;;;;;;;;:::i;:::-;;;;;;;;;;2431:24;;2236:226;;;:::o;2185:118:2:-;2248:7;2274:22;2288:7;2274:13;:22::i;:::-;2267:29;;2185:118;;;:::o;1920:208::-;1983:7;2023:1;2006:19;;:5;:19;;;2002:87;;2075:1;2048:30;;;;;;;;;;;:::i;:::-;;;;;;;;2002:87;2105:9;:16;2115:5;2105:16;;;;;;;;;;;;;;;;2098:23;;1920:208;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;2518:93:2:-;2565:13;2597:7;2590:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2518:93;:::o;910:103:14:-;1531:13:0;:11;:13::i;:::-;984:22:14::1;994:2;998:7;984:9;:22::i;:::-;910:103:::0;;:::o;3718:144:2:-;3803:52;3822:12;:10;:12::i;:::-;3836:8;3846;3803:18;:52::i;:::-;3718:144;;:::o;4985:208::-;5098:31;5111:4;5117:2;5121:7;5098:12;:31::i;:::-;5139:47;5162:4;5168:2;5172:7;5181:4;5139:22;:47::i;:::-;4985:208;;;;:::o;2677:255::-;2741:13;2766:22;2780:7;2766:13;:22::i;:::-;;2799:21;2823:10;:8;:10::i;:::-;2799:34;;2874:1;2856:7;2850:21;:25;:75;;;;;;;;;;;;;;;;;2892:7;2901:18;:7;:16;:18::i;:::-;2878:42;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2850:75;2843:82;;;2677:255;;;:::o;343:199:15:-;423:34;444:12;423:20;:34::i;:::-;481:12;468:10;:25;;;;;;;;;;;;:::i;:::-;;509:26;522:12;509:26;;;;;;:::i;:::-;;;;;;;;343:199;:::o;3928:153:2:-;4016:4;4039:18;:25;4058:5;4039:25;;;;;;;;;;;;;;;:35;4065:8;4039:35;;;;;;;;;;;;;;;;;;;;;;;;;4032:42;;3928:153;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1435:222:5:-;1537:4;1575:35;1560:50;;;:11;:50;;;;:90;;;;1614:36;1638:11;1614:23;:36::i;:::-;1560:90;1553:97;;1435:222;;;:::o;548:147:15:-;624:4;662:26;647:41;;;:11;:41;;;;640:48;;548:147;;;:::o;16138:241:2:-;16201:7;16220:13;16236:17;16245:7;16236:8;:17::i;:::-;16220:33;;16284:1;16267:19;;:5;:19;;;16263:88;;16332:7;16309:31;;;;;;;;;;;:::i;:::-;;;;;;;;16263:88;16367:5;16360:12;;;16138:241;;;:::o;5938:127::-;6008:7;6034:15;:24;6050:7;6034:24;;;;;;;;;;;;;;;;;;;;;6027:31;;5938:127;;;:::o;656:96:8:-;709:7;735:10;728:17;;656:96;:::o;14418:120:2:-;14498:33;14507:2;14511:7;14520:4;14526;14498:8;:33::i;:::-;14418:120;;;:::o;2518:625:5:-;2613:7;2632:21;2656:32;2670:2;2674:7;2683:4;2656:13;:32::i;:::-;2632:56;;2728:1;2703:27;;:13;:27;;;2699:210;;2746:40;2778:7;2746:31;:40::i;:::-;2699:210;;;2824:2;2807:19;;:13;:19;;;2803:106;;2842:56;2875:13;2890:7;2842:32;:56::i;:::-;2803:106;2699:210;2936:1;2922:16;;:2;:16;;;2918:188;;2954:45;2991:7;2954:36;:45::i;:::-;2918:188;;;3037:2;3020:19;;:13;:19;;;3016:90;;3055:40;3083:2;3087:7;3055:27;:40::i;:::-;3016:90;2918:188;3123:13;3116:20;;;2518:625;;;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;10633:100:2:-;10700:26;10710:2;10714:7;10700:26;;;;;;;;;;;;:9;:26::i;:::-;10633:100;;:::o;15591:312::-;15718:1;15698:22;;:8;:22;;;15694:91;;15765:8;15743:31;;;;;;;;;;;:::i;:::-;;;;;;;;15694:91;15832:8;15794:18;:25;15813:5;15794:25;;;;;;;;;;;;;;;:35;15820:8;15794:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;15877:8;15855:41;;15870:5;15855:41;;;15887:8;15855:41;;;;;;:::i;:::-;;;;;;;;15591:312;;;:::o;16918:782::-;17051:1;17034:2;:14;;;:18;17030:664;;;17088:2;17072:36;;;17109:12;:10;:12::i;:::-;17123:4;17129:7;17138:4;17072:71;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;17068:616;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17398:1;17381:6;:13;:18;17377:293;;17452:2;17430:25;;;;;;;;;;;:::i;:::-;;;;;;;;17377:293;17622:6;17616:13;17607:6;17603:2;17599:15;17592:38;17068:616;17200:41;;;17190:51;;;:6;:51;;;;17186:130;;17294:2;17272:25;;;;;;;;;;;:::i;:::-;;;;;;;;17186:130;17144:186;17030:664;16918:782;;;;:::o;3174:92::-;3225:13;3250:9;;;;;;;;;;;;;;3174:92;:::o;637:698:9:-;693:13;742:14;779:1;759:17;770:5;759:10;:17::i;:::-;:21;742:38;;794:20;828:6;817:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;794:41;;849:11;975:6;971:2;967:15;959:6;955:28;948:35;;1010:282;1017:4;1010:282;;;1041:5;;;;;;;;1180:10;1175:2;1168:5;1164:14;1159:32;1154:3;1146:46;1236:2;1227:11;;;;;;:::i;:::-;;;;;1269:1;1260:5;:10;1010:282;1256:21;1010:282;1312:6;1305:13;;;;;637:698;;;:::o;777:127:14:-;1531:13:0;:11;:13::i;:::-;777:127:14;:::o;1561:300:2:-;1663:4;1713:25;1698:40;;;:11;:40;;;;:104;;;;1769:33;1754:48;;;:11;:48;;;;1698:104;:156;;;;1818:36;1842:11;1818:23;:36::i;:::-;1698:156;1679:175;;1561:300;;;:::o;5707:115::-;5773:7;5799;:16;5807:7;5799:16;;;;;;;;;;;;;;;;;;;;;5792:23;;5707:115;;;:::o;14720:662::-;14880:9;:31;;;;14909:1;14893:18;;:4;:18;;;;14880:31;14876:460;;;14927:13;14943:22;14957:7;14943:13;:22::i;:::-;14927:38;;15109:1;15093:18;;:4;:18;;;;:35;;;;;15124:4;15115:13;;:5;:13;;;;15093:35;:69;;;;;15133:29;15150:5;15157:4;15133:16;:29::i;:::-;15132:30;15093:69;15089:142;;;15211:4;15189:27;;;;;;;;;;;:::i;:::-;;;;;;;;15089:142;15249:9;15245:81;;;15303:7;15299:2;15283:28;;15292:5;15283:28;;;;;;;;;;;;15245:81;14913:423;14876:460;15373:2;15346:15;:24;15362:7;15346:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;14720:662;;;;:::o;8838:795::-;8924:7;8943:12;8958:17;8967:7;8958:8;:17::i;:::-;8943:32;;9051:1;9035:18;;:4;:18;;;9031:86;;9069:37;9086:4;9092;9098:7;9069:16;:37::i;:::-;9031:86;9177:1;9161:18;;:4;:18;;;9157:256;;9277:48;9294:1;9298:7;9315:1;9319:5;9277:8;:48::i;:::-;9387:1;9368:9;:15;9378:4;9368:15;;;;;;;;;;;;;;;;:20;;;;;;;;;;;9157:256;9441:1;9427:16;;:2;:16;;;9423:107;;9504:1;9487:9;:13;9497:2;9487:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;9423:107;9559:2;9540:7;:16;9548:7;9540:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;9596:7;9592:2;9577:27;;9586:4;9577:27;;;;;;;;;;;;9622:4;9615:11;;;8838:795;;;;;:::o;3846:161:5:-;3949:10;:17;;;;3922:15;:24;3938:7;3922:24;;;;;;;;;;;:44;;;;3976:10;3992:7;3976:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3846:161;:::o;4624:959::-;4886:22;4911:15;4921:4;4911:9;:15::i;:::-;4886:40;;4936:18;4957:17;:26;4975:7;4957:26;;;;;;;;;;;;4936:47;;5101:14;5087:10;:28;5083:323;;5131:19;5153:12;:18;5166:4;5153:18;;;;;;;;;;;;;;;:34;5172:14;5153:34;;;;;;;;;;;;5131:56;;5235:11;5202:12;:18;5215:4;5202:18;;;;;;;;;;;;;;;:30;5221:10;5202:30;;;;;;;;;;;:44;;;;5351:10;5318:17;:30;5336:11;5318:30;;;;;;;;;;;:43;;;;5117:289;5083:323;5499:17;:26;5517:7;5499:26;;;;;;;;;;;5492:33;;;5542:12;:18;5555:4;5542:18;;;;;;;;;;;;;;;:34;5561:14;5542:34;;;;;;;;;;;5535:41;;;4705:878;;4624:959;;:::o;5871:1061::-;6120:22;6165:1;6145:10;:17;;;;:21;;;;:::i;:::-;6120:46;;6176:18;6197:15;:24;6213:7;6197:24;;;;;;;;;;;;6176:45;;6543:19;6565:10;6576:14;6565:26;;;;;;;;:::i;:::-;;;;;;;;;;6543:48;;6627:11;6602:10;6613;6602:22;;;;;;;;:::i;:::-;;;;;;;;;:36;;;;6737:10;6706:15;:28;6722:11;6706:28;;;;;;;;;;;:41;;;;6875:15;:24;6891:7;6875:24;;;;;;;;;;;6868:31;;;6909:10;:16;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5942:990;;;5871:1061;:::o;3437:214::-;3521:14;3554:1;3538:13;3548:2;3538:9;:13::i;:::-;:17;;;;:::i;:::-;3521:34;;3592:7;3565:12;:16;3578:2;3565:16;;;;;;;;;;;;;;;:24;3582:6;3565:24;;;;;;;;;;;:34;;;;3638:6;3609:17;:26;3627:7;3609:26;;;;;;;;;;;:35;;;;3511:140;3437:214;;:::o;10954:182:2:-;11048:18;11054:2;11058:7;11048:5;:18::i;:::-;11076:53;11107:1;11111:2;11115:7;11124:4;11076:22;:53::i;:::-;10954:182;;;:::o;12214:916:12:-;12267:7;12286:14;12303:1;12286:18;;12351:8;12342:5;:17;12338:103;;12388:8;12379:17;;;;;;:::i;:::-;;;;;12424:2;12414:12;;;;12338:103;12467:8;12458:5;:17;12454:103;;12504:8;12495:17;;;;;;:::i;:::-;;;;;12540:2;12530:12;;;;12454:103;12583:8;12574:5;:17;12570:103;;12620:8;12611:17;;;;;;:::i;:::-;;;;;12656:2;12646:12;;;;12570:103;12699:7;12690:5;:16;12686:100;;12735:7;12726:16;;;;;;:::i;:::-;;;;;12770:1;12760:11;;;;12686:100;12812:7;12803:5;:16;12799:100;;12848:7;12839:16;;;;;;:::i;:::-;;;;;12883:1;12873:11;;;;12799:100;12925:7;12916:5;:16;12912:100;;12961:7;12952:16;;;;;;:::i;:::-;;;;;12996:1;12986:11;;;;12912:100;13038:7;13029:5;:16;13025:66;;13075:1;13065:11;;;;13025:66;13117:6;13110:13;;;12214:916;;;:::o;762:146:10:-;838:4;876:25;861:40;;;:11;:40;;;;854:47;;762:146;;;:::o;7082:368:2:-;7194:38;7208:5;7215:7;7224;7194:13;:38::i;:::-;7189:255;;7269:1;7252:19;;:5;:19;;;7248:186;;7321:7;7298:31;;;;;;;;;;;:::i;:::-;;;;;;;;7248:186;7402:7;7411;7375:44;;;;;;;;;;;;:::i;:::-;;;;;;;;7189:255;7082:368;;;:::o;9955:327::-;10036:1;10022:16;;:2;:16;;;10018:87;;10091:1;10061:33;;;;;;;;;;;:::i;:::-;;;;;;;;10018:87;10114:21;10138:32;10146:2;10150:7;10167:1;10138:7;:32::i;:::-;10114:56;;10209:1;10184:27;;:13;:27;;;10180:96;;10262:1;10234:31;;;;;;;;;;;:::i;:::-;;;;;;;;10180:96;10008:274;9955:327;;:::o;6376:272::-;6479:4;6533:1;6514:21;;:7;:21;;;;:127;;;;;6561:7;6552:16;;:5;:16;;;:52;;;;6572:32;6589:5;6596:7;6572:16;:32::i;:::-;6552:52;:88;;;;6633:7;6608:32;;:21;6621:7;6608:12;:21::i;:::-;:32;;;6552:88;6514:127;6495:146;;6376:272;;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:75:17:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:246::-;1879:1;1889:113;1903:6;1900:1;1897:13;1889:113;;;1988:1;1983:3;1979:11;1973:18;1969:1;1964:3;1960:11;1953:39;1925:2;1922:1;1918:10;1913:15;;1889:113;;;2036:1;2027:6;2022:3;2018:16;2011:27;1860:184;1798:246;;;:::o;2050:102::-;2091:6;2142:2;2138:7;2133:2;2126:5;2122:14;2118:28;2108:38;;2050:102;;;:::o;2158:377::-;2246:3;2274:39;2307:5;2274:39;:::i;:::-;2329:71;2393:6;2388:3;2329:71;:::i;:::-;2322:78;;2409:65;2467:6;2462:3;2455:4;2448:5;2444:16;2409:65;:::i;:::-;2499:29;2521:6;2499:29;:::i;:::-;2494:3;2490:39;2483:46;;2250:285;2158:377;;;;:::o;2541:313::-;2654:4;2692:2;2681:9;2677:18;2669:26;;2741:9;2735:4;2731:20;2727:1;2716:9;2712:17;2705:47;2769:78;2842:4;2833:6;2769:78;:::i;:::-;2761:86;;2541:313;;;;:::o;2860:77::-;2897:7;2926:5;2915:16;;2860:77;;;:::o;2943:122::-;3016:24;3034:5;3016:24;:::i;:::-;3009:5;3006:35;2996:63;;3055:1;3052;3045:12;2996:63;2943:122;:::o;3071:139::-;3117:5;3155:6;3142:20;3133:29;;3171:33;3198:5;3171:33;:::i;:::-;3071:139;;;;:::o;3216:329::-;3275:6;3324:2;3312:9;3303:7;3299:23;3295:32;3292:119;;;3330:79;;:::i;:::-;3292:119;3450:1;3475:53;3520:7;3511:6;3500:9;3496:22;3475:53;:::i;:::-;3465:63;;3421:117;3216:329;;;;:::o;3551:126::-;3588:7;3628:42;3621:5;3617:54;3606:65;;3551:126;;;:::o;3683:96::-;3720:7;3749:24;3767:5;3749:24;:::i;:::-;3738:35;;3683:96;;;:::o;3785:118::-;3872:24;3890:5;3872:24;:::i;:::-;3867:3;3860:37;3785:118;;:::o;3909:222::-;4002:4;4040:2;4029:9;4025:18;4017:26;;4053:71;4121:1;4110:9;4106:17;4097:6;4053:71;:::i;:::-;3909:222;;;;:::o;4137:122::-;4210:24;4228:5;4210:24;:::i;:::-;4203:5;4200:35;4190:63;;4249:1;4246;4239:12;4190:63;4137:122;:::o;4265:139::-;4311:5;4349:6;4336:20;4327:29;;4365:33;4392:5;4365:33;:::i;:::-;4265:139;;;;:::o;4410:474::-;4478:6;4486;4535:2;4523:9;4514:7;4510:23;4506:32;4503:119;;;4541:79;;:::i;:::-;4503:119;4661:1;4686:53;4731:7;4722:6;4711:9;4707:22;4686:53;:::i;:::-;4676:63;;4632:117;4788:2;4814:53;4859:7;4850:6;4839:9;4835:22;4814:53;:::i;:::-;4804:63;;4759:118;4410:474;;;;;:::o;4890:118::-;4977:24;4995:5;4977:24;:::i;:::-;4972:3;4965:37;4890:118;;:::o;5014:222::-;5107:4;5145:2;5134:9;5130:18;5122:26;;5158:71;5226:1;5215:9;5211:17;5202:6;5158:71;:::i;:::-;5014:222;;;;:::o;5242:619::-;5319:6;5327;5335;5384:2;5372:9;5363:7;5359:23;5355:32;5352:119;;;5390:79;;:::i;:::-;5352:119;5510:1;5535:53;5580:7;5571:6;5560:9;5556:22;5535:53;:::i;:::-;5525:63;;5481:117;5637:2;5663:53;5708:7;5699:6;5688:9;5684:22;5663:53;:::i;:::-;5653:63;;5608:118;5765:2;5791:53;5836:7;5827:6;5816:9;5812:22;5791:53;:::i;:::-;5781:63;;5736:118;5242:619;;;;;:::o;5867:124::-;5944:6;5978:5;5972:12;5962:22;;5867:124;;;:::o;5997:194::-;6106:11;6140:6;6135:3;6128:19;6180:4;6175:3;6171:14;6156:29;;5997:194;;;;:::o;6197:142::-;6274:4;6297:3;6289:11;;6327:4;6322:3;6318:14;6310:22;;6197:142;;;:::o;6345:159::-;6419:11;6453:6;6448:3;6441:19;6493:4;6488:3;6484:14;6469:29;;6345:159;;;;:::o;6510:357::-;6588:3;6616:39;6649:5;6616:39;:::i;:::-;6671:61;6725:6;6720:3;6671:61;:::i;:::-;6664:68;;6741:65;6799:6;6794:3;6787:4;6780:5;6776:16;6741:65;:::i;:::-;6831:29;6853:6;6831:29;:::i;:::-;6826:3;6822:39;6815:46;;6592:275;6510:357;;;;:::o;6873:196::-;6962:10;6997:66;7059:3;7051:6;6997:66;:::i;:::-;6983:80;;6873:196;;;;:::o;7075:123::-;7155:4;7187;7182:3;7178:14;7170:22;;7075:123;;;:::o;7232:991::-;7371:3;7400:64;7458:5;7400:64;:::i;:::-;7480:96;7569:6;7564:3;7480:96;:::i;:::-;7473:103;;7602:3;7647:4;7639:6;7635:17;7630:3;7626:27;7677:66;7737:5;7677:66;:::i;:::-;7766:7;7797:1;7782:396;7807:6;7804:1;7801:13;7782:396;;;7878:9;7872:4;7868:20;7863:3;7856:33;7929:6;7923:13;7957:84;8036:4;8021:13;7957:84;:::i;:::-;7949:92;;8064:70;8127:6;8064:70;:::i;:::-;8054:80;;8163:4;8158:3;8154:14;8147:21;;7842:336;7829:1;7826;7822:9;7817:14;;7782:396;;;7786:14;8194:4;8187:11;;8214:3;8207:10;;7376:847;;;;;7232:991;;;;:::o;8229:413::-;8392:4;8430:2;8419:9;8415:18;8407:26;;8479:9;8473:4;8469:20;8465:1;8454:9;8450:17;8443:47;8507:128;8630:4;8621:6;8507:128;:::i;:::-;8499:136;;8229:413;;;;:::o;8648:329::-;8707:6;8756:2;8744:9;8735:7;8731:23;8727:32;8724:119;;;8762:79;;:::i;:::-;8724:119;8882:1;8907:53;8952:7;8943:6;8932:9;8928:22;8907:53;:::i;:::-;8897:63;;8853:117;8648:329;;;;:::o;8983:116::-;9053:21;9068:5;9053:21;:::i;:::-;9046:5;9043:32;9033:60;;9089:1;9086;9079:12;9033:60;8983:116;:::o;9105:133::-;9148:5;9186:6;9173:20;9164:29;;9202:30;9226:5;9202:30;:::i;:::-;9105:133;;;;:::o;9244:468::-;9309:6;9317;9366:2;9354:9;9345:7;9341:23;9337:32;9334:119;;;9372:79;;:::i;:::-;9334:119;9492:1;9517:53;9562:7;9553:6;9542:9;9538:22;9517:53;:::i;:::-;9507:63;;9463:117;9619:2;9645:50;9687:7;9678:6;9667:9;9663:22;9645:50;:::i;:::-;9635:60;;9590:115;9244:468;;;;;:::o;9718:117::-;9827:1;9824;9817:12;9841:117;9950:1;9947;9940:12;9964:180;10012:77;10009:1;10002:88;10109:4;10106:1;10099:15;10133:4;10130:1;10123:15;10150:281;10233:27;10255:4;10233:27;:::i;:::-;10225:6;10221:40;10363:6;10351:10;10348:22;10327:18;10315:10;10312:34;10309:62;10306:88;;;10374:18;;:::i;:::-;10306:88;10414:10;10410:2;10403:22;10193:238;10150:281;;:::o;10437:129::-;10471:6;10498:20;;:::i;:::-;10488:30;;10527:33;10555:4;10547:6;10527:33;:::i;:::-;10437:129;;;:::o;10572:307::-;10633:4;10723:18;10715:6;10712:30;10709:56;;;10745:18;;:::i;:::-;10709:56;10783:29;10805:6;10783:29;:::i;:::-;10775:37;;10867:4;10861;10857:15;10849:23;;10572:307;;;:::o;10885:146::-;10982:6;10977:3;10972;10959:30;11023:1;11014:6;11009:3;11005:16;10998:27;10885:146;;;:::o;11037:423::-;11114:5;11139:65;11155:48;11196:6;11155:48;:::i;:::-;11139:65;:::i;:::-;11130:74;;11227:6;11220:5;11213:21;11265:4;11258:5;11254:16;11303:3;11294:6;11289:3;11285:16;11282:25;11279:112;;;11310:79;;:::i;:::-;11279:112;11400:54;11447:6;11442:3;11437;11400:54;:::i;:::-;11120:340;11037:423;;;;;:::o;11479:338::-;11534:5;11583:3;11576:4;11568:6;11564:17;11560:27;11550:122;;11591:79;;:::i;:::-;11550:122;11708:6;11695:20;11733:78;11807:3;11799:6;11792:4;11784:6;11780:17;11733:78;:::i;:::-;11724:87;;11540:277;11479:338;;;;:::o;11823:943::-;11918:6;11926;11934;11942;11991:3;11979:9;11970:7;11966:23;11962:33;11959:120;;;11998:79;;:::i;:::-;11959:120;12118:1;12143:53;12188:7;12179:6;12168:9;12164:22;12143:53;:::i;:::-;12133:63;;12089:117;12245:2;12271:53;12316:7;12307:6;12296:9;12292:22;12271:53;:::i;:::-;12261:63;;12216:118;12373:2;12399:53;12444:7;12435:6;12424:9;12420:22;12399:53;:::i;:::-;12389:63;;12344:118;12529:2;12518:9;12514:18;12501:32;12560:18;12552:6;12549:30;12546:117;;;12582:79;;:::i;:::-;12546:117;12687:62;12741:7;12732:6;12721:9;12717:22;12687:62;:::i;:::-;12677:72;;12472:287;11823:943;;;;;;;:::o;12772:321::-;12859:4;12949:18;12941:6;12938:30;12935:56;;;12971:18;;:::i;:::-;12935:56;13021:4;13013:6;13009:17;13001:25;;13081:4;13075;13071:15;13063:23;;12772:321;;;:::o;13099:117::-;13208:1;13205;13198:12;13222:308;13284:4;13374:18;13366:6;13363:30;13360:56;;;13396:18;;:::i;:::-;13360:56;13434:29;13456:6;13434:29;:::i;:::-;13426:37;;13518:4;13512;13508:15;13500:23;;13222:308;;;:::o;13536:425::-;13614:5;13639:66;13655:49;13697:6;13655:49;:::i;:::-;13639:66;:::i;:::-;13630:75;;13728:6;13721:5;13714:21;13766:4;13759:5;13755:16;13804:3;13795:6;13790:3;13786:16;13783:25;13780:112;;;13811:79;;:::i;:::-;13780:112;13901:54;13948:6;13943:3;13938;13901:54;:::i;:::-;13620:341;13536:425;;;;;:::o;13981:340::-;14037:5;14086:3;14079:4;14071:6;14067:17;14063:27;14053:122;;14094:79;;:::i;:::-;14053:122;14211:6;14198:20;14236:79;14311:3;14303:6;14296:4;14288:6;14284:17;14236:79;:::i;:::-;14227:88;;14043:278;13981:340;;;;:::o;14343:945::-;14449:5;14474:91;14490:74;14557:6;14490:74;:::i;:::-;14474:91;:::i;:::-;14465:100;;14585:5;14614:6;14607:5;14600:21;14648:4;14641:5;14637:16;14630:23;;14701:4;14693:6;14689:17;14681:6;14677:30;14730:3;14722:6;14719:15;14716:122;;;14749:79;;:::i;:::-;14716:122;14864:6;14847:435;14881:6;14876:3;14873:15;14847:435;;;14970:3;14957:17;15006:18;14993:11;14990:35;14987:122;;;15028:79;;:::i;:::-;14987:122;15152:11;15144:6;15140:24;15190:47;15233:3;15221:10;15190:47;:::i;:::-;15185:3;15178:60;15267:4;15262:3;15258:14;15251:21;;14923:359;;14907:4;14902:3;14898:14;14891:21;;14847:435;;;14851:21;14455:833;;14343:945;;;;;:::o;15310:390::-;15391:5;15440:3;15433:4;15425:6;15421:17;15417:27;15407:122;;15448:79;;:::i;:::-;15407:122;15565:6;15552:20;15590:104;15690:3;15682:6;15675:4;15667:6;15663:17;15590:104;:::i;:::-;15581:113;;15397:303;15310:390;;;;:::o;15706:559::-;15800:6;15849:2;15837:9;15828:7;15824:23;15820:32;15817:119;;;15855:79;;:::i;:::-;15817:119;16003:1;15992:9;15988:17;15975:31;16033:18;16025:6;16022:30;16019:117;;;16055:79;;:::i;:::-;16019:117;16160:88;16240:7;16231:6;16220:9;16216:22;16160:88;:::i;:::-;16150:98;;15946:312;15706:559;;;;:::o;16271:474::-;16339:6;16347;16396:2;16384:9;16375:7;16371:23;16367:32;16364:119;;;16402:79;;:::i;:::-;16364:119;16522:1;16547:53;16592:7;16583:6;16572:9;16568:22;16547:53;:::i;:::-;16537:63;;16493:117;16649:2;16675:53;16720:7;16711:6;16700:9;16696:22;16675:53;:::i;:::-;16665:63;;16620:118;16271:474;;;;;:::o;16751:180::-;16799:77;16796:1;16789:88;16896:4;16893:1;16886:15;16920:4;16917:1;16910:15;16937:320;16981:6;17018:1;17012:4;17008:12;16998:22;;17065:1;17059:4;17055:12;17086:18;17076:81;;17142:4;17134:6;17130:17;17120:27;;17076:81;17204:2;17196:6;17193:14;17173:18;17170:38;17167:84;;17223:18;;:::i;:::-;17167:84;16988:269;16937:320;;;:::o;17263:442::-;17412:4;17450:2;17439:9;17435:18;17427:26;;17463:71;17531:1;17520:9;17516:17;17507:6;17463:71;:::i;:::-;17544:72;17612:2;17601:9;17597:18;17588:6;17544:72;:::i;:::-;17626;17694:2;17683:9;17679:18;17670:6;17626:72;:::i;:::-;17263:442;;;;;;:::o;17711:332::-;17832:4;17870:2;17859:9;17855:18;17847:26;;17883:71;17951:1;17940:9;17936:17;17927:6;17883:71;:::i;:::-;17964:72;18032:2;18021:9;18017:18;18008:6;17964:72;:::i;:::-;17711:332;;;;;:::o;18049:180::-;18097:77;18094:1;18087:88;18194:4;18191:1;18184:15;18218:4;18215:1;18208:15;18235:148;18337:11;18374:3;18359:18;;18235:148;;;;:::o;18389:390::-;18495:3;18523:39;18556:5;18523:39;:::i;:::-;18578:89;18660:6;18655:3;18578:89;:::i;:::-;18571:96;;18676:65;18734:6;18729:3;18722:4;18715:5;18711:16;18676:65;:::i;:::-;18766:6;18761:3;18757:16;18750:23;;18499:280;18389:390;;;;:::o;18785:435::-;18965:3;18987:95;19078:3;19069:6;18987:95;:::i;:::-;18980:102;;19099:95;19190:3;19181:6;19099:95;:::i;:::-;19092:102;;19211:3;19204:10;;18785:435;;;;;:::o;19226:98::-;19277:6;19311:5;19305:12;19295:22;;19226:98;;;:::o;19330:168::-;19413:11;19447:6;19442:3;19435:19;19487:4;19482:3;19478:14;19463:29;;19330:168;;;;:::o;19504:373::-;19590:3;19618:38;19650:5;19618:38;:::i;:::-;19672:70;19735:6;19730:3;19672:70;:::i;:::-;19665:77;;19751:65;19809:6;19804:3;19797:4;19790:5;19786:16;19751:65;:::i;:::-;19841:29;19863:6;19841:29;:::i;:::-;19836:3;19832:39;19825:46;;19594:283;19504:373;;;;:::o;19883:640::-;20078:4;20116:3;20105:9;20101:19;20093:27;;20130:71;20198:1;20187:9;20183:17;20174:6;20130:71;:::i;:::-;20211:72;20279:2;20268:9;20264:18;20255:6;20211:72;:::i;:::-;20293;20361:2;20350:9;20346:18;20337:6;20293:72;:::i;:::-;20412:9;20406:4;20402:20;20397:2;20386:9;20382:18;20375:48;20440:76;20511:4;20502:6;20440:76;:::i;:::-;20432:84;;19883:640;;;;;;;:::o;20529:141::-;20585:5;20616:6;20610:13;20601:22;;20632:32;20658:5;20632:32;:::i;:::-;20529:141;;;;:::o;20676:349::-;20745:6;20794:2;20782:9;20773:7;20769:23;20765:32;20762:119;;;20800:79;;:::i;:::-;20762:119;20920:1;20945:63;21000:7;20991:6;20980:9;20976:22;20945:63;:::i;:::-;20935:73;;20891:127;20676:349;;;;:::o;21031:180::-;21079:77;21076:1;21069:88;21176:4;21173:1;21166:15;21200:4;21197:1;21190:15;21217:180;21265:77;21262:1;21255:88;21362:4;21359:1;21352:15;21386:4;21383:1;21376:15;21403:194;21443:4;21463:20;21481:1;21463:20;:::i;:::-;21458:25;;21497:20;21515:1;21497:20;:::i;:::-;21492:25;;21541:1;21538;21534:9;21526:17;;21565:1;21559:4;21556:11;21553:37;;;21570:18;;:::i;:::-;21553:37;21403:194;;;;:::o;21603:180::-;21651:77;21648:1;21641:88;21748:4;21745:1;21738:15;21772:4;21769:1;21762:15;21789:141;21838:4;21861:3;21853:11;;21884:3;21881:1;21874:14;21918:4;21915:1;21905:18;21897:26;;21789:141;;;:::o;21936:93::-;21973:6;22020:2;22015;22008:5;22004:14;22000:23;21990:33;;21936:93;;;:::o;22035:107::-;22079:8;22129:5;22123:4;22119:16;22098:37;;22035:107;;;;:::o;22148:393::-;22217:6;22267:1;22255:10;22251:18;22290:97;22320:66;22309:9;22290:97;:::i;:::-;22408:39;22438:8;22427:9;22408:39;:::i;:::-;22396:51;;22480:4;22476:9;22469:5;22465:21;22456:30;;22529:4;22519:8;22515:19;22508:5;22505:30;22495:40;;22224:317;;22148:393;;;;;:::o;22547:60::-;22575:3;22596:5;22589:12;;22547:60;;;:::o;22613:142::-;22663:9;22696:53;22714:34;22723:24;22741:5;22723:24;:::i;:::-;22714:34;:::i;:::-;22696:53;:::i;:::-;22683:66;;22613:142;;;:::o;22761:75::-;22804:3;22825:5;22818:12;;22761:75;;;:::o;22842:269::-;22952:39;22983:7;22952:39;:::i;:::-;23013:91;23062:41;23086:16;23062:41;:::i;:::-;23054:6;23047:4;23041:11;23013:91;:::i;:::-;23007:4;23000:105;22918:193;22842:269;;;:::o;23117:73::-;23162:3;23117:73;:::o;23196:189::-;23273:32;;:::i;:::-;23314:65;23372:6;23364;23358:4;23314:65;:::i;:::-;23249:136;23196:189;;:::o;23391:186::-;23451:120;23468:3;23461:5;23458:14;23451:120;;;23522:39;23559:1;23552:5;23522:39;:::i;:::-;23495:1;23488:5;23484:13;23475:22;;23451:120;;;23391:186;;:::o;23583:543::-;23684:2;23679:3;23676:11;23673:446;;;23718:38;23750:5;23718:38;:::i;:::-;23802:29;23820:10;23802:29;:::i;:::-;23792:8;23788:44;23985:2;23973:10;23970:18;23967:49;;;24006:8;23991:23;;23967:49;24029:80;24085:22;24103:3;24085:22;:::i;:::-;24075:8;24071:37;24058:11;24029:80;:::i;:::-;23688:431;;23673:446;23583:543;;;:::o;24132:117::-;24186:8;24236:5;24230:4;24226:16;24205:37;;24132:117;;;;:::o;24255:169::-;24299:6;24332:51;24380:1;24376:6;24368:5;24365:1;24361:13;24332:51;:::i;:::-;24328:56;24413:4;24407;24403:15;24393:25;;24306:118;24255:169;;;;:::o;24429:295::-;24505:4;24651:29;24676:3;24670:4;24651:29;:::i;:::-;24643:37;;24713:3;24710:1;24706:11;24700:4;24697:21;24689:29;;24429:295;;;;:::o;24729:1395::-;24846:37;24879:3;24846:37;:::i;:::-;24948:18;24940:6;24937:30;24934:56;;;24970:18;;:::i;:::-;24934:56;25014:38;25046:4;25040:11;25014:38;:::i;:::-;25099:67;25159:6;25151;25145:4;25099:67;:::i;:::-;25193:1;25217:4;25204:17;;25249:2;25241:6;25238:14;25266:1;25261:618;;;;25923:1;25940:6;25937:77;;;25989:9;25984:3;25980:19;25974:26;25965:35;;25937:77;26040:67;26100:6;26093:5;26040:67;:::i;:::-;26034:4;26027:81;25896:222;25231:887;;25261:618;25313:4;25309:9;25301:6;25297:22;25347:37;25379:4;25347:37;:::i;:::-;25406:1;25420:208;25434:7;25431:1;25428:14;25420:208;;;25513:9;25508:3;25504:19;25498:26;25490:6;25483:42;25564:1;25556:6;25552:14;25542:24;;25611:2;25600:9;25596:18;25583:31;;25457:4;25454:1;25450:12;25445:17;;25420:208;;;25656:6;25647:7;25644:19;25641:179;;;25714:9;25709:3;25705:19;25699:26;25757:48;25799:4;25791:6;25787:17;25776:9;25757:48;:::i;:::-;25749:6;25742:64;25664:156;25641:179;25866:1;25862;25854:6;25850:14;25846:22;25840:4;25833:36;25268:611;;;25231:887;;24821:1303;;;24729:1395;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2399400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "infinite",
								"getApproved(uint256)": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"name()": "infinite",
								"owner()": "2582",
								"ownerOf(uint256)": "infinite",
								"renounceOwnership()": "infinite",
								"safeMint(address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"scriptURI()": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"setScriptURI(string[])": "infinite",
								"supportsInterface(bytes4)": "1005",
								"symbol()": "infinite",
								"tokenByIndex(uint256)": "infinite",
								"tokenOfOwnerByIndex(address,uint256)": "infinite",
								"tokenURI(uint256)": "infinite",
								"totalSupply()": "2552",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite"
							},
							"internal": {
								"_authorizeSetScripts(string memory[] memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 289,
									"end": 1015,
									"name": "PUSH",
									"source": 14,
									"value": "80"
								},
								{
									"begin": 289,
									"end": 1015,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 289,
									"end": 1015,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 353,
									"end": 441,
									"name": "CALLVALUE",
									"source": 14
								},
								{
									"begin": 353,
									"end": 441,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 353,
									"end": 441,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 353,
									"end": 441,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 353,
									"end": 441,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 353,
									"end": 441,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 353,
									"end": 441,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 353,
									"end": 441,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 353,
									"end": 441,
									"name": "tag",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 353,
									"end": 441,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 353,
									"end": 441,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 2,
									"value": "646F7562696D616F000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 2,
									"value": "646F7562696D616F000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 423,
									"end": 433,
									"name": "CALLER",
									"source": 14
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1455,
									"end": 1460,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1447,
									"end": 1452,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 1447,
									"end": 1460,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "tag",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1480,
									"end": 1487,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1470,
									"end": 1477,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 1470,
									"end": 1487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "tag",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 289,
									"end": 1015,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "16"
								},
								{
									"begin": 289,
									"end": 1015,
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 133,
									"name": "tag",
									"source": 17,
									"value": "18"
								},
								{
									"begin": 7,
									"end": 133,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 44,
									"end": 51,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 84,
									"end": 126,
									"name": "PUSH",
									"source": 17,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 77,
									"end": 82,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 73,
									"end": 127,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 62,
									"end": 127,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 62,
									"end": 127,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 7,
									"end": 133,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 7,
									"end": 133,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 7,
									"end": 133,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 7,
									"end": 133,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 139,
									"end": 235,
									"name": "tag",
									"source": 17,
									"value": "19"
								},
								{
									"begin": 139,
									"end": 235,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 176,
									"end": 183,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 205,
									"end": 229,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "44"
								},
								{
									"begin": 223,
									"end": 228,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 205,
									"end": 229,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "18"
								},
								{
									"begin": 205,
									"end": 229,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 205,
									"end": 229,
									"name": "tag",
									"source": 17,
									"value": "44"
								},
								{
									"begin": 205,
									"end": 229,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 194,
									"end": 229,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 194,
									"end": 229,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 139,
									"end": 235,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 139,
									"end": 235,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 139,
									"end": 235,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 139,
									"end": 235,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 241,
									"end": 359,
									"name": "tag",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 241,
									"end": 359,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 328,
									"end": 352,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "46"
								},
								{
									"begin": 346,
									"end": 351,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 328,
									"end": 352,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "19"
								},
								{
									"begin": 328,
									"end": 352,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 328,
									"end": 352,
									"name": "tag",
									"source": 17,
									"value": "46"
								},
								{
									"begin": 328,
									"end": 352,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 323,
									"end": 326,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 316,
									"end": 353,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 241,
									"end": 359,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 241,
									"end": 359,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 241,
									"end": 359,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 365,
									"end": 587,
									"name": "tag",
									"source": 17,
									"value": "8"
								},
								{
									"begin": 365,
									"end": 587,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 458,
									"end": 462,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 498,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 485,
									"end": 494,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 481,
									"end": 499,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 473,
									"end": 499,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 473,
									"end": 499,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 509,
									"end": 580,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "48"
								},
								{
									"begin": 577,
									"end": 578,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 566,
									"end": 575,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 562,
									"end": 579,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 553,
									"end": 559,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 509,
									"end": 580,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 509,
									"end": 580,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 509,
									"end": 580,
									"name": "tag",
									"source": 17,
									"value": "48"
								},
								{
									"begin": 509,
									"end": 580,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 365,
									"end": 587,
									"name": "SWAP3",
									"source": 17
								},
								{
									"begin": 365,
									"end": 587,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 365,
									"end": 587,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 365,
									"end": 587,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 365,
									"end": 587,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 593,
									"end": 692,
									"name": "tag",
									"source": 17,
									"value": "21"
								},
								{
									"begin": 593,
									"end": 692,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 645,
									"end": 651,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 679,
									"end": 684,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 673,
									"end": 685,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 663,
									"end": 685,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 663,
									"end": 685,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 593,
									"end": 692,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 593,
									"end": 692,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 593,
									"end": 692,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 593,
									"end": 692,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 698,
									"end": 878,
									"name": "tag",
									"source": 17,
									"value": "22"
								},
								{
									"begin": 698,
									"end": 878,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 746,
									"end": 823,
									"name": "PUSH",
									"source": 17,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 743,
									"end": 744,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 736,
									"end": 824,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 843,
									"end": 847,
									"name": "PUSH",
									"source": 17,
									"value": "41"
								},
								{
									"begin": 840,
									"end": 841,
									"name": "PUSH",
									"source": 17,
									"value": "4"
								},
								{
									"begin": 833,
									"end": 848,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 867,
									"end": 871,
									"name": "PUSH",
									"source": 17,
									"value": "24"
								},
								{
									"begin": 864,
									"end": 865,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 857,
									"end": 872,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 884,
									"end": 1064,
									"name": "tag",
									"source": 17,
									"value": "23"
								},
								{
									"begin": 884,
									"end": 1064,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 932,
									"end": 1009,
									"name": "PUSH",
									"source": 17,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 929,
									"end": 930,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 922,
									"end": 1010,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 1029,
									"end": 1033,
									"name": "PUSH",
									"source": 17,
									"value": "22"
								},
								{
									"begin": 1026,
									"end": 1027,
									"name": "PUSH",
									"source": 17,
									"value": "4"
								},
								{
									"begin": 1019,
									"end": 1034,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 1053,
									"end": 1057,
									"name": "PUSH",
									"source": 17,
									"value": "24"
								},
								{
									"begin": 1050,
									"end": 1051,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 1043,
									"end": 1058,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 1070,
									"end": 1390,
									"name": "tag",
									"source": 17,
									"value": "24"
								},
								{
									"begin": 1070,
									"end": 1390,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1114,
									"end": 1120,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 1151,
									"end": 1152,
									"name": "PUSH",
									"source": 17,
									"value": "2"
								},
								{
									"begin": 1145,
									"end": 1149,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 1141,
									"end": 1153,
									"name": "DIV",
									"source": 17
								},
								{
									"begin": 1131,
									"end": 1153,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 1131,
									"end": 1153,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1198,
									"end": 1199,
									"name": "PUSH",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 1192,
									"end": 1196,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 1188,
									"end": 1200,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 1219,
									"end": 1237,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 1209,
									"end": 1290,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "53"
								},
								{
									"begin": 1209,
									"end": 1290,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 1275,
									"end": 1279,
									"name": "PUSH",
									"source": 17,
									"value": "7F"
								},
								{
									"begin": 1267,
									"end": 1273,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 1263,
									"end": 1280,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 1253,
									"end": 1280,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 1253,
									"end": 1280,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1209,
									"end": 1290,
									"name": "tag",
									"source": 17,
									"value": "53"
								},
								{
									"begin": 1209,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1337,
									"end": 1339,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 1329,
									"end": 1335,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 1326,
									"end": 1340,
									"name": "LT",
									"source": 17
								},
								{
									"begin": 1306,
									"end": 1324,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 1303,
									"end": 1341,
									"name": "SUB",
									"source": 17
								},
								{
									"begin": 1300,
									"end": 1384,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "54"
								},
								{
									"begin": 1300,
									"end": 1384,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 1356,
									"end": 1374,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "55"
								},
								{
									"begin": 1356,
									"end": 1374,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "23"
								},
								{
									"begin": 1356,
									"end": 1374,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 1356,
									"end": 1374,
									"name": "tag",
									"source": 17,
									"value": "55"
								},
								{
									"begin": 1356,
									"end": 1374,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1300,
									"end": 1384,
									"name": "tag",
									"source": 17,
									"value": "54"
								},
								{
									"begin": 1300,
									"end": 1384,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1121,
									"end": 1390,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1070,
									"end": 1390,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 1070,
									"end": 1390,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 1070,
									"end": 1390,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1070,
									"end": 1390,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 1396,
									"end": 1537,
									"name": "tag",
									"source": 17,
									"value": "25"
								},
								{
									"begin": 1396,
									"end": 1537,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1445,
									"end": 1449,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 1468,
									"end": 1471,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 1460,
									"end": 1471,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 1460,
									"end": 1471,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1491,
									"end": 1494,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 1488,
									"end": 1489,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 1481,
									"end": 1495,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 1525,
									"end": 1529,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 1522,
									"end": 1523,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 1512,
									"end": 1530,
									"name": "KECCAK256",
									"source": 17
								},
								{
									"begin": 1504,
									"end": 1530,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 1504,
									"end": 1530,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1396,
									"end": 1537,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 1396,
									"end": 1537,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 1396,
									"end": 1537,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1396,
									"end": 1537,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 1543,
									"end": 1636,
									"name": "tag",
									"source": 17,
									"value": "26"
								},
								{
									"begin": 1543,
									"end": 1636,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1580,
									"end": 1586,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 1627,
									"end": 1629,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 1622,
									"end": 1624,
									"name": "PUSH",
									"source": 17,
									"value": "1F"
								},
								{
									"begin": 1615,
									"end": 1620,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 1611,
									"end": 1625,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 1607,
									"end": 1630,
									"name": "DIV",
									"source": 17
								},
								{
									"begin": 1597,
									"end": 1630,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 1597,
									"end": 1630,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1543,
									"end": 1636,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 1543,
									"end": 1636,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 1543,
									"end": 1636,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1543,
									"end": 1636,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 1642,
									"end": 1749,
									"name": "tag",
									"source": 17,
									"value": "27"
								},
								{
									"begin": 1642,
									"end": 1749,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1686,
									"end": 1694,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 1736,
									"end": 1741,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 1730,
									"end": 1734,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 1726,
									"end": 1742,
									"name": "SHL",
									"source": 17
								},
								{
									"begin": 1705,
									"end": 1742,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 1705,
									"end": 1742,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1642,
									"end": 1749,
									"name": "SWAP3",
									"source": 17
								},
								{
									"begin": 1642,
									"end": 1749,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 1642,
									"end": 1749,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1642,
									"end": 1749,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1642,
									"end": 1749,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 1755,
									"end": 2148,
									"name": "tag",
									"source": 17,
									"value": "28"
								},
								{
									"begin": 1755,
									"end": 2148,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1824,
									"end": 1830,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 1874,
									"end": 1875,
									"name": "PUSH",
									"source": 17,
									"value": "8"
								},
								{
									"begin": 1862,
									"end": 1872,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 1858,
									"end": 1876,
									"name": "MUL",
									"source": 17
								},
								{
									"begin": 1897,
									"end": 1994,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "60"
								},
								{
									"begin": 1927,
									"end": 1993,
									"name": "PUSH",
									"source": 17,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1916,
									"end": 1925,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 1897,
									"end": 1994,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "27"
								},
								{
									"begin": 1897,
									"end": 1994,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 1897,
									"end": 1994,
									"name": "tag",
									"source": 17,
									"value": "60"
								},
								{
									"begin": 1897,
									"end": 1994,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 2015,
									"end": 2054,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "61"
								},
								{
									"begin": 2045,
									"end": 2053,
									"name": "DUP7",
									"source": 17
								},
								{
									"begin": 2034,
									"end": 2043,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 2015,
									"end": 2054,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "27"
								},
								{
									"begin": 2015,
									"end": 2054,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 2015,
									"end": 2054,
									"name": "tag",
									"source": 17,
									"value": "61"
								},
								{
									"begin": 2015,
									"end": 2054,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 2003,
									"end": 2054,
									"name": "SWAP6",
									"source": 17
								},
								{
									"begin": 2003,
									"end": 2054,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2087,
									"end": 2091,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 2083,
									"end": 2092,
									"name": "NOT",
									"source": 17
								},
								{
									"begin": 2076,
									"end": 2081,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 2072,
									"end": 2093,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 2063,
									"end": 2093,
									"name": "SWAP4",
									"source": 17
								},
								{
									"begin": 2063,
									"end": 2093,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2136,
									"end": 2140,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 2126,
									"end": 2134,
									"name": "DUP7",
									"source": 17
								},
								{
									"begin": 2122,
									"end": 2141,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 2115,
									"end": 2120,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 2112,
									"end": 2142,
									"name": "OR",
									"source": 17
								},
								{
									"begin": 2102,
									"end": 2142,
									"name": "SWAP3",
									"source": 17
								},
								{
									"begin": 2102,
									"end": 2142,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1831,
									"end": 2148,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1831,
									"end": 2148,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1755,
									"end": 2148,
									"name": "SWAP4",
									"source": 17
								},
								{
									"begin": 1755,
									"end": 2148,
									"name": "SWAP3",
									"source": 17
								},
								{
									"begin": 1755,
									"end": 2148,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1755,
									"end": 2148,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1755,
									"end": 2148,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1755,
									"end": 2148,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 2154,
									"end": 2231,
									"name": "tag",
									"source": 17,
									"value": "29"
								},
								{
									"begin": 2154,
									"end": 2231,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 2191,
									"end": 2198,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 2220,
									"end": 2225,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 2209,
									"end": 2225,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 2209,
									"end": 2225,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2154,
									"end": 2231,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 2154,
									"end": 2231,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 2154,
									"end": 2231,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2154,
									"end": 2231,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 2237,
									"end": 2297,
									"name": "tag",
									"source": 17,
									"value": "30"
								},
								{
									"begin": 2237,
									"end": 2297,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 2265,
									"end": 2268,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 2286,
									"end": 2291,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 2279,
									"end": 2291,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 2279,
									"end": 2291,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2237,
									"end": 2297,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 2237,
									"end": 2297,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 2237,
									"end": 2297,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2237,
									"end": 2297,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 2303,
									"end": 2445,
									"name": "tag",
									"source": 17,
									"value": "31"
								},
								{
									"begin": 2303,
									"end": 2445,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 2353,
									"end": 2362,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 2386,
									"end": 2439,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "65"
								},
								{
									"begin": 2404,
									"end": 2438,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "66"
								},
								{
									"begin": 2413,
									"end": 2437,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "67"
								},
								{
									"begin": 2431,
									"end": 2436,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 2413,
									"end": 2437,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "29"
								},
								{
									"begin": 2413,
									"end": 2437,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 2413,
									"end": 2437,
									"name": "tag",
									"source": 17,
									"value": "67"
								},
								{
									"begin": 2413,
									"end": 2437,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 2404,
									"end": 2438,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "30"
								},
								{
									"begin": 2404,
									"end": 2438,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 2404,
									"end": 2438,
									"name": "tag",
									"source": 17,
									"value": "66"
								},
								{
									"begin": 2404,
									"end": 2438,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 2386,
									"end": 2439,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "29"
								},
								{
									"begin": 2386,
									"end": 2439,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 2386,
									"end": 2439,
									"name": "tag",
									"source": 17,
									"value": "65"
								},
								{
									"begin": 2386,
									"end": 2439,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 2373,
									"end": 2439,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 2373,
									"end": 2439,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2303,
									"end": 2445,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 2303,
									"end": 2445,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 2303,
									"end": 2445,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2303,
									"end": 2445,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 2451,
									"end": 2526,
									"name": "tag",
									"source": 17,
									"value": "32"
								},
								{
									"begin": 2451,
									"end": 2526,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 2494,
									"end": 2497,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 2515,
									"end": 2520,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 2508,
									"end": 2520,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 2508,
									"end": 2520,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2451,
									"end": 2526,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 2451,
									"end": 2526,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 2451,
									"end": 2526,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2451,
									"end": 2526,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 2532,
									"end": 2801,
									"name": "tag",
									"source": 17,
									"value": "33"
								},
								{
									"begin": 2532,
									"end": 2801,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 2642,
									"end": 2681,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "70"
								},
								{
									"begin": 2673,
									"end": 2680,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 2642,
									"end": 2681,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "31"
								},
								{
									"begin": 2642,
									"end": 2681,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 2642,
									"end": 2681,
									"name": "tag",
									"source": 17,
									"value": "70"
								},
								{
									"begin": 2642,
									"end": 2681,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 2703,
									"end": 2794,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "71"
								},
								{
									"begin": 2752,
									"end": 2793,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "72"
								},
								{
									"begin": 2776,
									"end": 2792,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 2752,
									"end": 2793,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "32"
								},
								{
									"begin": 2752,
									"end": 2793,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 2752,
									"end": 2793,
									"name": "tag",
									"source": 17,
									"value": "72"
								},
								{
									"begin": 2752,
									"end": 2793,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 2744,
									"end": 2750,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 2737,
									"end": 2741,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 2731,
									"end": 2742,
									"name": "SLOAD",
									"source": 17
								},
								{
									"begin": 2703,
									"end": 2794,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "28"
								},
								{
									"begin": 2703,
									"end": 2794,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 2703,
									"end": 2794,
									"name": "tag",
									"source": 17,
									"value": "71"
								},
								{
									"begin": 2703,
									"end": 2794,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 2697,
									"end": 2701,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 2690,
									"end": 2795,
									"name": "SSTORE",
									"source": 17
								},
								{
									"begin": 2608,
									"end": 2801,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2532,
									"end": 2801,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2532,
									"end": 2801,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2532,
									"end": 2801,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2532,
									"end": 2801,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 2807,
									"end": 2880,
									"name": "tag",
									"source": 17,
									"value": "34"
								},
								{
									"begin": 2807,
									"end": 2880,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 2852,
									"end": 2855,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 2807,
									"end": 2880,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 2807,
									"end": 2880,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 2886,
									"end": 3075,
									"name": "tag",
									"source": 17,
									"value": "35"
								},
								{
									"begin": 2886,
									"end": 3075,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 2963,
									"end": 2995,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "75"
								},
								{
									"begin": 2963,
									"end": 2995,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "34"
								},
								{
									"begin": 2963,
									"end": 2995,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 2963,
									"end": 2995,
									"name": "tag",
									"source": 17,
									"value": "75"
								},
								{
									"begin": 2963,
									"end": 2995,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 3004,
									"end": 3069,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "76"
								},
								{
									"begin": 3062,
									"end": 3068,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 3054,
									"end": 3060,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 3048,
									"end": 3052,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 3004,
									"end": 3069,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "33"
								},
								{
									"begin": 3004,
									"end": 3069,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 3004,
									"end": 3069,
									"name": "tag",
									"source": 17,
									"value": "76"
								},
								{
									"begin": 3004,
									"end": 3069,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 2939,
									"end": 3075,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2886,
									"end": 3075,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2886,
									"end": 3075,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2886,
									"end": 3075,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 3081,
									"end": 3267,
									"name": "tag",
									"source": 17,
									"value": "36"
								},
								{
									"begin": 3081,
									"end": 3267,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 3141,
									"end": 3261,
									"name": "tag",
									"source": 17,
									"value": "78"
								},
								{
									"begin": 3141,
									"end": 3261,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 3158,
									"end": 3161,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 3151,
									"end": 3156,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 3148,
									"end": 3162,
									"name": "LT",
									"source": 17
								},
								{
									"begin": 3141,
									"end": 3261,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 3141,
									"end": 3261,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "80"
								},
								{
									"begin": 3141,
									"end": 3261,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 3212,
									"end": 3251,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "81"
								},
								{
									"begin": 3249,
									"end": 3250,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 3242,
									"end": 3247,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 3212,
									"end": 3251,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "35"
								},
								{
									"begin": 3212,
									"end": 3251,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 3212,
									"end": 3251,
									"name": "tag",
									"source": 17,
									"value": "81"
								},
								{
									"begin": 3212,
									"end": 3251,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 3185,
									"end": 3186,
									"name": "PUSH",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 3178,
									"end": 3183,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 3174,
									"end": 3187,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 3165,
									"end": 3187,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 3165,
									"end": 3187,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 3141,
									"end": 3261,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "78"
								},
								{
									"begin": 3141,
									"end": 3261,
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 3141,
									"end": 3261,
									"name": "tag",
									"source": 17,
									"value": "80"
								},
								{
									"begin": 3141,
									"end": 3261,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 3081,
									"end": 3267,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 3081,
									"end": 3267,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 3081,
									"end": 3267,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 3273,
									"end": 3816,
									"name": "tag",
									"source": 17,
									"value": "37"
								},
								{
									"begin": 3273,
									"end": 3816,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 3374,
									"end": 3376,
									"name": "PUSH",
									"source": 17,
									"value": "1F"
								},
								{
									"begin": 3369,
									"end": 3372,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 3366,
									"end": 3377,
									"name": "GT",
									"source": 17
								},
								{
									"begin": 3363,
									"end": 3809,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 3363,
									"end": 3809,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "83"
								},
								{
									"begin": 3363,
									"end": 3809,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 3408,
									"end": 3446,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "84"
								},
								{
									"begin": 3440,
									"end": 3445,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 3408,
									"end": 3446,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "25"
								},
								{
									"begin": 3408,
									"end": 3446,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 3408,
									"end": 3446,
									"name": "tag",
									"source": 17,
									"value": "84"
								},
								{
									"begin": 3408,
									"end": 3446,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 3492,
									"end": 3521,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "85"
								},
								{
									"begin": 3510,
									"end": 3520,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 3492,
									"end": 3521,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "26"
								},
								{
									"begin": 3492,
									"end": 3521,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 3492,
									"end": 3521,
									"name": "tag",
									"source": 17,
									"value": "85"
								},
								{
									"begin": 3492,
									"end": 3521,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 3482,
									"end": 3490,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 3478,
									"end": 3522,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 3675,
									"end": 3677,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 3663,
									"end": 3673,
									"name": "DUP6",
									"source": 17
								},
								{
									"begin": 3660,
									"end": 3678,
									"name": "LT",
									"source": 17
								},
								{
									"begin": 3657,
									"end": 3706,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 3657,
									"end": 3706,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "86"
								},
								{
									"begin": 3657,
									"end": 3706,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 3696,
									"end": 3704,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 3681,
									"end": 3704,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 3681,
									"end": 3704,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 3657,
									"end": 3706,
									"name": "tag",
									"source": 17,
									"value": "86"
								},
								{
									"begin": 3657,
									"end": 3706,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 3719,
									"end": 3799,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "87"
								},
								{
									"begin": 3775,
									"end": 3797,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "88"
								},
								{
									"begin": 3793,
									"end": 3796,
									"name": "DUP6",
									"source": 17
								},
								{
									"begin": 3775,
									"end": 3797,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "26"
								},
								{
									"begin": 3775,
									"end": 3797,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 3775,
									"end": 3797,
									"name": "tag",
									"source": 17,
									"value": "88"
								},
								{
									"begin": 3775,
									"end": 3797,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 3765,
									"end": 3773,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 3761,
									"end": 3798,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 3748,
									"end": 3759,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 3719,
									"end": 3799,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "36"
								},
								{
									"begin": 3719,
									"end": 3799,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 3719,
									"end": 3799,
									"name": "tag",
									"source": 17,
									"value": "87"
								},
								{
									"begin": 3719,
									"end": 3799,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 3378,
									"end": 3809,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 3378,
									"end": 3809,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 3363,
									"end": 3809,
									"name": "tag",
									"source": 17,
									"value": "83"
								},
								{
									"begin": 3363,
									"end": 3809,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 3273,
									"end": 3816,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 3273,
									"end": 3816,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 3273,
									"end": 3816,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 3273,
									"end": 3816,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 3822,
									"end": 3939,
									"name": "tag",
									"source": 17,
									"value": "38"
								},
								{
									"begin": 3822,
									"end": 3939,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 3876,
									"end": 3884,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 3926,
									"end": 3931,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 3920,
									"end": 3924,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 3916,
									"end": 3932,
									"name": "SHR",
									"source": 17
								},
								{
									"begin": 3895,
									"end": 3932,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 3895,
									"end": 3932,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 3822,
									"end": 3939,
									"name": "SWAP3",
									"source": 17
								},
								{
									"begin": 3822,
									"end": 3939,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 3822,
									"end": 3939,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 3822,
									"end": 3939,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 3822,
									"end": 3939,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 3945,
									"end": 4114,
									"name": "tag",
									"source": 17,
									"value": "39"
								},
								{
									"begin": 3945,
									"end": 4114,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 3989,
									"end": 3995,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 4022,
									"end": 4073,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "91"
								},
								{
									"begin": 4070,
									"end": 4071,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 4066,
									"end": 4072,
									"name": "NOT",
									"source": 17
								},
								{
									"begin": 4058,
									"end": 4063,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 4055,
									"end": 4056,
									"name": "PUSH",
									"source": 17,
									"value": "8"
								},
								{
									"begin": 4051,
									"end": 4064,
									"name": "MUL",
									"source": 17
								},
								{
									"begin": 4022,
									"end": 4073,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "38"
								},
								{
									"begin": 4022,
									"end": 4073,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 4022,
									"end": 4073,
									"name": "tag",
									"source": 17,
									"value": "91"
								},
								{
									"begin": 4022,
									"end": 4073,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 4018,
									"end": 4074,
									"name": "NOT",
									"source": 17
								},
								{
									"begin": 4103,
									"end": 4107,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 4097,
									"end": 4101,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 4093,
									"end": 4108,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 4083,
									"end": 4108,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 4083,
									"end": 4108,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 3996,
									"end": 4114,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 3945,
									"end": 4114,
									"name": "SWAP3",
									"source": 17
								},
								{
									"begin": 3945,
									"end": 4114,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 3945,
									"end": 4114,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 3945,
									"end": 4114,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 3945,
									"end": 4114,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 4119,
									"end": 4414,
									"name": "tag",
									"source": 17,
									"value": "40"
								},
								{
									"begin": 4119,
									"end": 4414,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 4195,
									"end": 4199,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 4341,
									"end": 4370,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "93"
								},
								{
									"begin": 4366,
									"end": 4369,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 4360,
									"end": 4364,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 4341,
									"end": 4370,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "39"
								},
								{
									"begin": 4341,
									"end": 4370,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 4341,
									"end": 4370,
									"name": "tag",
									"source": 17,
									"value": "93"
								},
								{
									"begin": 4341,
									"end": 4370,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 4333,
									"end": 4370,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 4333,
									"end": 4370,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 4403,
									"end": 4406,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 4400,
									"end": 4401,
									"name": "PUSH",
									"source": 17,
									"value": "2"
								},
								{
									"begin": 4396,
									"end": 4407,
									"name": "MUL",
									"source": 17
								},
								{
									"begin": 4390,
									"end": 4394,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 4387,
									"end": 4408,
									"name": "OR",
									"source": 17
								},
								{
									"begin": 4379,
									"end": 4408,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 4379,
									"end": 4408,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 4119,
									"end": 4414,
									"name": "SWAP3",
									"source": 17
								},
								{
									"begin": 4119,
									"end": 4414,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 4119,
									"end": 4414,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 4119,
									"end": 4414,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 4119,
									"end": 4414,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 4419,
									"end": 5814,
									"name": "tag",
									"source": 17,
									"value": "13"
								},
								{
									"begin": 4419,
									"end": 5814,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 4536,
									"end": 4573,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "95"
								},
								{
									"begin": 4569,
									"end": 4572,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 4536,
									"end": 4573,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "21"
								},
								{
									"begin": 4536,
									"end": 4573,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 4536,
									"end": 4573,
									"name": "tag",
									"source": 17,
									"value": "95"
								},
								{
									"begin": 4536,
									"end": 4573,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 4638,
									"end": 4656,
									"name": "PUSH",
									"source": 17,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4630,
									"end": 4636,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 4627,
									"end": 4657,
									"name": "GT",
									"source": 17
								},
								{
									"begin": 4624,
									"end": 4680,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 4624,
									"end": 4680,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "96"
								},
								{
									"begin": 4624,
									"end": 4680,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 4660,
									"end": 4678,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "97"
								},
								{
									"begin": 4660,
									"end": 4678,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "22"
								},
								{
									"begin": 4660,
									"end": 4678,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 4660,
									"end": 4678,
									"name": "tag",
									"source": 17,
									"value": "97"
								},
								{
									"begin": 4660,
									"end": 4678,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 4624,
									"end": 4680,
									"name": "tag",
									"source": 17,
									"value": "96"
								},
								{
									"begin": 4624,
									"end": 4680,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 4704,
									"end": 4742,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "98"
								},
								{
									"begin": 4736,
									"end": 4740,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 4730,
									"end": 4741,
									"name": "SLOAD",
									"source": 17
								},
								{
									"begin": 4704,
									"end": 4742,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "24"
								},
								{
									"begin": 4704,
									"end": 4742,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 4704,
									"end": 4742,
									"name": "tag",
									"source": 17,
									"value": "98"
								},
								{
									"begin": 4704,
									"end": 4742,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 4789,
									"end": 4856,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "99"
								},
								{
									"begin": 4849,
									"end": 4855,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 4841,
									"end": 4847,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 4835,
									"end": 4839,
									"name": "DUP6",
									"source": 17
								},
								{
									"begin": 4789,
									"end": 4856,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "37"
								},
								{
									"begin": 4789,
									"end": 4856,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 4789,
									"end": 4856,
									"name": "tag",
									"source": 17,
									"value": "99"
								},
								{
									"begin": 4789,
									"end": 4856,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 4883,
									"end": 4884,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 4907,
									"end": 4911,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 4894,
									"end": 4911,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 4894,
									"end": 4911,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 4939,
									"end": 4941,
									"name": "PUSH",
									"source": 17,
									"value": "1F"
								},
								{
									"begin": 4931,
									"end": 4937,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 4928,
									"end": 4942,
									"name": "GT",
									"source": 17
								},
								{
									"begin": 4956,
									"end": 4957,
									"name": "PUSH",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 4951,
									"end": 5569,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 4951,
									"end": 5569,
									"name": "EQ",
									"source": 17
								},
								{
									"begin": 4951,
									"end": 5569,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "101"
								},
								{
									"begin": 4951,
									"end": 5569,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 5613,
									"end": 5614,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 5630,
									"end": 5636,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 5627,
									"end": 5704,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 5627,
									"end": 5704,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "102"
								},
								{
									"begin": 5627,
									"end": 5704,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 5679,
									"end": 5688,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 5674,
									"end": 5677,
									"name": "DUP8",
									"source": 17
								},
								{
									"begin": 5670,
									"end": 5689,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 5664,
									"end": 5690,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 5655,
									"end": 5690,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 5655,
									"end": 5690,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 5627,
									"end": 5704,
									"name": "tag",
									"source": 17,
									"value": "102"
								},
								{
									"begin": 5627,
									"end": 5704,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 5730,
									"end": 5797,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "103"
								},
								{
									"begin": 5790,
									"end": 5796,
									"name": "DUP6",
									"source": 17
								},
								{
									"begin": 5783,
									"end": 5788,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 5730,
									"end": 5797,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "40"
								},
								{
									"begin": 5730,
									"end": 5797,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 5730,
									"end": 5797,
									"name": "tag",
									"source": 17,
									"value": "103"
								},
								{
									"begin": 5730,
									"end": 5797,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 5724,
									"end": 5728,
									"name": "DUP7",
									"source": 17
								},
								{
									"begin": 5717,
									"end": 5798,
									"name": "SSTORE",
									"source": 17
								},
								{
									"begin": 5586,
									"end": 5808,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 4921,
									"end": 5808,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "100"
								},
								{
									"begin": 4921,
									"end": 5808,
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 4951,
									"end": 5569,
									"name": "tag",
									"source": 17,
									"value": "101"
								},
								{
									"begin": 4951,
									"end": 5569,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 5003,
									"end": 5007,
									"name": "PUSH",
									"source": 17,
									"value": "1F"
								},
								{
									"begin": 4999,
									"end": 5008,
									"name": "NOT",
									"source": 17
								},
								{
									"begin": 4991,
									"end": 4997,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 4987,
									"end": 5009,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 5037,
									"end": 5074,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "104"
								},
								{
									"begin": 5069,
									"end": 5073,
									"name": "DUP7",
									"source": 17
								},
								{
									"begin": 5037,
									"end": 5074,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "25"
								},
								{
									"begin": 5037,
									"end": 5074,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 5037,
									"end": 5074,
									"name": "tag",
									"source": 17,
									"value": "104"
								},
								{
									"begin": 5037,
									"end": 5074,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 5096,
									"end": 5097,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 5110,
									"end": 5318,
									"name": "tag",
									"source": 17,
									"value": "105"
								},
								{
									"begin": 5110,
									"end": 5318,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 5124,
									"end": 5131,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 5121,
									"end": 5122,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 5118,
									"end": 5132,
									"name": "LT",
									"source": 17
								},
								{
									"begin": 5110,
									"end": 5318,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 5110,
									"end": 5318,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "107"
								},
								{
									"begin": 5110,
									"end": 5318,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 5203,
									"end": 5212,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 5198,
									"end": 5201,
									"name": "DUP10",
									"source": 17
								},
								{
									"begin": 5194,
									"end": 5213,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 5188,
									"end": 5214,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 5180,
									"end": 5186,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 5173,
									"end": 5215,
									"name": "SSTORE",
									"source": 17
								},
								{
									"begin": 5254,
									"end": 5255,
									"name": "PUSH",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 5246,
									"end": 5252,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 5242,
									"end": 5256,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 5232,
									"end": 5256,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 5232,
									"end": 5256,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 5301,
									"end": 5303,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 5290,
									"end": 5299,
									"name": "DUP6",
									"source": 17
								},
								{
									"begin": 5286,
									"end": 5304,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 5273,
									"end": 5304,
									"name": "SWAP5",
									"source": 17
								},
								{
									"begin": 5273,
									"end": 5304,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 5147,
									"end": 5151,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 5144,
									"end": 5145,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 5140,
									"end": 5152,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 5135,
									"end": 5152,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 5135,
									"end": 5152,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 5110,
									"end": 5318,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "105"
								},
								{
									"begin": 5110,
									"end": 5318,
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 5110,
									"end": 5318,
									"name": "tag",
									"source": 17,
									"value": "107"
								},
								{
									"begin": 5110,
									"end": 5318,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 5346,
									"end": 5352,
									"name": "DUP7",
									"source": 17
								},
								{
									"begin": 5337,
									"end": 5344,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 5334,
									"end": 5353,
									"name": "LT",
									"source": 17
								},
								{
									"begin": 5331,
									"end": 5510,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 5331,
									"end": 5510,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "108"
								},
								{
									"begin": 5331,
									"end": 5510,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 5404,
									"end": 5413,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 5399,
									"end": 5402,
									"name": "DUP10",
									"source": 17
								},
								{
									"begin": 5395,
									"end": 5414,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 5389,
									"end": 5415,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 5447,
									"end": 5495,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "109"
								},
								{
									"begin": 5489,
									"end": 5493,
									"name": "PUSH",
									"source": 17,
									"value": "1F"
								},
								{
									"begin": 5481,
									"end": 5487,
									"name": "DUP10",
									"source": 17
								},
								{
									"begin": 5477,
									"end": 5494,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 5466,
									"end": 5475,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 5447,
									"end": 5495,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "39"
								},
								{
									"begin": 5447,
									"end": 5495,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 5447,
									"end": 5495,
									"name": "tag",
									"source": 17,
									"value": "109"
								},
								{
									"begin": 5447,
									"end": 5495,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 5439,
									"end": 5445,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 5432,
									"end": 5496,
									"name": "SSTORE",
									"source": 17
								},
								{
									"begin": 5354,
									"end": 5510,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 5331,
									"end": 5510,
									"name": "tag",
									"source": 17,
									"value": "108"
								},
								{
									"begin": 5331,
									"end": 5510,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 5556,
									"end": 5557,
									"name": "PUSH",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 5552,
									"end": 5553,
									"name": "PUSH",
									"source": 17,
									"value": "2"
								},
								{
									"begin": 5544,
									"end": 5550,
									"name": "DUP9",
									"source": 17
								},
								{
									"begin": 5540,
									"end": 5554,
									"name": "MUL",
									"source": 17
								},
								{
									"begin": 5536,
									"end": 5558,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 5530,
									"end": 5534,
									"name": "DUP9",
									"source": 17
								},
								{
									"begin": 5523,
									"end": 5559,
									"name": "SSTORE",
									"source": 17
								},
								{
									"begin": 4958,
									"end": 5569,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 4958,
									"end": 5569,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 4958,
									"end": 5569,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 4921,
									"end": 5808,
									"name": "tag",
									"source": 17,
									"value": "100"
								},
								{
									"begin": 4921,
									"end": 5808,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 4921,
									"end": 5808,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 4511,
									"end": 5814,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 4511,
									"end": 5814,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 4511,
									"end": 5814,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 4419,
									"end": 5814,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 4419,
									"end": 5814,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 4419,
									"end": 5814,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 289,
									"end": 1015,
									"name": "tag",
									"source": 14,
									"value": "16"
								},
								{
									"begin": 289,
									"end": 1015,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 289,
									"end": 1015,
									"name": "PUSH #[$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 289,
									"end": 1015,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 289,
									"end": 1015,
									"name": "PUSH [$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 289,
									"end": 1015,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 289,
									"end": 1015,
									"name": "CODECOPY",
									"source": 14
								},
								{
									"begin": 289,
									"end": 1015,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 289,
									"end": 1015,
									"name": "RETURN",
									"source": 14
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e06809d39f80a7006582920d1d879ae3c27af9cb995beca63c3b95262bd5dd3264736f6c63430008180033",
									".code": [
										{
											"begin": 289,
											"end": 1015,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "tag",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "PUSH",
											"source": 14,
											"value": "70A08231"
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "25"
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "PUSH",
											"source": 14,
											"value": "A22CB465"
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "26"
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "PUSH",
											"source": 14,
											"value": "A22CB465"
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "19"
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "PUSH",
											"source": 14,
											"value": "B88D4FDE"
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "PUSH",
											"source": 14,
											"value": "C87B56DD"
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "21"
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "PUSH",
											"source": 14,
											"value": "E3D61EB3"
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "22"
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "PUSH",
											"source": 14,
											"value": "E985E9C5"
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "23"
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "PUSH",
											"source": 14,
											"value": "F2FDE38B"
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "tag",
											"source": 14,
											"value": "26"
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "PUSH",
											"source": 14,
											"value": "70A08231"
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "14"
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "PUSH",
											"source": 14,
											"value": "715018A6"
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "15"
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "PUSH",
											"source": 14,
											"value": "8DA5CB5B"
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "16"
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "PUSH",
											"source": 14,
											"value": "95D89B41"
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "17"
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "PUSH",
											"source": 14,
											"value": "A1448194"
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "18"
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "tag",
											"source": 14,
											"value": "25"
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "PUSH",
											"source": 14,
											"value": "23B872DD"
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "27"
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "PUSH",
											"source": 14,
											"value": "23B872DD"
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "8"
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "PUSH",
											"source": 14,
											"value": "2F745C59"
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "9"
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "PUSH",
											"source": 14,
											"value": "42842E0E"
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "10"
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "PUSH",
											"source": 14,
											"value": "4BB30912"
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "11"
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "PUSH",
											"source": 14,
											"value": "4F6CCCE7"
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "12"
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "PUSH",
											"source": 14,
											"value": "6352211E"
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "13"
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "tag",
											"source": 14,
											"value": "27"
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "PUSH",
											"source": 14,
											"value": "1FFC9A7"
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "PUSH",
											"source": 14,
											"value": "6FDDE03"
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "PUSH",
											"source": 14,
											"value": "81812FC"
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "5"
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "PUSH",
											"source": 14,
											"value": "95EA7B3"
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "6"
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "PUSH",
											"source": 14,
											"value": "18160DDD"
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "7"
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "tag",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 289,
											"end": 1015,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 447,
											"end": 730,
											"name": "tag",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 447,
											"end": 730,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 447,
											"end": 730,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "28"
										},
										{
											"begin": 447,
											"end": 730,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 447,
											"end": 730,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 447,
											"end": 730,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 447,
											"end": 730,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 447,
											"end": 730,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 447,
											"end": 730,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 447,
											"end": 730,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 447,
											"end": 730,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "29"
										},
										{
											"begin": 447,
											"end": 730,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 447,
											"end": 730,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 447,
											"end": 730,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "30"
										},
										{
											"begin": 447,
											"end": 730,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 447,
											"end": 730,
											"name": "tag",
											"source": 14,
											"value": "29"
										},
										{
											"begin": 447,
											"end": 730,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 447,
											"end": 730,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "31"
										},
										{
											"begin": 447,
											"end": 730,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 447,
											"end": 730,
											"name": "tag",
											"source": 14,
											"value": "28"
										},
										{
											"begin": 447,
											"end": 730,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 447,
											"end": 730,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 447,
											"end": 730,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 447,
											"end": 730,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "32"
										},
										{
											"begin": 447,
											"end": 730,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 447,
											"end": 730,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 447,
											"end": 730,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "33"
										},
										{
											"begin": 447,
											"end": 730,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 447,
											"end": 730,
											"name": "tag",
											"source": 14,
											"value": "32"
										},
										{
											"begin": 447,
											"end": 730,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 447,
											"end": 730,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 447,
											"end": 730,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 447,
											"end": 730,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 447,
											"end": 730,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 447,
											"end": 730,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 447,
											"end": 730,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 447,
											"end": 730,
											"name": "RETURN",
											"source": 14
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 2365,
											"end": 2454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 2365,
											"end": 2454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 3323,
											"end": 3436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 3323,
											"end": 3436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2062,
											"end": 2164,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 2062,
											"end": 2164,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2062,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 2062,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 2062,
											"end": 2164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2062,
											"end": 2164,
											"name": "tag",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 2062,
											"end": 2164,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2062,
											"end": 2164,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2062,
											"end": 2164,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2062,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 2062,
											"end": 2164,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2062,
											"end": 2164,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2062,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 2062,
											"end": 2164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2062,
											"end": 2164,
											"name": "tag",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 2062,
											"end": 2164,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2062,
											"end": 2164,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2062,
											"end": 2164,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2062,
											"end": 2164,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2062,
											"end": 2164,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2062,
											"end": 2164,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2062,
											"end": 2164,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2062,
											"end": 2164,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 4143,
											"end": 4721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 4143,
											"end": 4721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 1736,
											"end": 1991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "tag",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 1736,
											"end": 1991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "tag",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 1736,
											"end": 1991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "tag",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 4787,
											"end": 4919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 4787,
											"end": 4919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 233,
											"end": 337,
											"name": "tag",
											"source": 15,
											"value": "11"
										},
										{
											"begin": 233,
											"end": 337,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 233,
											"end": 337,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "63"
										},
										{
											"begin": 233,
											"end": 337,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 233,
											"end": 337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 233,
											"end": 337,
											"name": "tag",
											"source": 15,
											"value": "63"
										},
										{
											"begin": 233,
											"end": 337,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 233,
											"end": 337,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 233,
											"end": 337,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 233,
											"end": 337,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "65"
										},
										{
											"begin": 233,
											"end": 337,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 233,
											"end": 337,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 233,
											"end": 337,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "66"
										},
										{
											"begin": 233,
											"end": 337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 233,
											"end": 337,
											"name": "tag",
											"source": 15,
											"value": "65"
										},
										{
											"begin": 233,
											"end": 337,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 233,
											"end": 337,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 233,
											"end": 337,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 233,
											"end": 337,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 233,
											"end": 337,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 233,
											"end": 337,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 233,
											"end": 337,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 233,
											"end": 337,
											"name": "RETURN",
											"source": 15
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2236,
											"end": 2462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "tag",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 2236,
											"end": 2462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "tag",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 2236,
											"end": 2462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "tag",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 2518,
											"end": 2611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 2518,
											"end": 2611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 910,
											"end": 1013,
											"name": "tag",
											"source": 14,
											"value": "18"
										},
										{
											"begin": 910,
											"end": 1013,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 910,
											"end": 1013,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "88"
										},
										{
											"begin": 910,
											"end": 1013,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 910,
											"end": 1013,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 910,
											"end": 1013,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 910,
											"end": 1013,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 910,
											"end": 1013,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 910,
											"end": 1013,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 910,
											"end": 1013,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 910,
											"end": 1013,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "89"
										},
										{
											"begin": 910,
											"end": 1013,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 910,
											"end": 1013,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 910,
											"end": 1013,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "46"
										},
										{
											"begin": 910,
											"end": 1013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 910,
											"end": 1013,
											"name": "tag",
											"source": 14,
											"value": "89"
										},
										{
											"begin": 910,
											"end": 1013,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 910,
											"end": 1013,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "90"
										},
										{
											"begin": 910,
											"end": 1013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 910,
											"end": 1013,
											"name": "tag",
											"source": 14,
											"value": "88"
										},
										{
											"begin": 910,
											"end": 1013,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 910,
											"end": 1013,
											"name": "STOP",
											"source": 14
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 3718,
											"end": 3862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 3718,
											"end": 3862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 4985,
											"end": 5193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 4985,
											"end": 5193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2677,
											"end": 2932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 2677,
											"end": 2932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 2677,
											"end": 2932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 343,
											"end": 542,
											"name": "tag",
											"source": 15,
											"value": "22"
										},
										{
											"begin": 343,
											"end": 542,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 343,
											"end": 542,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "103"
										},
										{
											"begin": 343,
											"end": 542,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 343,
											"end": 542,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 343,
											"end": 542,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 343,
											"end": 542,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 343,
											"end": 542,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 343,
											"end": 542,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 343,
											"end": 542,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 343,
											"end": 542,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "104"
										},
										{
											"begin": 343,
											"end": 542,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 343,
											"end": 542,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 343,
											"end": 542,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "105"
										},
										{
											"begin": 343,
											"end": 542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 343,
											"end": 542,
											"name": "tag",
											"source": 15,
											"value": "104"
										},
										{
											"begin": 343,
											"end": 542,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 343,
											"end": 542,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "106"
										},
										{
											"begin": 343,
											"end": 542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 343,
											"end": 542,
											"name": "tag",
											"source": 15,
											"value": "103"
										},
										{
											"begin": 343,
											"end": 542,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 343,
											"end": 542,
											"name": "STOP",
											"source": 15
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 447,
											"end": 730,
											"name": "tag",
											"source": 14,
											"value": "31"
										},
										{
											"begin": 447,
											"end": 730,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 583,
											"end": 587,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 622,
											"end": 669,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "116"
										},
										{
											"begin": 657,
											"end": 668,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 622,
											"end": 656,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "117"
										},
										{
											"begin": 622,
											"end": 669,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 622,
											"end": 669,
											"name": "tag",
											"source": 14,
											"value": "116"
										},
										{
											"begin": 622,
											"end": 669,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 622,
											"end": 723,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 622,
											"end": 723,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "118"
										},
										{
											"begin": 622,
											"end": 723,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 622,
											"end": 723,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 685,
											"end": 723,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "119"
										},
										{
											"begin": 711,
											"end": 722,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 685,
											"end": 710,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "120"
										},
										{
											"begin": 685,
											"end": 723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 685,
											"end": 723,
											"name": "tag",
											"source": 14,
											"value": "119"
										},
										{
											"begin": 685,
											"end": 723,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 622,
											"end": 723,
											"name": "tag",
											"source": 14,
											"value": "118"
										},
										{
											"begin": 622,
											"end": 723,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 603,
											"end": 723,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 603,
											"end": 723,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 447,
											"end": 730,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 447,
											"end": 730,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 447,
											"end": 730,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 447,
											"end": 730,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2410,
											"end": 2423,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2442,
											"end": 2447,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 2435,
											"end": 2447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 2435,
											"end": 2447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2365,
											"end": 2454,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3564,
											"end": 3571,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 3597,
											"end": 3604,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3596,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 3583,
											"end": 3605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "tag",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3623,
											"end": 3644,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 3636,
											"end": 3643,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 3623,
											"end": 3644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3623,
											"end": 3644,
											"name": "tag",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 3623,
											"end": 3644,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3616,
											"end": 3644,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3616,
											"end": 3644,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3394,
											"end": 3429,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 3403,
											"end": 3405,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3407,
											"end": 3414,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 3416,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 3416,
											"end": 3428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "tag",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3394,
											"end": 3402,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 3394,
											"end": 3429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3394,
											"end": 3429,
											"name": "tag",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 3394,
											"end": 3429,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3323,
											"end": 3436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2062,
											"end": 2164,
											"name": "tag",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 2062,
											"end": 2164,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2114,
											"end": 2121,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2140,
											"end": 2150,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 2140,
											"end": 2157,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2140,
											"end": 2157,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2140,
											"end": 2157,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2140,
											"end": 2157,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2133,
											"end": 2157,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2133,
											"end": 2157,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2062,
											"end": 2164,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2062,
											"end": 2164,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4251,
											"end": 4252,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4237,
											"end": 4239,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4306,
											"end": 4307,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 2,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 4276,
											"end": 4309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "tag",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "tag",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4538,
											"end": 4559,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4562,
											"end": 4596,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 4570,
											"end": 4572,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4574,
											"end": 4581,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4583,
											"end": 4595,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 4583,
											"end": 4593,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 4583,
											"end": 4595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4583,
											"end": 4595,
											"name": "tag",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 4583,
											"end": 4595,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4562,
											"end": 4569,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 4562,
											"end": 4596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4562,
											"end": 4596,
											"name": "tag",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 4562,
											"end": 4596,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4538,
											"end": 4596,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4538,
											"end": 4596,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4627,
											"end": 4631,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4610,
											"end": 4623,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4675,
											"end": 4679,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4681,
											"end": 4688,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4690,
											"end": 4703,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 2,
											"value": "64283D7B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 4654,
											"end": 4704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "tag",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "tag",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4223,
											"end": 4721,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4143,
											"end": 4721,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "tag",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1824,
											"end": 1831,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1856,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 1866,
											"end": 1871,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1856,
											"end": 1865,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 1856,
											"end": 1872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1856,
											"end": 1872,
											"name": "tag",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 1856,
											"end": 1872,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1847,
											"end": 1852,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1847,
											"end": 1872,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1843,
											"end": 1942,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 1843,
											"end": 1942,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1918,
											"end": 1923,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1925,
											"end": 1930,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1895,
											"end": 1931,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1895,
											"end": 1931,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1895,
											"end": 1931,
											"name": "PUSH",
											"source": 5,
											"value": "A57D13DC00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1895,
											"end": 1931,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1895,
											"end": 1931,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1895,
											"end": 1931,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1895,
											"end": 1931,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1895,
											"end": 1931,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 1895,
											"end": 1931,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1895,
											"end": 1931,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1895,
											"end": 1931,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1895,
											"end": 1931,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 1895,
											"end": 1931,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1895,
											"end": 1931,
											"name": "tag",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 1895,
											"end": 1931,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1895,
											"end": 1931,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1895,
											"end": 1931,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1895,
											"end": 1931,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1895,
											"end": 1931,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1895,
											"end": 1931,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1895,
											"end": 1931,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1895,
											"end": 1931,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1843,
											"end": 1942,
											"name": "tag",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 1843,
											"end": 1942,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1958,
											"end": 1970,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 1958,
											"end": 1977,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1971,
											"end": 1976,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1958,
											"end": 1977,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1958,
											"end": 1977,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1958,
											"end": 1977,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1958,
											"end": 1977,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1958,
											"end": 1977,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1958,
											"end": 1977,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1958,
											"end": 1977,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1958,
											"end": 1977,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1958,
											"end": 1977,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1958,
											"end": 1977,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1958,
											"end": 1977,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1958,
											"end": 1977,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1958,
											"end": 1977,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1958,
											"end": 1977,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1958,
											"end": 1977,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1958,
											"end": 1984,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1978,
											"end": 1983,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1958,
											"end": 1984,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1958,
											"end": 1984,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1958,
											"end": 1984,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1958,
											"end": 1984,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1958,
											"end": 1984,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1958,
											"end": 1984,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1958,
											"end": 1984,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1958,
											"end": 1984,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1958,
											"end": 1984,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1958,
											"end": 1984,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1958,
											"end": 1984,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1958,
											"end": 1984,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1984,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1984,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1736,
											"end": 1991,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1736,
											"end": 1991,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 4890,
											"end": 4894,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4896,
											"end": 4898,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4900,
											"end": 4907,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4873,
											"end": 4889,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 4873,
											"end": 4912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "tag",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4787,
											"end": 4919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 233,
											"end": 337,
											"name": "tag",
											"source": 15,
											"value": "64"
										},
										{
											"begin": 233,
											"end": 337,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 286,
											"end": 301,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 320,
											"end": 330,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 313,
											"end": 330,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 313,
											"end": 330,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 313,
											"end": 330,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 313,
											"end": 330,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 313,
											"end": 330,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 313,
											"end": 330,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 313,
											"end": 330,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 313,
											"end": 330,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 313,
											"end": 330,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 313,
											"end": 330,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 313,
											"end": 330,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 313,
											"end": 330,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 313,
											"end": 330,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 313,
											"end": 330,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 313,
											"end": 330,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 313,
											"end": 330,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 313,
											"end": 330,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 313,
											"end": 330,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 313,
											"end": 330,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 313,
											"end": 330,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 313,
											"end": 330,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 313,
											"end": 330,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 313,
											"end": 330,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 313,
											"end": 330,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 313,
											"end": 330,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 313,
											"end": 330,
											"name": "tag",
											"source": 15,
											"value": "156"
										},
										{
											"begin": 313,
											"end": 330,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 313,
											"end": 330,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 313,
											"end": 330,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 313,
											"end": 330,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 313,
											"end": 330,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 313,
											"end": 330,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "157"
										},
										{
											"begin": 313,
											"end": 330,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 313,
											"end": 330,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 313,
											"end": 330,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 313,
											"end": 330,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 313,
											"end": 330,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 313,
											"end": 330,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 313,
											"end": 330,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 313,
											"end": 330,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 313,
											"end": 330,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 313,
											"end": 330,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 313,
											"end": 330,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 313,
											"end": 330,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 313,
											"end": 330,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "159"
										},
										{
											"begin": 313,
											"end": 330,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 313,
											"end": 330,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "123"
										},
										{
											"begin": 313,
											"end": 330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 313,
											"end": 330,
											"name": "tag",
											"source": 15,
											"value": "159"
										},
										{
											"begin": 313,
											"end": 330,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 313,
											"end": 330,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 313,
											"end": 330,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 313,
											"end": 330,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 313,
											"end": 330,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 313,
											"end": 330,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 313,
											"end": 330,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 313,
											"end": 330,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 313,
											"end": 330,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 313,
											"end": 330,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 313,
											"end": 330,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 313,
											"end": 330,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 313,
											"end": 330,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 313,
											"end": 330,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 313,
											"end": 330,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 313,
											"end": 330,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 313,
											"end": 330,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 313,
											"end": 330,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 313,
											"end": 330,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 313,
											"end": 330,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 313,
											"end": 330,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 313,
											"end": 330,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 313,
											"end": 330,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 313,
											"end": 330,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 313,
											"end": 330,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 313,
											"end": 330,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 313,
											"end": 330,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 313,
											"end": 330,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 313,
											"end": 330,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 313,
											"end": 330,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 313,
											"end": 330,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "160"
										},
										{
											"begin": 313,
											"end": 330,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 313,
											"end": 330,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "123"
										},
										{
											"begin": 313,
											"end": 330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 313,
											"end": 330,
											"name": "tag",
											"source": 15,
											"value": "160"
										},
										{
											"begin": 313,
											"end": 330,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 313,
											"end": 330,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 313,
											"end": 330,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 313,
											"end": 330,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "161"
										},
										{
											"begin": 313,
											"end": 330,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 313,
											"end": 330,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 313,
											"end": 330,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 313,
											"end": 330,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 313,
											"end": 330,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "162"
										},
										{
											"begin": 313,
											"end": 330,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 313,
											"end": 330,
											"name": "PUSH",
											"source": 15,
											"value": "100"
										},
										{
											"begin": 313,
											"end": 330,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 313,
											"end": 330,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 313,
											"end": 330,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 313,
											"end": 330,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 313,
											"end": 330,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 313,
											"end": 330,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 313,
											"end": 330,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 313,
											"end": 330,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 313,
											"end": 330,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 313,
											"end": 330,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 313,
											"end": 330,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 313,
											"end": 330,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "161"
										},
										{
											"begin": 313,
											"end": 330,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 313,
											"end": 330,
											"name": "tag",
											"source": 15,
											"value": "162"
										},
										{
											"begin": 313,
											"end": 330,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 313,
											"end": 330,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 313,
											"end": 330,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 313,
											"end": 330,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 313,
											"end": 330,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 313,
											"end": 330,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 313,
											"end": 330,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 313,
											"end": 330,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 313,
											"end": 330,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 313,
											"end": 330,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 313,
											"end": 330,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 313,
											"end": 330,
											"name": "tag",
											"source": 15,
											"value": "163"
										},
										{
											"begin": 313,
											"end": 330,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 313,
											"end": 330,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 313,
											"end": 330,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 313,
											"end": 330,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 313,
											"end": 330,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 313,
											"end": 330,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 313,
											"end": 330,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 313,
											"end": 330,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 313,
											"end": 330,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 313,
											"end": 330,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 313,
											"end": 330,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 313,
											"end": 330,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 313,
											"end": 330,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 313,
											"end": 330,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 313,
											"end": 330,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "163"
										},
										{
											"begin": 313,
											"end": 330,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 313,
											"end": 330,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 313,
											"end": 330,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 313,
											"end": 330,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 313,
											"end": 330,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 313,
											"end": 330,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 313,
											"end": 330,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 313,
											"end": 330,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 313,
											"end": 330,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 313,
											"end": 330,
											"name": "tag",
											"source": 15,
											"value": "161"
										},
										{
											"begin": 313,
											"end": 330,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 313,
											"end": 330,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 313,
											"end": 330,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 313,
											"end": 330,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 313,
											"end": 330,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 313,
											"end": 330,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 313,
											"end": 330,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 313,
											"end": 330,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 313,
											"end": 330,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 313,
											"end": 330,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 313,
											"end": 330,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 313,
											"end": 330,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 313,
											"end": 330,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 313,
											"end": 330,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 313,
											"end": 330,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "156"
										},
										{
											"begin": 313,
											"end": 330,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 313,
											"end": 330,
											"name": "tag",
											"source": 15,
											"value": "157"
										},
										{
											"begin": 313,
											"end": 330,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 313,
											"end": 330,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 313,
											"end": 330,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 313,
											"end": 330,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 313,
											"end": 330,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 313,
											"end": 330,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 313,
											"end": 330,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 233,
											"end": 337,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 233,
											"end": 337,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "tag",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2302,
											"end": 2309,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2325,
											"end": 2330,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2325,
											"end": 2347,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2321,
											"end": 2422,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 2321,
											"end": 2422,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2401,
											"end": 2402,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2405,
											"end": 2410,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2370,
											"end": 2411,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2370,
											"end": 2411,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2370,
											"end": 2411,
											"name": "PUSH",
											"source": 5,
											"value": "A57D13DC00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2370,
											"end": 2411,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2370,
											"end": 2411,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2370,
											"end": 2411,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2370,
											"end": 2411,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2370,
											"end": 2411,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 2370,
											"end": 2411,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2370,
											"end": 2411,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2370,
											"end": 2411,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2370,
											"end": 2411,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 2370,
											"end": 2411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2370,
											"end": 2411,
											"name": "tag",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 2370,
											"end": 2411,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2370,
											"end": 2411,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2370,
											"end": 2411,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2370,
											"end": 2411,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2370,
											"end": 2411,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2370,
											"end": 2411,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2370,
											"end": 2411,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2370,
											"end": 2411,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2321,
											"end": 2422,
											"name": "tag",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 2321,
											"end": 2422,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2438,
											"end": 2448,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 2449,
											"end": 2454,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 2438,
											"end": 2455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "tag",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "tag",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2438,
											"end": 2455,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2431,
											"end": 2455,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2431,
											"end": 2455,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2236,
											"end": 2462,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2236,
											"end": 2462,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2248,
											"end": 2255,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2274,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 2288,
											"end": 2295,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2287,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 2274,
											"end": 2296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2296,
											"name": "tag",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 2274,
											"end": 2296,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2267,
											"end": 2296,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2267,
											"end": 2296,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1983,
											"end": 1990,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2023,
											"end": 2024,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2006,
											"end": 2011,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2075,
											"end": 2076,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 2,
											"value": "89C62B6400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 2048,
											"end": 2078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "tag",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "tag",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2105,
											"end": 2114,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2115,
											"end": 2120,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2565,
											"end": 2578,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2597,
											"end": 2604,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 2590,
											"end": 2604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 2590,
											"end": 2604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2518,
											"end": 2611,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 910,
											"end": 1013,
											"name": "tag",
											"source": 14,
											"value": "90"
										},
										{
											"begin": 910,
											"end": 1013,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 984,
											"end": 1006,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "193"
										},
										{
											"begin": 994,
											"end": 996,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 998,
											"end": 1005,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 984,
											"end": 993,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "194"
										},
										{
											"begin": 984,
											"end": 1006,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 984,
											"end": 1006,
											"modifierDepth": 1,
											"name": "tag",
											"source": 14,
											"value": "193"
										},
										{
											"begin": 984,
											"end": 1006,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 910,
											"end": 1013,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 910,
											"end": 1013,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 910,
											"end": 1013,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3803,
											"end": 3855,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 3822,
											"end": 3834,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 3822,
											"end": 3832,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 3822,
											"end": 3834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3822,
											"end": 3834,
											"name": "tag",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 3822,
											"end": 3834,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3836,
											"end": 3844,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3854,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3803,
											"end": 3821,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 3803,
											"end": 3855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3803,
											"end": 3855,
											"name": "tag",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 3803,
											"end": 3855,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3718,
											"end": 3862,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5098,
											"end": 5129,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 5111,
											"end": 5115,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5117,
											"end": 5119,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5121,
											"end": 5128,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5098,
											"end": 5110,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 5098,
											"end": 5129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5098,
											"end": 5129,
											"name": "tag",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 5098,
											"end": 5129,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5139,
											"end": 5186,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 5162,
											"end": 5166,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5168,
											"end": 5170,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5172,
											"end": 5179,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5181,
											"end": 5185,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5139,
											"end": 5161,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 5139,
											"end": 5186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5139,
											"end": 5186,
											"name": "tag",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 5139,
											"end": 5186,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4985,
											"end": 5193,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2741,
											"end": 2754,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 2780,
											"end": 2787,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2766,
											"end": 2779,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 2766,
											"end": 2788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "tag",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2799,
											"end": 2820,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2823,
											"end": 2833,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 2823,
											"end": 2831,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 2823,
											"end": 2833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2823,
											"end": 2833,
											"name": "tag",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 2823,
											"end": 2833,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2799,
											"end": 2833,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2799,
											"end": 2833,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2874,
											"end": 2875,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2856,
											"end": 2863,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2850,
											"end": 2871,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2850,
											"end": 2875,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "tag",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2892,
											"end": 2899,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2901,
											"end": 2919,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 2901,
											"end": 2908,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2901,
											"end": 2917,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 2901,
											"end": 2919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2901,
											"end": 2919,
											"name": "tag",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 2901,
											"end": 2919,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "212"
										},
										{
											"begin": 2878,
											"end": 2920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "tag",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "tag",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2843,
											"end": 2925,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2843,
											"end": 2925,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2843,
											"end": 2925,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2677,
											"end": 2932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 343,
											"end": 542,
											"name": "tag",
											"source": 15,
											"value": "106"
										},
										{
											"begin": 343,
											"end": 542,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 423,
											"end": 457,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "214"
										},
										{
											"begin": 444,
											"end": 456,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 423,
											"end": 443,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "215"
										},
										{
											"begin": 423,
											"end": 457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 423,
											"end": 457,
											"name": "tag",
											"source": 15,
											"value": "214"
										},
										{
											"begin": 423,
											"end": 457,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 481,
											"end": 493,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 468,
											"end": 478,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 468,
											"end": 493,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 468,
											"end": 493,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 468,
											"end": 493,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 468,
											"end": 493,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 468,
											"end": 493,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 468,
											"end": 493,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 468,
											"end": 493,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 468,
											"end": 493,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "216"
										},
										{
											"begin": 468,
											"end": 493,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 468,
											"end": 493,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 468,
											"end": 493,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 468,
											"end": 493,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "217"
										},
										{
											"begin": 468,
											"end": 493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 468,
											"end": 493,
											"name": "tag",
											"source": 15,
											"value": "216"
										},
										{
											"begin": 468,
											"end": 493,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 468,
											"end": 493,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 509,
											"end": 535,
											"name": "PUSH",
											"source": 15,
											"value": "9538911740E5519A40DB77FB5F637DE0D56CDD804318D81AE270CC24FBD8479E"
										},
										{
											"begin": 522,
											"end": 534,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 509,
											"end": 535,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 509,
											"end": 535,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 509,
											"end": 535,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "218"
										},
										{
											"begin": 509,
											"end": 535,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 509,
											"end": 535,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 509,
											"end": 535,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "66"
										},
										{
											"begin": 509,
											"end": 535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 509,
											"end": 535,
											"name": "tag",
											"source": 15,
											"value": "218"
										},
										{
											"begin": 509,
											"end": 535,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 509,
											"end": 535,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 509,
											"end": 535,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 509,
											"end": 535,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 509,
											"end": 535,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 509,
											"end": 535,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 509,
											"end": 535,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 509,
											"end": 535,
											"name": "LOG1",
											"source": 15
										},
										{
											"begin": 343,
											"end": 542,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 343,
											"end": 542,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4016,
											"end": 4020,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4057,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4058,
											"end": 4063,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4065,
											"end": 4073,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4032,
											"end": 4074,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4032,
											"end": 4074,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1435,
											"end": 1657,
											"name": "tag",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 1435,
											"end": 1657,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1537,
											"end": 1541,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1575,
											"end": 1610,
											"name": "PUSH",
											"source": 5,
											"value": "780E9D6300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1560,
											"end": 1610,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1560,
											"end": 1610,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1560,
											"end": 1610,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1560,
											"end": 1571,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1560,
											"end": 1610,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1560,
											"end": 1610,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1560,
											"end": 1610,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1560,
											"end": 1610,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1560,
											"end": 1650,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1560,
											"end": 1650,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 1560,
											"end": 1650,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1560,
											"end": 1650,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1614,
											"end": 1650,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 1638,
											"end": 1649,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1614,
											"end": 1637,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "229"
										},
										{
											"begin": 1614,
											"end": 1650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1614,
											"end": 1650,
											"name": "tag",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 1614,
											"end": 1650,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1560,
											"end": 1650,
											"name": "tag",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 1560,
											"end": 1650,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1553,
											"end": 1650,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1553,
											"end": 1650,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1435,
											"end": 1657,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1435,
											"end": 1657,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1435,
											"end": 1657,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1435,
											"end": 1657,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 548,
											"end": 695,
											"name": "tag",
											"source": 15,
											"value": "120"
										},
										{
											"begin": 548,
											"end": 695,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 624,
											"end": 628,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 662,
											"end": 688,
											"name": "PUSH",
											"source": 15,
											"value": "A86517A100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 647,
											"end": 688,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 647,
											"end": 688,
											"name": "NOT",
											"source": 15
										},
										{
											"begin": 647,
											"end": 688,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 647,
											"end": 658,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 647,
											"end": 688,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 647,
											"end": 688,
											"name": "NOT",
											"source": 15
										},
										{
											"begin": 647,
											"end": 688,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 647,
											"end": 688,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 640,
											"end": 688,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 640,
											"end": 688,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 548,
											"end": 695,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 548,
											"end": 695,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 548,
											"end": 695,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 548,
											"end": 695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "tag",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16201,
											"end": 16208,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 16220,
											"end": 16233,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16236,
											"end": 16253,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 16245,
											"end": 16252,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 16236,
											"end": 16244,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 16236,
											"end": 16253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 16236,
											"end": 16253,
											"name": "tag",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 16236,
											"end": 16253,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16220,
											"end": 16253,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16220,
											"end": 16253,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16284,
											"end": 16285,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 16267,
											"end": 16272,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 16332,
											"end": 16339,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 2,
											"value": "7E27328900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 16309,
											"end": 16340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "tag",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "tag",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16367,
											"end": 16372,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16360,
											"end": 16372,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 16360,
											"end": 16372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16360,
											"end": 16372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16138,
											"end": 16379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 6015,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6049,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6050,
											"end": 6057,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6027,
											"end": 6058,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6027,
											"end": 6058,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5938,
											"end": 6065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 8,
											"value": "136"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "tag",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14498,
											"end": 14531,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 14507,
											"end": 14509,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14511,
											"end": 14518,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14520,
											"end": 14524,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14526,
											"end": 14530,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 14498,
											"end": 14506,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 14498,
											"end": 14531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14498,
											"end": 14531,
											"name": "tag",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 14498,
											"end": 14531,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14418,
											"end": 14538,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2518,
											"end": 3143,
											"name": "tag",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 2518,
											"end": 3143,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2613,
											"end": 2620,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2632,
											"end": 2653,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2656,
											"end": 2688,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 2670,
											"end": 2672,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2674,
											"end": 2681,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2683,
											"end": 2687,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2656,
											"end": 2669,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 2656,
											"end": 2688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2656,
											"end": 2688,
											"name": "tag",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 2656,
											"end": 2688,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2632,
											"end": 2688,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2632,
											"end": 2688,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2728,
											"end": 2729,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2703,
											"end": 2730,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2703,
											"end": 2730,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2703,
											"end": 2716,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2703,
											"end": 2730,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2703,
											"end": 2730,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2703,
											"end": 2730,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2699,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 2699,
											"end": 2909,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 2778,
											"end": 2785,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2746,
											"end": 2777,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 2746,
											"end": 2786,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "tag",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 2746,
											"end": 2786,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2699,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "247"
										},
										{
											"begin": 2699,
											"end": 2909,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2699,
											"end": 2909,
											"name": "tag",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 2699,
											"end": 2909,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2824,
											"end": 2826,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2807,
											"end": 2826,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2807,
											"end": 2826,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2807,
											"end": 2820,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2807,
											"end": 2826,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2807,
											"end": 2826,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2807,
											"end": 2826,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2803,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 2803,
											"end": 2909,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2842,
											"end": 2898,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "249"
										},
										{
											"begin": 2875,
											"end": 2888,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2890,
											"end": 2897,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2842,
											"end": 2874,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 2842,
											"end": 2898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2842,
											"end": 2898,
											"name": "tag",
											"source": 5,
											"value": "249"
										},
										{
											"begin": 2842,
											"end": 2898,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2803,
											"end": 2909,
											"name": "tag",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 2803,
											"end": 2909,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2699,
											"end": 2909,
											"name": "tag",
											"source": 5,
											"value": "247"
										},
										{
											"begin": 2699,
											"end": 2909,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2936,
											"end": 2937,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2922,
											"end": 2938,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2922,
											"end": 2938,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2922,
											"end": 2924,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2922,
											"end": 2938,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2922,
											"end": 2938,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2922,
											"end": 2938,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2918,
											"end": 3106,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "251"
										},
										{
											"begin": 2918,
											"end": 3106,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2954,
											"end": 2999,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "252"
										},
										{
											"begin": 2991,
											"end": 2998,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2954,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "253"
										},
										{
											"begin": 2954,
											"end": 2999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2954,
											"end": 2999,
											"name": "tag",
											"source": 5,
											"value": "252"
										},
										{
											"begin": 2954,
											"end": 2999,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2918,
											"end": 3106,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "254"
										},
										{
											"begin": 2918,
											"end": 3106,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2918,
											"end": 3106,
											"name": "tag",
											"source": 5,
											"value": "251"
										},
										{
											"begin": 2918,
											"end": 3106,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3037,
											"end": 3039,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3020,
											"end": 3039,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3039,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3020,
											"end": 3033,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3020,
											"end": 3039,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3039,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3020,
											"end": 3039,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 3016,
											"end": 3106,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 3016,
											"end": 3106,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3055,
											"end": 3095,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 3083,
											"end": 3085,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3087,
											"end": 3094,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3055,
											"end": 3082,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 3055,
											"end": 3095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3055,
											"end": 3095,
											"name": "tag",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 3055,
											"end": 3095,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3016,
											"end": 3106,
											"name": "tag",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 3016,
											"end": 3106,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2918,
											"end": 3106,
											"name": "tag",
											"source": 5,
											"value": "254"
										},
										{
											"begin": 2918,
											"end": 3106,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3123,
											"end": 3136,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3116,
											"end": 3136,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3116,
											"end": 3136,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3116,
											"end": 3136,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 3143,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 3143,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 3143,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 3143,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 3143,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2518,
											"end": 3143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10633,
											"end": 10733,
											"name": "tag",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 10633,
											"end": 10733,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 10710,
											"end": 10712,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10714,
											"end": 10721,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10700,
											"end": 10709,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 10700,
											"end": 10726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "tag",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 10700,
											"end": 10726,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10633,
											"end": 10733,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10633,
											"end": 10733,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10633,
											"end": 10733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "tag",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15718,
											"end": 15719,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15698,
											"end": 15706,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15765,
											"end": 15773,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 2,
											"value": "5B08BA1800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 15743,
											"end": 15774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "tag",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "tag",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15832,
											"end": 15840,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15812,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15813,
											"end": 15818,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15820,
											"end": 15828,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15877,
											"end": 15885,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15870,
											"end": 15875,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 2,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 15887,
											"end": 15895,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "271"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 15855,
											"end": 15896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "tag",
											"source": 2,
											"value": "271"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15591,
											"end": 15903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "tag",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17051,
											"end": 17052,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17034,
											"end": 17036,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 17034,
											"end": 17048,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17034,
											"end": 17048,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17034,
											"end": 17048,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 17034,
											"end": 17052,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "273"
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 17088,
											"end": 17090,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "PUSH",
											"source": 2,
											"value": "150B7A02"
										},
										{
											"begin": 17109,
											"end": 17121,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "274"
										},
										{
											"begin": 17109,
											"end": 17119,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 17109,
											"end": 17121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 17109,
											"end": 17121,
											"name": "tag",
											"source": 2,
											"value": "274"
										},
										{
											"begin": 17109,
											"end": 17121,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17123,
											"end": 17127,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 17129,
											"end": 17136,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 17138,
											"end": 17142,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "275"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "276"
										},
										{
											"begin": 17072,
											"end": 17143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "tag",
											"source": 2,
											"value": "275"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "277"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "279"
										},
										{
											"begin": 17072,
											"end": 17143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "tag",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "tag",
											"source": 2,
											"value": "277"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "280"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "285"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 2,
											"value": "3F"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "284"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "tag",
											"source": 2,
											"value": "285"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "tag",
											"source": 2,
											"value": "284"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17398,
											"end": 17399,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17381,
											"end": 17387,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17381,
											"end": 17394,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17381,
											"end": 17399,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "286"
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 17452,
											"end": 17454,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 2,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "287"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 17430,
											"end": 17455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "tag",
											"source": 2,
											"value": "287"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "tag",
											"source": 2,
											"value": "286"
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17622,
											"end": 17628,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17616,
											"end": 17629,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17607,
											"end": 17613,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17603,
											"end": 17605,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 17599,
											"end": 17614,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17592,
											"end": 17630,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "tag",
											"source": 2,
											"value": "280"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17200,
											"end": 17241,
											"name": "PUSH",
											"source": 2,
											"value": "150B7A02"
										},
										{
											"begin": 17200,
											"end": 17241,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 17200,
											"end": 17241,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17190,
											"end": 17196,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "290"
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 17294,
											"end": 17296,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 2,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "291"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 17272,
											"end": 17297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "tag",
											"source": 2,
											"value": "291"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "tag",
											"source": 2,
											"value": "290"
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17144,
											"end": 17330,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "tag",
											"source": 2,
											"value": "273"
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16918,
											"end": 17700,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3174,
											"end": 3266,
											"name": "tag",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 3174,
											"end": 3266,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3225,
											"end": 3238,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3174,
											"end": 3266,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3174,
											"end": 3266,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "tag",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 693,
											"end": 706,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 742,
											"end": 756,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 779,
											"end": 780,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 759,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "294"
										},
										{
											"begin": 770,
											"end": 775,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 759,
											"end": 769,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 759,
											"end": 776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 759,
											"end": 776,
											"name": "tag",
											"source": 9,
											"value": "294"
										},
										{
											"begin": 759,
											"end": 776,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 759,
											"end": 780,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 742,
											"end": 780,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 742,
											"end": 780,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 794,
											"end": 814,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 828,
											"end": 834,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "296"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "298"
										},
										{
											"begin": 817,
											"end": 835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 9,
											"value": "296"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "299"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "CALLDATACOPY",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 9,
											"value": "299"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 817,
											"end": 835,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 794,
											"end": 835,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 794,
											"end": 835,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 849,
											"end": 860,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 975,
											"end": 981,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 971,
											"end": 973,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 967,
											"end": 982,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 959,
											"end": 965,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 955,
											"end": 983,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 948,
											"end": 983,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 948,
											"end": 983,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "tag",
											"source": 9,
											"value": "300"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1017,
											"end": 1021,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1180,
											"end": 1190,
											"name": "PUSH",
											"source": 9,
											"value": "3031323334353637383961626364656600000000000000000000000000000000"
										},
										{
											"begin": 1175,
											"end": 1177,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1164,
											"end": 1178,
											"name": "MOD",
											"source": 9
										},
										{
											"begin": 1159,
											"end": 1191,
											"name": "BYTE",
											"source": 9
										},
										{
											"begin": 1154,
											"end": 1157,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1146,
											"end": 1192,
											"name": "MSTORE8",
											"source": 9
										},
										{
											"begin": 1236,
											"end": 1238,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "303"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "304"
										},
										{
											"begin": 1227,
											"end": 1238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "tag",
											"source": 9,
											"value": "303"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "tag",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1269,
											"end": 1270,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1260,
											"end": 1265,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1260,
											"end": 1270,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "300"
										},
										{
											"begin": 1256,
											"end": 1277,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "tag",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1312,
											"end": 1318,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 637,
											"end": 1335,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 777,
											"end": 904,
											"name": "tag",
											"source": 14,
											"value": "215"
										},
										{
											"begin": 777,
											"end": 904,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 777,
											"end": 904,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 777,
											"end": 904,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1663,
											"end": 1667,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1713,
											"end": 1738,
											"name": "PUSH",
											"source": 2,
											"value": "80AC58CD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1698,
											"end": 1709,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "310"
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1769,
											"end": 1802,
											"name": "PUSH",
											"source": 2,
											"value": "5B5E139F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1754,
											"end": 1765,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "tag",
											"source": 2,
											"value": "310"
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "311"
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "312"
										},
										{
											"begin": 1842,
											"end": 1853,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1818,
											"end": 1841,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "313"
										},
										{
											"begin": 1818,
											"end": 1854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "tag",
											"source": 2,
											"value": "312"
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "tag",
											"source": 2,
											"value": "311"
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1679,
											"end": 1854,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1679,
											"end": 1854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "tag",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5773,
											"end": 5780,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5806,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5807,
											"end": 5814,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5792,
											"end": 5815,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5792,
											"end": 5815,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5707,
											"end": 5822,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "tag",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14880,
											"end": 14889,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "316"
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14909,
											"end": 14910,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14893,
											"end": 14897,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "tag",
											"source": 2,
											"value": "316"
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "317"
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14927,
											"end": 14940,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14943,
											"end": 14965,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "318"
										},
										{
											"begin": 14957,
											"end": 14964,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 14943,
											"end": 14956,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 14943,
											"end": 14965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14943,
											"end": 14965,
											"name": "tag",
											"source": 2,
											"value": "318"
										},
										{
											"begin": 14943,
											"end": 14965,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14927,
											"end": 14965,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14927,
											"end": 14965,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15109,
											"end": 15110,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15093,
											"end": 15097,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "319"
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15124,
											"end": 15128,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15115,
											"end": 15120,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "tag",
											"source": 2,
											"value": "319"
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "320"
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15133,
											"end": 15162,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "321"
										},
										{
											"begin": 15150,
											"end": 15155,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15157,
											"end": 15161,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 15133,
											"end": 15149,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 15133,
											"end": 15162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15133,
											"end": 15162,
											"name": "tag",
											"source": 2,
											"value": "321"
										},
										{
											"begin": 15133,
											"end": 15162,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15132,
											"end": 15162,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "tag",
											"source": 2,
											"value": "320"
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "322"
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15211,
											"end": 15215,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 2,
											"value": "A9FBF51F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "323"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 15189,
											"end": 15216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "tag",
											"source": 2,
											"value": "323"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "tag",
											"source": 2,
											"value": "322"
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15249,
											"end": 15258,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "324"
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15303,
											"end": 15310,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15299,
											"end": 15301,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15292,
											"end": 15297,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "tag",
											"source": 2,
											"value": "324"
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14913,
											"end": 15336,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "tag",
											"source": 2,
											"value": "317"
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15373,
											"end": 15375,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15346,
											"end": 15361,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15362,
											"end": 15369,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14720,
											"end": 15382,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "tag",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8924,
											"end": 8931,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8943,
											"end": 8955,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8958,
											"end": 8975,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "326"
										},
										{
											"begin": 8967,
											"end": 8974,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8958,
											"end": 8966,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 8958,
											"end": 8975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8958,
											"end": 8975,
											"name": "tag",
											"source": 2,
											"value": "326"
										},
										{
											"begin": 8958,
											"end": 8975,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8943,
											"end": 8975,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8943,
											"end": 8975,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9051,
											"end": 9052,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9035,
											"end": 9039,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "327"
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9069,
											"end": 9106,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "328"
										},
										{
											"begin": 9086,
											"end": 9090,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9092,
											"end": 9096,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9098,
											"end": 9105,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 9069,
											"end": 9085,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "329"
										},
										{
											"begin": 9069,
											"end": 9106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9069,
											"end": 9106,
											"name": "tag",
											"source": 2,
											"value": "328"
										},
										{
											"begin": 9069,
											"end": 9106,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "tag",
											"source": 2,
											"value": "327"
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9177,
											"end": 9178,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9161,
											"end": 9165,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "330"
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9277,
											"end": 9325,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "331"
										},
										{
											"begin": 9294,
											"end": 9295,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9298,
											"end": 9305,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9315,
											"end": 9316,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9319,
											"end": 9324,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9277,
											"end": 9285,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 9277,
											"end": 9325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9277,
											"end": 9325,
											"name": "tag",
											"source": 2,
											"value": "331"
										},
										{
											"begin": 9277,
											"end": 9325,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9387,
											"end": 9388,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 9368,
											"end": 9377,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9378,
											"end": 9382,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "tag",
											"source": 2,
											"value": "330"
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9441,
											"end": 9442,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9427,
											"end": 9429,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "332"
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9504,
											"end": 9505,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 9487,
											"end": 9496,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9497,
											"end": 9499,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "tag",
											"source": 2,
											"value": "332"
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9559,
											"end": 9561,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9547,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9548,
											"end": 9555,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9596,
											"end": 9603,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9592,
											"end": 9594,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9586,
											"end": 9590,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 9622,
											"end": 9626,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9615,
											"end": 9626,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9615,
											"end": 9626,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9615,
											"end": 9626,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8838,
											"end": 9633,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 4007,
											"name": "tag",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 3846,
											"end": 4007,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3949,
											"end": 3959,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 3949,
											"end": 3966,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3949,
											"end": 3966,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3949,
											"end": 3966,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3949,
											"end": 3966,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3922,
											"end": 3937,
											"name": "PUSH",
											"source": 5,
											"value": "B"
										},
										{
											"begin": 3922,
											"end": 3946,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3938,
											"end": 3945,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3922,
											"end": 3946,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3922,
											"end": 3946,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3922,
											"end": 3946,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3922,
											"end": 3946,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3922,
											"end": 3946,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3922,
											"end": 3946,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3922,
											"end": 3946,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3922,
											"end": 3946,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3922,
											"end": 3946,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3922,
											"end": 3946,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3922,
											"end": 3946,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3922,
											"end": 3966,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3922,
											"end": 3966,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3922,
											"end": 3966,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3922,
											"end": 3966,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3976,
											"end": 3986,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 3992,
											"end": 3999,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3846,
											"end": 4007,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3846,
											"end": 4007,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4624,
											"end": 5583,
											"name": "tag",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 4624,
											"end": 5583,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4886,
											"end": 4908,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4911,
											"end": 4926,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "336"
										},
										{
											"begin": 4921,
											"end": 4925,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4911,
											"end": 4920,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 4911,
											"end": 4926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4911,
											"end": 4926,
											"name": "tag",
											"source": 5,
											"value": "336"
										},
										{
											"begin": 4911,
											"end": 4926,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4886,
											"end": 4926,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4886,
											"end": 4926,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4936,
											"end": 4954,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4957,
											"end": 4974,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 4957,
											"end": 4983,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4975,
											"end": 4982,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4957,
											"end": 4983,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4957,
											"end": 4983,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4957,
											"end": 4983,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4957,
											"end": 4983,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4957,
											"end": 4983,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4957,
											"end": 4983,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4957,
											"end": 4983,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4957,
											"end": 4983,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4957,
											"end": 4983,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4957,
											"end": 4983,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4957,
											"end": 4983,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 4957,
											"end": 4983,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4936,
											"end": 4983,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4936,
											"end": 4983,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5101,
											"end": 5115,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5087,
											"end": 5097,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5087,
											"end": 5115,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 5083,
											"end": 5406,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "337"
										},
										{
											"begin": 5083,
											"end": 5406,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5131,
											"end": 5150,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5153,
											"end": 5165,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 5153,
											"end": 5171,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5166,
											"end": 5170,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 5153,
											"end": 5171,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5153,
											"end": 5171,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5153,
											"end": 5171,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5153,
											"end": 5171,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5153,
											"end": 5171,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5153,
											"end": 5171,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5153,
											"end": 5171,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5153,
											"end": 5171,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5153,
											"end": 5171,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5153,
											"end": 5171,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5153,
											"end": 5171,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5153,
											"end": 5171,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5153,
											"end": 5171,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5153,
											"end": 5171,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5153,
											"end": 5171,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 5153,
											"end": 5187,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5172,
											"end": 5186,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5153,
											"end": 5187,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5153,
											"end": 5187,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5153,
											"end": 5187,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5153,
											"end": 5187,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5153,
											"end": 5187,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5153,
											"end": 5187,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5153,
											"end": 5187,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5153,
											"end": 5187,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5153,
											"end": 5187,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5153,
											"end": 5187,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5153,
											"end": 5187,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 5153,
											"end": 5187,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5131,
											"end": 5187,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5131,
											"end": 5187,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5235,
											"end": 5246,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5202,
											"end": 5214,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 5202,
											"end": 5220,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5215,
											"end": 5219,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 5202,
											"end": 5220,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5202,
											"end": 5220,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5202,
											"end": 5220,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5202,
											"end": 5220,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5202,
											"end": 5220,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5202,
											"end": 5220,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5202,
											"end": 5220,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5202,
											"end": 5220,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5202,
											"end": 5220,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5202,
											"end": 5220,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5202,
											"end": 5220,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5202,
											"end": 5220,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5202,
											"end": 5220,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5202,
											"end": 5220,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5202,
											"end": 5220,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 5202,
											"end": 5232,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5221,
											"end": 5231,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5202,
											"end": 5232,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5202,
											"end": 5232,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5202,
											"end": 5232,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5202,
											"end": 5232,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5202,
											"end": 5232,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5202,
											"end": 5232,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5202,
											"end": 5232,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5202,
											"end": 5232,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5202,
											"end": 5232,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5202,
											"end": 5232,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5202,
											"end": 5232,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 5202,
											"end": 5246,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5202,
											"end": 5246,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5202,
											"end": 5246,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 5202,
											"end": 5246,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5351,
											"end": 5361,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5318,
											"end": 5335,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 5318,
											"end": 5348,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5336,
											"end": 5347,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5318,
											"end": 5348,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5318,
											"end": 5348,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5318,
											"end": 5348,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5318,
											"end": 5348,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5318,
											"end": 5348,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5318,
											"end": 5348,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5318,
											"end": 5348,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5318,
											"end": 5348,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5318,
											"end": 5348,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5318,
											"end": 5348,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5318,
											"end": 5348,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 5318,
											"end": 5361,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5318,
											"end": 5361,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5318,
											"end": 5361,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 5318,
											"end": 5361,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5117,
											"end": 5406,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5083,
											"end": 5406,
											"name": "tag",
											"source": 5,
											"value": "337"
										},
										{
											"begin": 5083,
											"end": 5406,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5499,
											"end": 5516,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 5499,
											"end": 5525,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5517,
											"end": 5524,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5499,
											"end": 5525,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5499,
											"end": 5525,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5499,
											"end": 5525,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5499,
											"end": 5525,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5499,
											"end": 5525,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5499,
											"end": 5525,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5499,
											"end": 5525,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5499,
											"end": 5525,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5499,
											"end": 5525,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5499,
											"end": 5525,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5499,
											"end": 5525,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 5492,
											"end": 5525,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5492,
											"end": 5525,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5492,
											"end": 5525,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 5542,
											"end": 5554,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 5542,
											"end": 5560,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5555,
											"end": 5559,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5542,
											"end": 5560,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5542,
											"end": 5560,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5542,
											"end": 5560,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5542,
											"end": 5560,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5542,
											"end": 5560,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5542,
											"end": 5560,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5542,
											"end": 5560,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5542,
											"end": 5560,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5542,
											"end": 5560,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5542,
											"end": 5560,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5542,
											"end": 5560,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5542,
											"end": 5560,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5542,
											"end": 5560,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5542,
											"end": 5560,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5542,
											"end": 5560,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 5542,
											"end": 5576,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5561,
											"end": 5575,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5542,
											"end": 5576,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5542,
											"end": 5576,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5542,
											"end": 5576,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5542,
											"end": 5576,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5542,
											"end": 5576,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5542,
											"end": 5576,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5542,
											"end": 5576,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5542,
											"end": 5576,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5542,
											"end": 5576,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5542,
											"end": 5576,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5542,
											"end": 5576,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 5535,
											"end": 5576,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5535,
											"end": 5576,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5535,
											"end": 5576,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 4705,
											"end": 5583,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4705,
											"end": 5583,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4624,
											"end": 5583,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4624,
											"end": 5583,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4624,
											"end": 5583,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5871,
											"end": 6932,
											"name": "tag",
											"source": 5,
											"value": "253"
										},
										{
											"begin": 5871,
											"end": 6932,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6120,
											"end": 6142,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6165,
											"end": 6166,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 6145,
											"end": 6155,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 6145,
											"end": 6162,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6145,
											"end": 6162,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6145,
											"end": 6162,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6145,
											"end": 6162,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6145,
											"end": 6166,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "339"
										},
										{
											"begin": 6145,
											"end": 6166,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6145,
											"end": 6166,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6145,
											"end": 6166,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "340"
										},
										{
											"begin": 6145,
											"end": 6166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6145,
											"end": 6166,
											"name": "tag",
											"source": 5,
											"value": "339"
										},
										{
											"begin": 6145,
											"end": 6166,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6120,
											"end": 6166,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6120,
											"end": 6166,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6176,
											"end": 6194,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6197,
											"end": 6212,
											"name": "PUSH",
											"source": 5,
											"value": "B"
										},
										{
											"begin": 6197,
											"end": 6221,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6213,
											"end": 6220,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6197,
											"end": 6221,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6197,
											"end": 6221,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6197,
											"end": 6221,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6197,
											"end": 6221,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6197,
											"end": 6221,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6197,
											"end": 6221,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6197,
											"end": 6221,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6197,
											"end": 6221,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6197,
											"end": 6221,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6197,
											"end": 6221,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6197,
											"end": 6221,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 6197,
											"end": 6221,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6176,
											"end": 6221,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6176,
											"end": 6221,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6543,
											"end": 6562,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6565,
											"end": 6575,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 6576,
											"end": 6590,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6565,
											"end": 6591,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6565,
											"end": 6591,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6565,
											"end": 6591,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6565,
											"end": 6591,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 6565,
											"end": 6591,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "341"
										},
										{
											"begin": 6565,
											"end": 6591,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6565,
											"end": 6591,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "342"
										},
										{
											"begin": 6565,
											"end": 6591,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 6565,
											"end": 6591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6565,
											"end": 6591,
											"name": "tag",
											"source": 5,
											"value": "342"
										},
										{
											"begin": 6565,
											"end": 6591,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6565,
											"end": 6591,
											"name": "tag",
											"source": 5,
											"value": "341"
										},
										{
											"begin": 6565,
											"end": 6591,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6565,
											"end": 6591,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6565,
											"end": 6591,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6565,
											"end": 6591,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6565,
											"end": 6591,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6565,
											"end": 6591,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6565,
											"end": 6591,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 6565,
											"end": 6591,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6565,
											"end": 6591,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6543,
											"end": 6591,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6543,
											"end": 6591,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6627,
											"end": 6638,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6602,
											"end": 6612,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 6613,
											"end": 6623,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "344"
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "345"
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 6602,
											"end": 6624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "tag",
											"source": 5,
											"value": "345"
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "tag",
											"source": 5,
											"value": "344"
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6602,
											"end": 6638,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6602,
											"end": 6638,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6602,
											"end": 6638,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 6602,
											"end": 6638,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6737,
											"end": 6747,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6706,
											"end": 6721,
											"name": "PUSH",
											"source": 5,
											"value": "B"
										},
										{
											"begin": 6706,
											"end": 6734,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6722,
											"end": 6733,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6706,
											"end": 6734,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6706,
											"end": 6734,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6706,
											"end": 6734,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6706,
											"end": 6734,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6706,
											"end": 6734,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6706,
											"end": 6734,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6706,
											"end": 6734,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6706,
											"end": 6734,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6706,
											"end": 6734,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6706,
											"end": 6734,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6706,
											"end": 6734,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 6706,
											"end": 6747,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6706,
											"end": 6747,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6706,
											"end": 6747,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 6706,
											"end": 6747,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6875,
											"end": 6890,
											"name": "PUSH",
											"source": 5,
											"value": "B"
										},
										{
											"begin": 6875,
											"end": 6899,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6891,
											"end": 6898,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6875,
											"end": 6899,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6875,
											"end": 6899,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6875,
											"end": 6899,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6875,
											"end": 6899,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6875,
											"end": 6899,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6875,
											"end": 6899,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6875,
											"end": 6899,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6875,
											"end": 6899,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6875,
											"end": 6899,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6875,
											"end": 6899,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6875,
											"end": 6899,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 6868,
											"end": 6899,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6868,
											"end": 6899,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6868,
											"end": 6899,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 6909,
											"end": 6919,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "347"
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "348"
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "349"
										},
										{
											"begin": 6909,
											"end": 6925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "tag",
											"source": 5,
											"value": "348"
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "tag",
											"source": 5,
											"value": "347"
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6909,
											"end": 6925,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 5942,
											"end": 6932,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5942,
											"end": 6932,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5942,
											"end": 6932,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5871,
											"end": 6932,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5871,
											"end": 6932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3437,
											"end": 3651,
											"name": "tag",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 3437,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3521,
											"end": 3535,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3554,
											"end": 3555,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3538,
											"end": 3551,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "352"
										},
										{
											"begin": 3548,
											"end": 3550,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3538,
											"end": 3547,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 3538,
											"end": 3551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3538,
											"end": 3551,
											"name": "tag",
											"source": 5,
											"value": "352"
										},
										{
											"begin": 3538,
											"end": 3551,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3538,
											"end": 3555,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "353"
										},
										{
											"begin": 3538,
											"end": 3555,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3538,
											"end": 3555,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3538,
											"end": 3555,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "340"
										},
										{
											"begin": 3538,
											"end": 3555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3538,
											"end": 3555,
											"name": "tag",
											"source": 5,
											"value": "353"
										},
										{
											"begin": 3538,
											"end": 3555,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3521,
											"end": 3555,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3521,
											"end": 3555,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3592,
											"end": 3599,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3565,
											"end": 3577,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 3565,
											"end": 3581,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3578,
											"end": 3580,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3565,
											"end": 3581,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3565,
											"end": 3581,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3565,
											"end": 3581,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3565,
											"end": 3581,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3565,
											"end": 3581,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3565,
											"end": 3581,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3565,
											"end": 3581,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3565,
											"end": 3581,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3565,
											"end": 3581,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3565,
											"end": 3581,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3565,
											"end": 3581,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3565,
											"end": 3581,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3565,
											"end": 3581,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3565,
											"end": 3581,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3565,
											"end": 3581,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3565,
											"end": 3589,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3582,
											"end": 3588,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3565,
											"end": 3589,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3565,
											"end": 3589,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3565,
											"end": 3589,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3565,
											"end": 3589,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3565,
											"end": 3589,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3565,
											"end": 3589,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3565,
											"end": 3589,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3565,
											"end": 3589,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3565,
											"end": 3589,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3565,
											"end": 3589,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3565,
											"end": 3589,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3565,
											"end": 3599,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3565,
											"end": 3599,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3565,
											"end": 3599,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3565,
											"end": 3599,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3638,
											"end": 3644,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3609,
											"end": 3626,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 3609,
											"end": 3635,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3627,
											"end": 3634,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3609,
											"end": 3635,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3609,
											"end": 3635,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3609,
											"end": 3635,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3609,
											"end": 3635,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3609,
											"end": 3635,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3609,
											"end": 3635,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3609,
											"end": 3635,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3609,
											"end": 3635,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3609,
											"end": 3635,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3609,
											"end": 3635,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3609,
											"end": 3635,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3609,
											"end": 3644,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3609,
											"end": 3644,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3609,
											"end": 3644,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3609,
											"end": 3644,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3511,
											"end": 3651,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3437,
											"end": 3651,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3437,
											"end": 3651,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3437,
											"end": 3651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10954,
											"end": 11136,
											"name": "tag",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 10954,
											"end": 11136,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11048,
											"end": 11066,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "355"
										},
										{
											"begin": 11054,
											"end": 11056,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11058,
											"end": 11065,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11048,
											"end": 11053,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "356"
										},
										{
											"begin": 11048,
											"end": 11066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11048,
											"end": 11066,
											"name": "tag",
											"source": 2,
											"value": "355"
										},
										{
											"begin": 11048,
											"end": 11066,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11076,
											"end": 11129,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "357"
										},
										{
											"begin": 11107,
											"end": 11108,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11111,
											"end": 11113,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11115,
											"end": 11122,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11124,
											"end": 11128,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11076,
											"end": 11098,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 11076,
											"end": 11129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11076,
											"end": 11129,
											"name": "tag",
											"source": 2,
											"value": "357"
										},
										{
											"begin": 11076,
											"end": 11129,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10954,
											"end": 11136,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10954,
											"end": 11136,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10954,
											"end": 11136,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10954,
											"end": 11136,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "tag",
											"source": 12,
											"value": "295"
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12267,
											"end": 12274,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12286,
											"end": 12300,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 12303,
											"end": 12304,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12286,
											"end": 12304,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12286,
											"end": 12304,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12351,
											"end": 12359,
											"name": "PUSH",
											"source": 12,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 12342,
											"end": 12347,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12342,
											"end": 12359,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "359"
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12388,
											"end": 12396,
											"name": "PUSH",
											"source": 12,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "360"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "361"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "304"
										},
										{
											"begin": 12379,
											"end": 12396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "tag",
											"source": 12,
											"value": "361"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "tag",
											"source": 12,
											"value": "360"
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12424,
											"end": 12426,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "tag",
											"source": 12,
											"value": "359"
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12467,
											"end": 12475,
											"name": "PUSH",
											"source": 12,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 12458,
											"end": 12463,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12458,
											"end": 12475,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "362"
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12504,
											"end": 12512,
											"name": "PUSH",
											"source": 12,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "363"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "364"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "304"
										},
										{
											"begin": 12495,
											"end": 12512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "tag",
											"source": 12,
											"value": "364"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "tag",
											"source": 12,
											"value": "363"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12540,
											"end": 12542,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "tag",
											"source": 12,
											"value": "362"
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12583,
											"end": 12591,
											"name": "PUSH",
											"source": 12,
											"value": "2386F26FC10000"
										},
										{
											"begin": 12574,
											"end": 12579,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12574,
											"end": 12591,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "365"
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12620,
											"end": 12628,
											"name": "PUSH",
											"source": 12,
											"value": "2386F26FC10000"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "366"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "367"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "304"
										},
										{
											"begin": 12611,
											"end": 12628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "tag",
											"source": 12,
											"value": "367"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "tag",
											"source": 12,
											"value": "366"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12656,
											"end": 12658,
											"name": "PUSH",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "tag",
											"source": 12,
											"value": "365"
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12699,
											"end": 12706,
											"name": "PUSH",
											"source": 12,
											"value": "5F5E100"
										},
										{
											"begin": 12690,
											"end": 12695,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12690,
											"end": 12706,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "368"
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12735,
											"end": 12742,
											"name": "PUSH",
											"source": 12,
											"value": "5F5E100"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "369"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "370"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "304"
										},
										{
											"begin": 12726,
											"end": 12742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "tag",
											"source": 12,
											"value": "370"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "tag",
											"source": 12,
											"value": "369"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12770,
											"end": 12771,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "tag",
											"source": 12,
											"value": "368"
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12812,
											"end": 12819,
											"name": "PUSH",
											"source": 12,
											"value": "2710"
										},
										{
											"begin": 12803,
											"end": 12808,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12803,
											"end": 12819,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "371"
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12848,
											"end": 12855,
											"name": "PUSH",
											"source": 12,
											"value": "2710"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "372"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "373"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "304"
										},
										{
											"begin": 12839,
											"end": 12855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "tag",
											"source": 12,
											"value": "373"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "tag",
											"source": 12,
											"value": "372"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12883,
											"end": 12884,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "tag",
											"source": 12,
											"value": "371"
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12925,
											"end": 12932,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 12916,
											"end": 12921,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12916,
											"end": 12932,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "374"
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12961,
											"end": 12968,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "375"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "376"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "304"
										},
										{
											"begin": 12952,
											"end": 12968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "tag",
											"source": 12,
											"value": "376"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "tag",
											"source": 12,
											"value": "375"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12996,
											"end": 12997,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "tag",
											"source": 12,
											"value": "374"
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13038,
											"end": 13045,
											"name": "PUSH",
											"source": 12,
											"value": "A"
										},
										{
											"begin": 13029,
											"end": 13034,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13029,
											"end": 13045,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "377"
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 13075,
											"end": 13076,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "tag",
											"source": 12,
											"value": "377"
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13117,
											"end": 13123,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 13110,
											"end": 13123,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13110,
											"end": 13123,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13110,
											"end": 13123,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12214,
											"end": 13130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 762,
											"end": 908,
											"name": "tag",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 762,
											"end": 908,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 838,
											"end": 842,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 876,
											"end": 901,
											"name": "PUSH",
											"source": 10,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 861,
											"end": 872,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 861,
											"end": 901,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 861,
											"end": 901,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 854,
											"end": 901,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 854,
											"end": 901,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 762,
											"end": 908,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 762,
											"end": 908,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 762,
											"end": 908,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 762,
											"end": 908,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "tag",
											"source": 2,
											"value": "329"
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7194,
											"end": 7232,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "380"
										},
										{
											"begin": 7208,
											"end": 7213,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7215,
											"end": 7222,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7224,
											"end": 7231,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7194,
											"end": 7207,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "381"
										},
										{
											"begin": 7194,
											"end": 7232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7194,
											"end": 7232,
											"name": "tag",
											"source": 2,
											"value": "380"
										},
										{
											"begin": 7194,
											"end": 7232,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "382"
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7269,
											"end": 7270,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7252,
											"end": 7257,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "383"
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7321,
											"end": 7328,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 2,
											"value": "7E27328900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "384"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 7298,
											"end": 7329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "tag",
											"source": 2,
											"value": "384"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "tag",
											"source": 2,
											"value": "383"
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7402,
											"end": 7409,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7411,
											"end": 7418,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 2,
											"value": "177E802F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "386"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 7375,
											"end": 7419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "tag",
											"source": 2,
											"value": "386"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "tag",
											"source": 2,
											"value": "382"
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7082,
											"end": 7450,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 10282,
											"name": "tag",
											"source": 2,
											"value": "356"
										},
										{
											"begin": 9955,
											"end": 10282,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10036,
											"end": 10037,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10022,
											"end": 10024,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "388"
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10091,
											"end": 10092,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH",
											"source": 2,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "389"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 10061,
											"end": 10094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "tag",
											"source": 2,
											"value": "389"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "tag",
											"source": 2,
											"value": "388"
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10114,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10138,
											"end": 10170,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "390"
										},
										{
											"begin": 10146,
											"end": 10148,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10150,
											"end": 10157,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10167,
											"end": 10168,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10138,
											"end": 10145,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 10138,
											"end": 10170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10138,
											"end": 10170,
											"name": "tag",
											"source": 2,
											"value": "390"
										},
										{
											"begin": 10138,
											"end": 10170,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10114,
											"end": 10170,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10114,
											"end": 10170,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10209,
											"end": 10210,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10184,
											"end": 10197,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 10180,
											"end": 10276,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "391"
										},
										{
											"begin": 10180,
											"end": 10276,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10262,
											"end": 10263,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH",
											"source": 2,
											"value": "73C6AC6E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "392"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 10234,
											"end": 10265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "tag",
											"source": 2,
											"value": "392"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10180,
											"end": 10276,
											"name": "tag",
											"source": 2,
											"value": "391"
										},
										{
											"begin": 10180,
											"end": 10276,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10008,
											"end": 10282,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 10282,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 10282,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 10282,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "tag",
											"source": 2,
											"value": "381"
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6479,
											"end": 6483,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6533,
											"end": 6534,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6514,
											"end": 6521,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "394"
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6561,
											"end": 6568,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6557,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "395"
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6572,
											"end": 6604,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "396"
										},
										{
											"begin": 6589,
											"end": 6594,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6596,
											"end": 6603,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6572,
											"end": 6588,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 6572,
											"end": 6604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6572,
											"end": 6604,
											"name": "tag",
											"source": 2,
											"value": "396"
										},
										{
											"begin": 6572,
											"end": 6604,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "tag",
											"source": 2,
											"value": "395"
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "397"
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6633,
											"end": 6640,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6608,
											"end": 6629,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "398"
										},
										{
											"begin": 6621,
											"end": 6628,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6608,
											"end": 6620,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 6608,
											"end": 6629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6608,
											"end": 6629,
											"name": "tag",
											"source": 2,
											"value": "398"
										},
										{
											"begin": 6608,
											"end": 6629,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "tag",
											"source": 2,
											"value": "397"
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "tag",
											"source": 2,
											"value": "394"
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6495,
											"end": 6641,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6495,
											"end": 6641,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6376,
											"end": 6648,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "217"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "KECCAK256",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "399"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "400"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "401"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "402"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "403"
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "402"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "400"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "401"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "399"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "404"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "405"
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "404"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "405"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "406"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "407"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "408"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "409"
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "408"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "406"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "407"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "409"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "410"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "123"
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "410"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "412"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "411"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "412"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DIV",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "KECCAK256",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "413"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "414"
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "413"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "411"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "414"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "415"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "416"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "415"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "416"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 17,
											"value": "417"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 17,
											"value": "418"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 17,
											"value": "419"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 17,
											"value": "420"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 17,
											"value": "421"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "493"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "420"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 17,
											"value": "493"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "494"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 17,
											"value": "494"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 17,
											"value": "422"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "496"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "421"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 17,
											"value": "496"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 17,
											"value": "30"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "498"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "499"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "418"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 17,
											"value": "499"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 17,
											"value": "498"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "500"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "422"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 17,
											"value": "500"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 17,
											"value": "423"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 17,
											"value": "424"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "503"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "423"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 17,
											"value": "503"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 17,
											"value": "33"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "505"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "424"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 17,
											"value": "505"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "tag",
											"source": 17,
											"value": "425"
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1609,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1598,
											"end": 1610,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1518,
											"end": 1617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "tag",
											"source": 17,
											"value": "426"
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1707,
											"end": 1718,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1736,
											"end": 1739,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1729,
											"end": 1748,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1776,
											"end": 1779,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1772,
											"end": 1786,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1623,
											"end": 1792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "tag",
											"source": 17,
											"value": "427"
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1879,
											"end": 1880,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "tag",
											"source": 17,
											"value": "509"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1903,
											"end": 1909,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 1900,
											"end": 1901,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1897,
											"end": 1910,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "511"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1988,
											"end": 1989,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1983,
											"end": 1986,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1979,
											"end": 1990,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1973,
											"end": 1991,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1969,
											"end": 1970,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1964,
											"end": 1967,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 1960,
											"end": 1971,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1953,
											"end": 1992,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1925,
											"end": 1927,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1922,
											"end": 1923,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1918,
											"end": 1928,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1913,
											"end": 1928,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1913,
											"end": 1928,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "509"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "tag",
											"source": 17,
											"value": "511"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2036,
											"end": 2037,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2027,
											"end": 2033,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 2022,
											"end": 2025,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 2018,
											"end": 2034,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2011,
											"end": 2038,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1860,
											"end": 2044,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1798,
											"end": 2044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "tag",
											"source": 17,
											"value": "428"
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2091,
											"end": 2097,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2144,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 2138,
											"end": 2145,
											"name": "NOT",
											"source": 17
										},
										{
											"begin": 2133,
											"end": 2135,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 2126,
											"end": 2131,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 2122,
											"end": 2136,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2118,
											"end": 2146,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2108,
											"end": 2146,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2108,
											"end": 2146,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2050,
											"end": 2152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "tag",
											"source": 17,
											"value": "429"
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2246,
											"end": 2249,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "514"
										},
										{
											"begin": 2307,
											"end": 2312,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "425"
										},
										{
											"begin": 2274,
											"end": 2313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "tag",
											"source": 17,
											"value": "514"
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "515"
										},
										{
											"begin": 2393,
											"end": 2399,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2388,
											"end": 2391,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "426"
										},
										{
											"begin": 2329,
											"end": 2400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "tag",
											"source": 17,
											"value": "515"
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2322,
											"end": 2400,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 2322,
											"end": 2400,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "516"
										},
										{
											"begin": 2467,
											"end": 2473,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2462,
											"end": 2465,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 2455,
											"end": 2459,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2448,
											"end": 2453,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 2444,
											"end": 2460,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "427"
										},
										{
											"begin": 2409,
											"end": 2474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "tag",
											"source": 17,
											"value": "516"
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "517"
										},
										{
											"begin": 2521,
											"end": 2527,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "428"
										},
										{
											"begin": 2499,
											"end": 2528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "tag",
											"source": 17,
											"value": "517"
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2494,
											"end": 2497,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 2490,
											"end": 2529,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2483,
											"end": 2529,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2483,
											"end": 2529,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2250,
											"end": 2535,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2158,
											"end": 2535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "tag",
											"source": 17,
											"value": "37"
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2654,
											"end": 2658,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2692,
											"end": 2694,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2681,
											"end": 2690,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2677,
											"end": 2695,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2669,
											"end": 2695,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2669,
											"end": 2695,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2741,
											"end": 2750,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2735,
											"end": 2739,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2731,
											"end": 2751,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 2727,
											"end": 2728,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2716,
											"end": 2725,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 2712,
											"end": 2729,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2705,
											"end": 2752,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "519"
										},
										{
											"begin": 2842,
											"end": 2846,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "429"
										},
										{
											"begin": 2769,
											"end": 2847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "tag",
											"source": 17,
											"value": "519"
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2761,
											"end": 2847,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2761,
											"end": 2847,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2541,
											"end": 2854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "tag",
											"source": 17,
											"value": "430"
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2897,
											"end": 2904,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2926,
											"end": 2931,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2860,
											"end": 2937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "tag",
											"source": 17,
											"value": "431"
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "522"
										},
										{
											"begin": 3034,
											"end": 3039,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "430"
										},
										{
											"begin": 3016,
											"end": 3040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "tag",
											"source": 17,
											"value": "522"
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3009,
											"end": 3014,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3006,
											"end": 3041,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "523"
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3055,
											"end": 3056,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3052,
											"end": 3053,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3045,
											"end": 3057,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "tag",
											"source": 17,
											"value": "523"
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2943,
											"end": 3065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "tag",
											"source": 17,
											"value": "432"
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3117,
											"end": 3122,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3155,
											"end": 3161,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3142,
											"end": 3162,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 3133,
											"end": 3162,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3133,
											"end": 3162,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "525"
										},
										{
											"begin": 3198,
											"end": 3203,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "431"
										},
										{
											"begin": 3171,
											"end": 3204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "tag",
											"source": 17,
											"value": "525"
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3071,
											"end": 3210,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "tag",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3275,
											"end": 3281,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3324,
											"end": 3326,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3303,
											"end": 3310,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 3299,
											"end": 3322,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 3295,
											"end": 3327,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "527"
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "528"
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "418"
										},
										{
											"begin": 3330,
											"end": 3409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "tag",
											"source": 17,
											"value": "528"
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "tag",
											"source": 17,
											"value": "527"
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3450,
											"end": 3451,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "529"
										},
										{
											"begin": 3520,
											"end": 3527,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 3511,
											"end": 3517,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3500,
											"end": 3509,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 3496,
											"end": 3518,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "432"
										},
										{
											"begin": 3475,
											"end": 3528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "tag",
											"source": 17,
											"value": "529"
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3465,
											"end": 3528,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3465,
											"end": 3528,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3421,
											"end": 3538,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3216,
											"end": 3545,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "tag",
											"source": 17,
											"value": "433"
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3588,
											"end": 3595,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3628,
											"end": 3670,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3621,
											"end": 3626,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3617,
											"end": 3671,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3606,
											"end": 3671,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3606,
											"end": 3671,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3551,
											"end": 3677,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "tag",
											"source": 17,
											"value": "434"
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3720,
											"end": 3727,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "532"
										},
										{
											"begin": 3767,
											"end": 3772,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "433"
										},
										{
											"begin": 3749,
											"end": 3773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "tag",
											"source": 17,
											"value": "532"
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3738,
											"end": 3773,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3738,
											"end": 3773,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3683,
											"end": 3779,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "tag",
											"source": 17,
											"value": "435"
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "534"
										},
										{
											"begin": 3890,
											"end": 3895,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "434"
										},
										{
											"begin": 3872,
											"end": 3896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "tag",
											"source": 17,
											"value": "534"
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3867,
											"end": 3870,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3860,
											"end": 3897,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3785,
											"end": 3903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "tag",
											"source": 17,
											"value": "43"
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4002,
											"end": 4006,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4040,
											"end": 4042,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4029,
											"end": 4038,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4025,
											"end": 4043,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4017,
											"end": 4043,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4017,
											"end": 4043,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "536"
										},
										{
											"begin": 4121,
											"end": 4122,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4110,
											"end": 4119,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 4106,
											"end": 4123,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4097,
											"end": 4103,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "435"
										},
										{
											"begin": 4053,
											"end": 4124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "tag",
											"source": 17,
											"value": "536"
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3909,
											"end": 4131,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "tag",
											"source": 17,
											"value": "436"
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "538"
										},
										{
											"begin": 4228,
											"end": 4233,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "434"
										},
										{
											"begin": 4210,
											"end": 4234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "tag",
											"source": 17,
											"value": "538"
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4203,
											"end": 4208,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4200,
											"end": 4235,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "539"
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4249,
											"end": 4250,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4246,
											"end": 4247,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4239,
											"end": 4251,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "tag",
											"source": 17,
											"value": "539"
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4137,
											"end": 4259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "tag",
											"source": 17,
											"value": "437"
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4311,
											"end": 4316,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4349,
											"end": 4355,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4336,
											"end": 4356,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 4327,
											"end": 4356,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4327,
											"end": 4356,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "541"
										},
										{
											"begin": 4392,
											"end": 4397,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "436"
										},
										{
											"begin": 4365,
											"end": 4398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "tag",
											"source": 17,
											"value": "541"
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4265,
											"end": 4404,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "tag",
											"source": 17,
											"value": "46"
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4478,
											"end": 4484,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4486,
											"end": 4492,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4535,
											"end": 4537,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4523,
											"end": 4532,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 4514,
											"end": 4521,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 4510,
											"end": 4533,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 4506,
											"end": 4538,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "543"
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "544"
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "418"
										},
										{
											"begin": 4541,
											"end": 4620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "tag",
											"source": 17,
											"value": "544"
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "tag",
											"source": 17,
											"value": "543"
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4661,
											"end": 4662,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "545"
										},
										{
											"begin": 4731,
											"end": 4738,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 4722,
											"end": 4728,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4711,
											"end": 4720,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 4707,
											"end": 4729,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "437"
										},
										{
											"begin": 4686,
											"end": 4739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "tag",
											"source": 17,
											"value": "545"
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4676,
											"end": 4739,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4676,
											"end": 4739,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4632,
											"end": 4749,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4788,
											"end": 4790,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "546"
										},
										{
											"begin": 4859,
											"end": 4866,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 4850,
											"end": 4856,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4839,
											"end": 4848,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 4835,
											"end": 4857,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "432"
										},
										{
											"begin": 4814,
											"end": 4867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "tag",
											"source": 17,
											"value": "546"
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4804,
											"end": 4867,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4804,
											"end": 4867,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4759,
											"end": 4877,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4410,
											"end": 4884,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4890,
											"end": 5008,
											"name": "tag",
											"source": 17,
											"value": "438"
										},
										{
											"begin": 4890,
											"end": 5008,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4977,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "548"
										},
										{
											"begin": 4995,
											"end": 5000,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4977,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "430"
										},
										{
											"begin": 4977,
											"end": 5001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4977,
											"end": 5001,
											"name": "tag",
											"source": 17,
											"value": "548"
										},
										{
											"begin": 4977,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4972,
											"end": 4975,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4965,
											"end": 5002,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4890,
											"end": 5008,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4890,
											"end": 5008,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4890,
											"end": 5008,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5014,
											"end": 5236,
											"name": "tag",
											"source": 17,
											"value": "51"
										},
										{
											"begin": 5014,
											"end": 5236,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5107,
											"end": 5111,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5145,
											"end": 5147,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 5134,
											"end": 5143,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5130,
											"end": 5148,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5122,
											"end": 5148,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5122,
											"end": 5148,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5158,
											"end": 5229,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "550"
										},
										{
											"begin": 5226,
											"end": 5227,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5215,
											"end": 5224,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 5211,
											"end": 5228,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5202,
											"end": 5208,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 5158,
											"end": 5229,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "438"
										},
										{
											"begin": 5158,
											"end": 5229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5158,
											"end": 5229,
											"name": "tag",
											"source": 17,
											"value": "550"
										},
										{
											"begin": 5158,
											"end": 5229,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5014,
											"end": 5236,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 5014,
											"end": 5236,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5014,
											"end": 5236,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5014,
											"end": 5236,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5014,
											"end": 5236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5242,
											"end": 5861,
											"name": "tag",
											"source": 17,
											"value": "54"
										},
										{
											"begin": 5242,
											"end": 5861,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5319,
											"end": 5325,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5327,
											"end": 5333,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5335,
											"end": 5341,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5384,
											"end": 5386,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 5372,
											"end": 5381,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 5363,
											"end": 5370,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 5359,
											"end": 5382,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 5355,
											"end": 5387,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 5352,
											"end": 5471,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 5352,
											"end": 5471,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "552"
										},
										{
											"begin": 5352,
											"end": 5471,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 5390,
											"end": 5469,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "553"
										},
										{
											"begin": 5390,
											"end": 5469,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "418"
										},
										{
											"begin": 5390,
											"end": 5469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5390,
											"end": 5469,
											"name": "tag",
											"source": 17,
											"value": "553"
										},
										{
											"begin": 5390,
											"end": 5469,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5352,
											"end": 5471,
											"name": "tag",
											"source": 17,
											"value": "552"
										},
										{
											"begin": 5352,
											"end": 5471,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5510,
											"end": 5511,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5535,
											"end": 5588,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "554"
										},
										{
											"begin": 5580,
											"end": 5587,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 5571,
											"end": 5577,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5560,
											"end": 5569,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 5556,
											"end": 5578,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5535,
											"end": 5588,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "437"
										},
										{
											"begin": 5535,
											"end": 5588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5535,
											"end": 5588,
											"name": "tag",
											"source": 17,
											"value": "554"
										},
										{
											"begin": 5535,
											"end": 5588,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5525,
											"end": 5588,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 5525,
											"end": 5588,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5481,
											"end": 5598,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5637,
											"end": 5639,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 5663,
											"end": 5716,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "555"
										},
										{
											"begin": 5708,
											"end": 5715,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 5699,
											"end": 5705,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5688,
											"end": 5697,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 5684,
											"end": 5706,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5663,
											"end": 5716,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "437"
										},
										{
											"begin": 5663,
											"end": 5716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5663,
											"end": 5716,
											"name": "tag",
											"source": 17,
											"value": "555"
										},
										{
											"begin": 5663,
											"end": 5716,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5653,
											"end": 5716,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 5653,
											"end": 5716,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5608,
											"end": 5726,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5765,
											"end": 5767,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 5791,
											"end": 5844,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "556"
										},
										{
											"begin": 5836,
											"end": 5843,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 5827,
											"end": 5833,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5816,
											"end": 5825,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 5812,
											"end": 5834,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5791,
											"end": 5844,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "432"
										},
										{
											"begin": 5791,
											"end": 5844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5791,
											"end": 5844,
											"name": "tag",
											"source": 17,
											"value": "556"
										},
										{
											"begin": 5791,
											"end": 5844,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5781,
											"end": 5844,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5781,
											"end": 5844,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5736,
											"end": 5854,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5242,
											"end": 5861,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 5242,
											"end": 5861,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5242,
											"end": 5861,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 5242,
											"end": 5861,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5242,
											"end": 5861,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 5242,
											"end": 5861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5867,
											"end": 5991,
											"name": "tag",
											"source": 17,
											"value": "439"
										},
										{
											"begin": 5867,
											"end": 5991,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5944,
											"end": 5950,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5978,
											"end": 5983,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5972,
											"end": 5984,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 5962,
											"end": 5984,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5962,
											"end": 5984,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5867,
											"end": 5991,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5867,
											"end": 5991,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5867,
											"end": 5991,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5867,
											"end": 5991,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5997,
											"end": 6191,
											"name": "tag",
											"source": 17,
											"value": "440"
										},
										{
											"begin": 5997,
											"end": 6191,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6106,
											"end": 6117,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6140,
											"end": 6146,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6135,
											"end": 6138,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6128,
											"end": 6147,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6180,
											"end": 6184,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 6175,
											"end": 6178,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6171,
											"end": 6185,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6156,
											"end": 6185,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6156,
											"end": 6185,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5997,
											"end": 6191,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 5997,
											"end": 6191,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5997,
											"end": 6191,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5997,
											"end": 6191,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5997,
											"end": 6191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6197,
											"end": 6339,
											"name": "tag",
											"source": 17,
											"value": "441"
										},
										{
											"begin": 6197,
											"end": 6339,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6274,
											"end": 6278,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6297,
											"end": 6300,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6289,
											"end": 6300,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6289,
											"end": 6300,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6327,
											"end": 6331,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 6322,
											"end": 6325,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6318,
											"end": 6332,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6310,
											"end": 6332,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6310,
											"end": 6332,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6197,
											"end": 6339,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6197,
											"end": 6339,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6197,
											"end": 6339,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6197,
											"end": 6339,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6345,
											"end": 6504,
											"name": "tag",
											"source": 17,
											"value": "442"
										},
										{
											"begin": 6345,
											"end": 6504,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6419,
											"end": 6430,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6453,
											"end": 6459,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6448,
											"end": 6451,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6441,
											"end": 6460,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6493,
											"end": 6497,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 6488,
											"end": 6491,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6484,
											"end": 6498,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6469,
											"end": 6498,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6469,
											"end": 6498,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6345,
											"end": 6504,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 6345,
											"end": 6504,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6345,
											"end": 6504,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6345,
											"end": 6504,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6345,
											"end": 6504,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6510,
											"end": 6867,
											"name": "tag",
											"source": 17,
											"value": "443"
										},
										{
											"begin": 6510,
											"end": 6867,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6588,
											"end": 6591,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6616,
											"end": 6655,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "562"
										},
										{
											"begin": 6649,
											"end": 6654,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6616,
											"end": 6655,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "425"
										},
										{
											"begin": 6616,
											"end": 6655,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6616,
											"end": 6655,
											"name": "tag",
											"source": 17,
											"value": "562"
										},
										{
											"begin": 6616,
											"end": 6655,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6671,
											"end": 6732,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "563"
										},
										{
											"begin": 6725,
											"end": 6731,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6720,
											"end": 6723,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 6671,
											"end": 6732,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "442"
										},
										{
											"begin": 6671,
											"end": 6732,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6671,
											"end": 6732,
											"name": "tag",
											"source": 17,
											"value": "563"
										},
										{
											"begin": 6671,
											"end": 6732,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6664,
											"end": 6732,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 6664,
											"end": 6732,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6741,
											"end": 6806,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "564"
										},
										{
											"begin": 6799,
											"end": 6805,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6794,
											"end": 6797,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 6787,
											"end": 6791,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 6780,
											"end": 6785,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 6776,
											"end": 6792,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6741,
											"end": 6806,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "427"
										},
										{
											"begin": 6741,
											"end": 6806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6741,
											"end": 6806,
											"name": "tag",
											"source": 17,
											"value": "564"
										},
										{
											"begin": 6741,
											"end": 6806,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6831,
											"end": 6860,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "565"
										},
										{
											"begin": 6853,
											"end": 6859,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6831,
											"end": 6860,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "428"
										},
										{
											"begin": 6831,
											"end": 6860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6831,
											"end": 6860,
											"name": "tag",
											"source": 17,
											"value": "565"
										},
										{
											"begin": 6831,
											"end": 6860,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6826,
											"end": 6829,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 6822,
											"end": 6861,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6815,
											"end": 6861,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6815,
											"end": 6861,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6592,
											"end": 6867,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6510,
											"end": 6867,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 6510,
											"end": 6867,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6510,
											"end": 6867,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6510,
											"end": 6867,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6510,
											"end": 6867,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6873,
											"end": 7069,
											"name": "tag",
											"source": 17,
											"value": "444"
										},
										{
											"begin": 6873,
											"end": 7069,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6962,
											"end": 6972,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6997,
											"end": 7063,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "567"
										},
										{
											"begin": 7059,
											"end": 7062,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 7051,
											"end": 7057,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 6997,
											"end": 7063,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "443"
										},
										{
											"begin": 6997,
											"end": 7063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6997,
											"end": 7063,
											"name": "tag",
											"source": 17,
											"value": "567"
										},
										{
											"begin": 6997,
											"end": 7063,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6983,
											"end": 7063,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6983,
											"end": 7063,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6873,
											"end": 7069,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 6873,
											"end": 7069,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6873,
											"end": 7069,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6873,
											"end": 7069,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6873,
											"end": 7069,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7075,
											"end": 7198,
											"name": "tag",
											"source": 17,
											"value": "445"
										},
										{
											"begin": 7075,
											"end": 7198,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7155,
											"end": 7159,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7187,
											"end": 7191,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 7182,
											"end": 7185,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7178,
											"end": 7192,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7170,
											"end": 7192,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7170,
											"end": 7192,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7075,
											"end": 7198,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 7075,
											"end": 7198,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7075,
											"end": 7198,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7075,
											"end": 7198,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7232,
											"end": 8223,
											"name": "tag",
											"source": 17,
											"value": "446"
										},
										{
											"begin": 7232,
											"end": 8223,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7371,
											"end": 7374,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7400,
											"end": 7464,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "570"
										},
										{
											"begin": 7458,
											"end": 7463,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7400,
											"end": 7464,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "439"
										},
										{
											"begin": 7400,
											"end": 7464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7400,
											"end": 7464,
											"name": "tag",
											"source": 17,
											"value": "570"
										},
										{
											"begin": 7400,
											"end": 7464,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7480,
											"end": 7576,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "571"
										},
										{
											"begin": 7569,
											"end": 7575,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7564,
											"end": 7567,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 7480,
											"end": 7576,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "440"
										},
										{
											"begin": 7480,
											"end": 7576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7480,
											"end": 7576,
											"name": "tag",
											"source": 17,
											"value": "571"
										},
										{
											"begin": 7480,
											"end": 7576,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7473,
											"end": 7576,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 7473,
											"end": 7576,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7602,
											"end": 7605,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 7647,
											"end": 7651,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 7639,
											"end": 7645,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7635,
											"end": 7652,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 7630,
											"end": 7633,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 7626,
											"end": 7653,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7677,
											"end": 7743,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "572"
										},
										{
											"begin": 7737,
											"end": 7742,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 7677,
											"end": 7743,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "441"
										},
										{
											"begin": 7677,
											"end": 7743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7677,
											"end": 7743,
											"name": "tag",
											"source": 17,
											"value": "572"
										},
										{
											"begin": 7677,
											"end": 7743,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7766,
											"end": 7773,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 7797,
											"end": 7798,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7782,
											"end": 8178,
											"name": "tag",
											"source": 17,
											"value": "573"
										},
										{
											"begin": 7782,
											"end": 8178,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7807,
											"end": 7813,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 7804,
											"end": 7805,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7801,
											"end": 7814,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 7782,
											"end": 8178,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 7782,
											"end": 8178,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "575"
										},
										{
											"begin": 7782,
											"end": 8178,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 7878,
											"end": 7887,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 7872,
											"end": 7876,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 7868,
											"end": 7888,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 7863,
											"end": 7866,
											"name": "DUP10",
											"source": 17
										},
										{
											"begin": 7856,
											"end": 7889,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7929,
											"end": 7935,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7923,
											"end": 7936,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 7957,
											"end": 8041,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "576"
										},
										{
											"begin": 8036,
											"end": 8040,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 8021,
											"end": 8034,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7957,
											"end": 8041,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "444"
										},
										{
											"begin": 7957,
											"end": 8041,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7957,
											"end": 8041,
											"name": "tag",
											"source": 17,
											"value": "576"
										},
										{
											"begin": 7957,
											"end": 8041,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7949,
											"end": 8041,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 7949,
											"end": 8041,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8064,
											"end": 8134,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "577"
										},
										{
											"begin": 8127,
											"end": 8133,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 8064,
											"end": 8134,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "445"
										},
										{
											"begin": 8064,
											"end": 8134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8064,
											"end": 8134,
											"name": "tag",
											"source": 17,
											"value": "577"
										},
										{
											"begin": 8064,
											"end": 8134,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8054,
											"end": 8134,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 8054,
											"end": 8134,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8163,
											"end": 8167,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 8158,
											"end": 8161,
											"name": "DUP11",
											"source": 17
										},
										{
											"begin": 8154,
											"end": 8168,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8147,
											"end": 8168,
											"name": "SWAP10",
											"source": 17
										},
										{
											"begin": 8147,
											"end": 8168,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7842,
											"end": 8178,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7829,
											"end": 7830,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 7826,
											"end": 7827,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7822,
											"end": 7831,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7817,
											"end": 7831,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7817,
											"end": 7831,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7782,
											"end": 8178,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "573"
										},
										{
											"begin": 7782,
											"end": 8178,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7782,
											"end": 8178,
											"name": "tag",
											"source": 17,
											"value": "575"
										},
										{
											"begin": 7782,
											"end": 8178,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7786,
											"end": 7800,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8194,
											"end": 8198,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8187,
											"end": 8198,
											"name": "SWAP8",
											"source": 17
										},
										{
											"begin": 8187,
											"end": 8198,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8214,
											"end": 8217,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 8207,
											"end": 8217,
											"name": "SWAP6",
											"source": 17
										},
										{
											"begin": 8207,
											"end": 8217,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7376,
											"end": 8223,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7376,
											"end": 8223,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7376,
											"end": 8223,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7376,
											"end": 8223,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7376,
											"end": 8223,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7232,
											"end": 8223,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 7232,
											"end": 8223,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 7232,
											"end": 8223,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7232,
											"end": 8223,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7232,
											"end": 8223,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8229,
											"end": 8642,
											"name": "tag",
											"source": 17,
											"value": "66"
										},
										{
											"begin": 8229,
											"end": 8642,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8392,
											"end": 8396,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 8430,
											"end": 8432,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 8419,
											"end": 8428,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8415,
											"end": 8433,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8407,
											"end": 8433,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 8407,
											"end": 8433,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8479,
											"end": 8488,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 8473,
											"end": 8477,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 8469,
											"end": 8489,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 8465,
											"end": 8466,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 8454,
											"end": 8463,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 8450,
											"end": 8467,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8443,
											"end": 8490,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8507,
											"end": 8635,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "579"
										},
										{
											"begin": 8630,
											"end": 8634,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 8621,
											"end": 8627,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 8507,
											"end": 8635,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "446"
										},
										{
											"begin": 8507,
											"end": 8635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8507,
											"end": 8635,
											"name": "tag",
											"source": 17,
											"value": "579"
										},
										{
											"begin": 8507,
											"end": 8635,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8499,
											"end": 8635,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 8499,
											"end": 8635,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8229,
											"end": 8642,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 8229,
											"end": 8642,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 8229,
											"end": 8642,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8229,
											"end": 8642,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8229,
											"end": 8642,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8648,
											"end": 8977,
											"name": "tag",
											"source": 17,
											"value": "77"
										},
										{
											"begin": 8648,
											"end": 8977,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8707,
											"end": 8713,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 8756,
											"end": 8758,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 8744,
											"end": 8753,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8735,
											"end": 8742,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 8731,
											"end": 8754,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 8727,
											"end": 8759,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 8724,
											"end": 8843,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 8724,
											"end": 8843,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "581"
										},
										{
											"begin": 8724,
											"end": 8843,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 8762,
											"end": 8841,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "582"
										},
										{
											"begin": 8762,
											"end": 8841,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "418"
										},
										{
											"begin": 8762,
											"end": 8841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8762,
											"end": 8841,
											"name": "tag",
											"source": 17,
											"value": "582"
										},
										{
											"begin": 8762,
											"end": 8841,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8724,
											"end": 8843,
											"name": "tag",
											"source": 17,
											"value": "581"
										},
										{
											"begin": 8724,
											"end": 8843,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8882,
											"end": 8883,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 8907,
											"end": 8960,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "583"
										},
										{
											"begin": 8952,
											"end": 8959,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 8943,
											"end": 8949,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8932,
											"end": 8941,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 8928,
											"end": 8950,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8907,
											"end": 8960,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "437"
										},
										{
											"begin": 8907,
											"end": 8960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8907,
											"end": 8960,
											"name": "tag",
											"source": 17,
											"value": "583"
										},
										{
											"begin": 8907,
											"end": 8960,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8897,
											"end": 8960,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 8897,
											"end": 8960,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8853,
											"end": 8970,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8648,
											"end": 8977,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 8648,
											"end": 8977,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 8648,
											"end": 8977,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8648,
											"end": 8977,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8648,
											"end": 8977,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8983,
											"end": 9099,
											"name": "tag",
											"source": 17,
											"value": "447"
										},
										{
											"begin": 8983,
											"end": 9099,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9053,
											"end": 9074,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "585"
										},
										{
											"begin": 9068,
											"end": 9073,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 9053,
											"end": 9074,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "423"
										},
										{
											"begin": 9053,
											"end": 9074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9053,
											"end": 9074,
											"name": "tag",
											"source": 17,
											"value": "585"
										},
										{
											"begin": 9053,
											"end": 9074,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9046,
											"end": 9051,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 9043,
											"end": 9075,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 9033,
											"end": 9093,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "586"
										},
										{
											"begin": 9033,
											"end": 9093,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 9089,
											"end": 9090,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 9086,
											"end": 9087,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 9079,
											"end": 9091,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 9033,
											"end": 9093,
											"name": "tag",
											"source": 17,
											"value": "586"
										},
										{
											"begin": 9033,
											"end": 9093,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8983,
											"end": 9099,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8983,
											"end": 9099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9105,
											"end": 9238,
											"name": "tag",
											"source": 17,
											"value": "448"
										},
										{
											"begin": 9105,
											"end": 9238,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9148,
											"end": 9153,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 9186,
											"end": 9192,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 9173,
											"end": 9193,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 9164,
											"end": 9193,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 9164,
											"end": 9193,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9202,
											"end": 9232,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "588"
										},
										{
											"begin": 9226,
											"end": 9231,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 9202,
											"end": 9232,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "447"
										},
										{
											"begin": 9202,
											"end": 9232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9202,
											"end": 9232,
											"name": "tag",
											"source": 17,
											"value": "588"
										},
										{
											"begin": 9202,
											"end": 9232,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9105,
											"end": 9238,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 9105,
											"end": 9238,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 9105,
											"end": 9238,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9105,
											"end": 9238,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9105,
											"end": 9238,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9244,
											"end": 9712,
											"name": "tag",
											"source": 17,
											"value": "93"
										},
										{
											"begin": 9244,
											"end": 9712,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9309,
											"end": 9315,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 9317,
											"end": 9323,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 9366,
											"end": 9368,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 9354,
											"end": 9363,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 9345,
											"end": 9352,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 9341,
											"end": 9364,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 9337,
											"end": 9369,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 9334,
											"end": 9453,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 9334,
											"end": 9453,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "590"
										},
										{
											"begin": 9334,
											"end": 9453,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 9372,
											"end": 9451,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "591"
										},
										{
											"begin": 9372,
											"end": 9451,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "418"
										},
										{
											"begin": 9372,
											"end": 9451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9372,
											"end": 9451,
											"name": "tag",
											"source": 17,
											"value": "591"
										},
										{
											"begin": 9372,
											"end": 9451,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9334,
											"end": 9453,
											"name": "tag",
											"source": 17,
											"value": "590"
										},
										{
											"begin": 9334,
											"end": 9453,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9492,
											"end": 9493,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 9517,
											"end": 9570,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "592"
										},
										{
											"begin": 9562,
											"end": 9569,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 9553,
											"end": 9559,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9542,
											"end": 9551,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 9538,
											"end": 9560,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9517,
											"end": 9570,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "437"
										},
										{
											"begin": 9517,
											"end": 9570,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9517,
											"end": 9570,
											"name": "tag",
											"source": 17,
											"value": "592"
										},
										{
											"begin": 9517,
											"end": 9570,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9507,
											"end": 9570,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 9507,
											"end": 9570,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9463,
											"end": 9580,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9619,
											"end": 9621,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 9645,
											"end": 9695,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "593"
										},
										{
											"begin": 9687,
											"end": 9694,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 9678,
											"end": 9684,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9667,
											"end": 9676,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 9663,
											"end": 9685,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9645,
											"end": 9695,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "448"
										},
										{
											"begin": 9645,
											"end": 9695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9645,
											"end": 9695,
											"name": "tag",
											"source": 17,
											"value": "593"
										},
										{
											"begin": 9645,
											"end": 9695,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9635,
											"end": 9695,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 9635,
											"end": 9695,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9590,
											"end": 9705,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9244,
											"end": 9712,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 9244,
											"end": 9712,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9244,
											"end": 9712,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 9244,
											"end": 9712,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 9244,
											"end": 9712,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9244,
											"end": 9712,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9718,
											"end": 9835,
											"name": "tag",
											"source": 17,
											"value": "449"
										},
										{
											"begin": 9718,
											"end": 9835,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9827,
											"end": 9828,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 9824,
											"end": 9825,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 9817,
											"end": 9829,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 9841,
											"end": 9958,
											"name": "tag",
											"source": 17,
											"value": "450"
										},
										{
											"begin": 9841,
											"end": 9958,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9950,
											"end": 9951,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 9947,
											"end": 9948,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 9940,
											"end": 9952,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 9964,
											"end": 10144,
											"name": "tag",
											"source": 17,
											"value": "298"
										},
										{
											"begin": 9964,
											"end": 10144,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10012,
											"end": 10089,
											"name": "PUSH",
											"source": 17,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10009,
											"end": 10010,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 10002,
											"end": 10090,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10109,
											"end": 10113,
											"name": "PUSH",
											"source": 17,
											"value": "41"
										},
										{
											"begin": 10106,
											"end": 10107,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 10099,
											"end": 10114,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10133,
											"end": 10137,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 10130,
											"end": 10131,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 10123,
											"end": 10138,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 10150,
											"end": 10431,
											"name": "tag",
											"source": 17,
											"value": "451"
										},
										{
											"begin": 10150,
											"end": 10431,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10233,
											"end": 10260,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "598"
										},
										{
											"begin": 10255,
											"end": 10259,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10233,
											"end": 10260,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "428"
										},
										{
											"begin": 10233,
											"end": 10260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10233,
											"end": 10260,
											"name": "tag",
											"source": 17,
											"value": "598"
										},
										{
											"begin": 10233,
											"end": 10260,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10225,
											"end": 10231,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 10221,
											"end": 10261,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10363,
											"end": 10369,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 10351,
											"end": 10361,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 10348,
											"end": 10370,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 10327,
											"end": 10345,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10315,
											"end": 10325,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10312,
											"end": 10346,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 10309,
											"end": 10371,
											"name": "OR",
											"source": 17
										},
										{
											"begin": 10306,
											"end": 10394,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 10306,
											"end": 10394,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "599"
										},
										{
											"begin": 10306,
											"end": 10394,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 10374,
											"end": 10392,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "600"
										},
										{
											"begin": 10374,
											"end": 10392,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "298"
										},
										{
											"begin": 10374,
											"end": 10392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10374,
											"end": 10392,
											"name": "tag",
											"source": 17,
											"value": "600"
										},
										{
											"begin": 10374,
											"end": 10392,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10306,
											"end": 10394,
											"name": "tag",
											"source": 17,
											"value": "599"
										},
										{
											"begin": 10306,
											"end": 10394,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10414,
											"end": 10424,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 10410,
											"end": 10412,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 10403,
											"end": 10425,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10193,
											"end": 10431,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10150,
											"end": 10431,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10150,
											"end": 10431,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10150,
											"end": 10431,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10437,
											"end": 10566,
											"name": "tag",
											"source": 17,
											"value": "452"
										},
										{
											"begin": 10437,
											"end": 10566,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10471,
											"end": 10477,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 10498,
											"end": 10518,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "602"
										},
										{
											"begin": 10498,
											"end": 10518,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "417"
										},
										{
											"begin": 10498,
											"end": 10518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10498,
											"end": 10518,
											"name": "tag",
											"source": 17,
											"value": "602"
										},
										{
											"begin": 10498,
											"end": 10518,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10488,
											"end": 10518,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 10488,
											"end": 10518,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10527,
											"end": 10560,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "603"
										},
										{
											"begin": 10555,
											"end": 10559,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10547,
											"end": 10553,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10527,
											"end": 10560,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "451"
										},
										{
											"begin": 10527,
											"end": 10560,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10527,
											"end": 10560,
											"name": "tag",
											"source": 17,
											"value": "603"
										},
										{
											"begin": 10527,
											"end": 10560,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10437,
											"end": 10566,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 10437,
											"end": 10566,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 10437,
											"end": 10566,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10437,
											"end": 10566,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10572,
											"end": 10879,
											"name": "tag",
											"source": 17,
											"value": "453"
										},
										{
											"begin": 10572,
											"end": 10879,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10633,
											"end": 10637,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 10723,
											"end": 10741,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10715,
											"end": 10721,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10712,
											"end": 10742,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 10709,
											"end": 10765,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 10709,
											"end": 10765,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "605"
										},
										{
											"begin": 10709,
											"end": 10765,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 10745,
											"end": 10763,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "606"
										},
										{
											"begin": 10745,
											"end": 10763,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "298"
										},
										{
											"begin": 10745,
											"end": 10763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10745,
											"end": 10763,
											"name": "tag",
											"source": 17,
											"value": "606"
										},
										{
											"begin": 10745,
											"end": 10763,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10709,
											"end": 10765,
											"name": "tag",
											"source": 17,
											"value": "605"
										},
										{
											"begin": 10709,
											"end": 10765,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10783,
											"end": 10812,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "607"
										},
										{
											"begin": 10805,
											"end": 10811,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10783,
											"end": 10812,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "428"
										},
										{
											"begin": 10783,
											"end": 10812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10783,
											"end": 10812,
											"name": "tag",
											"source": 17,
											"value": "607"
										},
										{
											"begin": 10783,
											"end": 10812,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10775,
											"end": 10812,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 10775,
											"end": 10812,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10867,
											"end": 10871,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 10861,
											"end": 10865,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 10857,
											"end": 10872,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10849,
											"end": 10872,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 10849,
											"end": 10872,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10572,
											"end": 10879,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 10572,
											"end": 10879,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 10572,
											"end": 10879,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10572,
											"end": 10879,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10885,
											"end": 11031,
											"name": "tag",
											"source": 17,
											"value": "454"
										},
										{
											"begin": 10885,
											"end": 11031,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10982,
											"end": 10988,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10977,
											"end": 10980,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 10972,
											"end": 10975,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 10959,
											"end": 10989,
											"name": "CALLDATACOPY",
											"source": 17
										},
										{
											"begin": 11023,
											"end": 11024,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 11014,
											"end": 11020,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 11009,
											"end": 11012,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 11005,
											"end": 11021,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10998,
											"end": 11025,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10885,
											"end": 11031,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10885,
											"end": 11031,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10885,
											"end": 11031,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10885,
											"end": 11031,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11037,
											"end": 11460,
											"name": "tag",
											"source": 17,
											"value": "455"
										},
										{
											"begin": 11037,
											"end": 11460,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11114,
											"end": 11119,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 11139,
											"end": 11204,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "610"
										},
										{
											"begin": 11155,
											"end": 11203,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "611"
										},
										{
											"begin": 11196,
											"end": 11202,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 11155,
											"end": 11203,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "453"
										},
										{
											"begin": 11155,
											"end": 11203,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11155,
											"end": 11203,
											"name": "tag",
											"source": 17,
											"value": "611"
										},
										{
											"begin": 11155,
											"end": 11203,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11139,
											"end": 11204,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "452"
										},
										{
											"begin": 11139,
											"end": 11204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11139,
											"end": 11204,
											"name": "tag",
											"source": 17,
											"value": "610"
										},
										{
											"begin": 11139,
											"end": 11204,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11130,
											"end": 11204,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 11130,
											"end": 11204,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11227,
											"end": 11233,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 11220,
											"end": 11225,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 11213,
											"end": 11234,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 11265,
											"end": 11269,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 11258,
											"end": 11263,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 11254,
											"end": 11270,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11303,
											"end": 11306,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 11294,
											"end": 11300,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 11289,
											"end": 11292,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 11285,
											"end": 11301,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11282,
											"end": 11307,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 11279,
											"end": 11391,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 11279,
											"end": 11391,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "612"
										},
										{
											"begin": 11279,
											"end": 11391,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 11310,
											"end": 11389,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "613"
										},
										{
											"begin": 11310,
											"end": 11389,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "450"
										},
										{
											"begin": 11310,
											"end": 11389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11310,
											"end": 11389,
											"name": "tag",
											"source": 17,
											"value": "613"
										},
										{
											"begin": 11310,
											"end": 11389,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11279,
											"end": 11391,
											"name": "tag",
											"source": 17,
											"value": "612"
										},
										{
											"begin": 11279,
											"end": 11391,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11400,
											"end": 11454,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "614"
										},
										{
											"begin": 11447,
											"end": 11453,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 11442,
											"end": 11445,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 11437,
											"end": 11440,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 11400,
											"end": 11454,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "454"
										},
										{
											"begin": 11400,
											"end": 11454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11400,
											"end": 11454,
											"name": "tag",
											"source": 17,
											"value": "614"
										},
										{
											"begin": 11400,
											"end": 11454,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11120,
											"end": 11460,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11037,
											"end": 11460,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 11037,
											"end": 11460,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 11037,
											"end": 11460,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11037,
											"end": 11460,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11037,
											"end": 11460,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11037,
											"end": 11460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11479,
											"end": 11817,
											"name": "tag",
											"source": 17,
											"value": "456"
										},
										{
											"begin": 11479,
											"end": 11817,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11534,
											"end": 11539,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 11583,
											"end": 11586,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 11576,
											"end": 11580,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 11568,
											"end": 11574,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 11564,
											"end": 11581,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11560,
											"end": 11587,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 11550,
											"end": 11672,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "616"
										},
										{
											"begin": 11550,
											"end": 11672,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 11591,
											"end": 11670,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "617"
										},
										{
											"begin": 11591,
											"end": 11670,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "449"
										},
										{
											"begin": 11591,
											"end": 11670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11591,
											"end": 11670,
											"name": "tag",
											"source": 17,
											"value": "617"
										},
										{
											"begin": 11591,
											"end": 11670,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11550,
											"end": 11672,
											"name": "tag",
											"source": 17,
											"value": "616"
										},
										{
											"begin": 11550,
											"end": 11672,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11708,
											"end": 11714,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 11695,
											"end": 11715,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 11733,
											"end": 11811,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "618"
										},
										{
											"begin": 11807,
											"end": 11810,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 11799,
											"end": 11805,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 11792,
											"end": 11796,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 11784,
											"end": 11790,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 11780,
											"end": 11797,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11733,
											"end": 11811,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "455"
										},
										{
											"begin": 11733,
											"end": 11811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11733,
											"end": 11811,
											"name": "tag",
											"source": 17,
											"value": "618"
										},
										{
											"begin": 11733,
											"end": 11811,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11724,
											"end": 11811,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 11724,
											"end": 11811,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11540,
											"end": 11817,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11479,
											"end": 11817,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 11479,
											"end": 11817,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 11479,
											"end": 11817,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11479,
											"end": 11817,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11479,
											"end": 11817,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11823,
											"end": 12766,
											"name": "tag",
											"source": 17,
											"value": "97"
										},
										{
											"begin": 11823,
											"end": 12766,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11918,
											"end": 11924,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 11926,
											"end": 11932,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 11934,
											"end": 11940,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 11942,
											"end": 11948,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 11991,
											"end": 11994,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 11979,
											"end": 11988,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 11970,
											"end": 11977,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 11966,
											"end": 11989,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 11962,
											"end": 11995,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 11959,
											"end": 12079,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 11959,
											"end": 12079,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "620"
										},
										{
											"begin": 11959,
											"end": 12079,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 11998,
											"end": 12077,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "621"
										},
										{
											"begin": 11998,
											"end": 12077,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "418"
										},
										{
											"begin": 11998,
											"end": 12077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11998,
											"end": 12077,
											"name": "tag",
											"source": 17,
											"value": "621"
										},
										{
											"begin": 11998,
											"end": 12077,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11959,
											"end": 12079,
											"name": "tag",
											"source": 17,
											"value": "620"
										},
										{
											"begin": 11959,
											"end": 12079,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12118,
											"end": 12119,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 12143,
											"end": 12196,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "622"
										},
										{
											"begin": 12188,
											"end": 12195,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 12179,
											"end": 12185,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 12168,
											"end": 12177,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": 12164,
											"end": 12186,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 12143,
											"end": 12196,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "437"
										},
										{
											"begin": 12143,
											"end": 12196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 12143,
											"end": 12196,
											"name": "tag",
											"source": 17,
											"value": "622"
										},
										{
											"begin": 12143,
											"end": 12196,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12133,
											"end": 12196,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 12133,
											"end": 12196,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12089,
											"end": 12206,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12245,
											"end": 12247,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 12271,
											"end": 12324,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "623"
										},
										{
											"begin": 12316,
											"end": 12323,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 12307,
											"end": 12313,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 12296,
											"end": 12305,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": 12292,
											"end": 12314,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 12271,
											"end": 12324,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "437"
										},
										{
											"begin": 12271,
											"end": 12324,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 12271,
											"end": 12324,
											"name": "tag",
											"source": 17,
											"value": "623"
										},
										{
											"begin": 12271,
											"end": 12324,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12261,
											"end": 12324,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 12261,
											"end": 12324,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12216,
											"end": 12334,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12373,
											"end": 12375,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 12399,
											"end": 12452,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "624"
										},
										{
											"begin": 12444,
											"end": 12451,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 12435,
											"end": 12441,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 12424,
											"end": 12433,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": 12420,
											"end": 12442,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 12399,
											"end": 12452,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "432"
										},
										{
											"begin": 12399,
											"end": 12452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 12399,
											"end": 12452,
											"name": "tag",
											"source": 17,
											"value": "624"
										},
										{
											"begin": 12399,
											"end": 12452,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12389,
											"end": 12452,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 12389,
											"end": 12452,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12344,
											"end": 12462,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12529,
											"end": 12531,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 12518,
											"end": 12527,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 12514,
											"end": 12532,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 12501,
											"end": 12533,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 12560,
											"end": 12578,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12552,
											"end": 12558,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 12549,
											"end": 12579,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 12546,
											"end": 12663,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 12546,
											"end": 12663,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "625"
										},
										{
											"begin": 12546,
											"end": 12663,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 12582,
											"end": 12661,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "626"
										},
										{
											"begin": 12582,
											"end": 12661,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "419"
										},
										{
											"begin": 12582,
											"end": 12661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 12582,
											"end": 12661,
											"name": "tag",
											"source": 17,
											"value": "626"
										},
										{
											"begin": 12582,
											"end": 12661,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12546,
											"end": 12663,
											"name": "tag",
											"source": 17,
											"value": "625"
										},
										{
											"begin": 12546,
											"end": 12663,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12687,
											"end": 12749,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "627"
										},
										{
											"begin": 12741,
											"end": 12748,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 12732,
											"end": 12738,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 12721,
											"end": 12730,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": 12717,
											"end": 12739,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 12687,
											"end": 12749,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "456"
										},
										{
											"begin": 12687,
											"end": 12749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 12687,
											"end": 12749,
											"name": "tag",
											"source": 17,
											"value": "627"
										},
										{
											"begin": 12687,
											"end": 12749,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12677,
											"end": 12749,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 12677,
											"end": 12749,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12472,
											"end": 12759,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11823,
											"end": 12766,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 11823,
											"end": 12766,
											"name": "SWAP6",
											"source": 17
										},
										{
											"begin": 11823,
											"end": 12766,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 11823,
											"end": 12766,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 11823,
											"end": 12766,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11823,
											"end": 12766,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 11823,
											"end": 12766,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11823,
											"end": 12766,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 12772,
											"end": 13093,
											"name": "tag",
											"source": 17,
											"value": "457"
										},
										{
											"begin": 12772,
											"end": 13093,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12859,
											"end": 12863,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 12949,
											"end": 12967,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12941,
											"end": 12947,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 12938,
											"end": 12968,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 12935,
											"end": 12991,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 12935,
											"end": 12991,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "629"
										},
										{
											"begin": 12935,
											"end": 12991,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 12971,
											"end": 12989,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "630"
										},
										{
											"begin": 12971,
											"end": 12989,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "298"
										},
										{
											"begin": 12971,
											"end": 12989,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 12971,
											"end": 12989,
											"name": "tag",
											"source": 17,
											"value": "630"
										},
										{
											"begin": 12971,
											"end": 12989,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12935,
											"end": 12991,
											"name": "tag",
											"source": 17,
											"value": "629"
										},
										{
											"begin": 12935,
											"end": 12991,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13021,
											"end": 13025,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 13013,
											"end": 13019,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 13009,
											"end": 13026,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 13001,
											"end": 13026,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 13001,
											"end": 13026,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13081,
											"end": 13085,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 13075,
											"end": 13079,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 13071,
											"end": 13086,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 13063,
											"end": 13086,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 13063,
											"end": 13086,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12772,
											"end": 13093,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 12772,
											"end": 13093,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 12772,
											"end": 13093,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12772,
											"end": 13093,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 13099,
											"end": 13216,
											"name": "tag",
											"source": 17,
											"value": "458"
										},
										{
											"begin": 13099,
											"end": 13216,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13208,
											"end": 13209,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 13205,
											"end": 13206,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 13198,
											"end": 13210,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 13222,
											"end": 13530,
											"name": "tag",
											"source": 17,
											"value": "459"
										},
										{
											"begin": 13222,
											"end": 13530,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13284,
											"end": 13288,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 13374,
											"end": 13392,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13366,
											"end": 13372,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 13363,
											"end": 13393,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 13360,
											"end": 13416,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 13360,
											"end": 13416,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "633"
										},
										{
											"begin": 13360,
											"end": 13416,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 13396,
											"end": 13414,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "634"
										},
										{
											"begin": 13396,
											"end": 13414,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "298"
										},
										{
											"begin": 13396,
											"end": 13414,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 13396,
											"end": 13414,
											"name": "tag",
											"source": 17,
											"value": "634"
										},
										{
											"begin": 13396,
											"end": 13414,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13360,
											"end": 13416,
											"name": "tag",
											"source": 17,
											"value": "633"
										},
										{
											"begin": 13360,
											"end": 13416,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13434,
											"end": 13463,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "635"
										},
										{
											"begin": 13456,
											"end": 13462,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 13434,
											"end": 13463,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "428"
										},
										{
											"begin": 13434,
											"end": 13463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 13434,
											"end": 13463,
											"name": "tag",
											"source": 17,
											"value": "635"
										},
										{
											"begin": 13434,
											"end": 13463,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13426,
											"end": 13463,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 13426,
											"end": 13463,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13518,
											"end": 13522,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 13512,
											"end": 13516,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 13508,
											"end": 13523,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 13500,
											"end": 13523,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 13500,
											"end": 13523,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13222,
											"end": 13530,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 13222,
											"end": 13530,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 13222,
											"end": 13530,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13222,
											"end": 13530,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 13536,
											"end": 13961,
											"name": "tag",
											"source": 17,
											"value": "460"
										},
										{
											"begin": 13536,
											"end": 13961,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13614,
											"end": 13619,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 13639,
											"end": 13705,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "637"
										},
										{
											"begin": 13655,
											"end": 13704,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "638"
										},
										{
											"begin": 13697,
											"end": 13703,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 13655,
											"end": 13704,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "459"
										},
										{
											"begin": 13655,
											"end": 13704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 13655,
											"end": 13704,
											"name": "tag",
											"source": 17,
											"value": "638"
										},
										{
											"begin": 13655,
											"end": 13704,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13639,
											"end": 13705,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "452"
										},
										{
											"begin": 13639,
											"end": 13705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 13639,
											"end": 13705,
											"name": "tag",
											"source": 17,
											"value": "637"
										},
										{
											"begin": 13639,
											"end": 13705,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13630,
											"end": 13705,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 13630,
											"end": 13705,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13728,
											"end": 13734,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 13721,
											"end": 13726,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 13714,
											"end": 13735,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 13766,
											"end": 13770,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 13759,
											"end": 13764,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 13755,
											"end": 13771,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 13804,
											"end": 13807,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 13795,
											"end": 13801,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 13790,
											"end": 13793,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 13786,
											"end": 13802,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 13783,
											"end": 13808,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 13780,
											"end": 13892,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 13780,
											"end": 13892,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "639"
										},
										{
											"begin": 13780,
											"end": 13892,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 13811,
											"end": 13890,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "640"
										},
										{
											"begin": 13811,
											"end": 13890,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "450"
										},
										{
											"begin": 13811,
											"end": 13890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 13811,
											"end": 13890,
											"name": "tag",
											"source": 17,
											"value": "640"
										},
										{
											"begin": 13811,
											"end": 13890,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13780,
											"end": 13892,
											"name": "tag",
											"source": 17,
											"value": "639"
										},
										{
											"begin": 13780,
											"end": 13892,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13901,
											"end": 13955,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "641"
										},
										{
											"begin": 13948,
											"end": 13954,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 13943,
											"end": 13946,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 13938,
											"end": 13941,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 13901,
											"end": 13955,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "454"
										},
										{
											"begin": 13901,
											"end": 13955,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 13901,
											"end": 13955,
											"name": "tag",
											"source": 17,
											"value": "641"
										},
										{
											"begin": 13901,
											"end": 13955,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13620,
											"end": 13961,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13536,
											"end": 13961,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 13536,
											"end": 13961,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 13536,
											"end": 13961,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13536,
											"end": 13961,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13536,
											"end": 13961,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13536,
											"end": 13961,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 13981,
											"end": 14321,
											"name": "tag",
											"source": 17,
											"value": "461"
										},
										{
											"begin": 13981,
											"end": 14321,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14037,
											"end": 14042,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 14086,
											"end": 14089,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 14079,
											"end": 14083,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 14071,
											"end": 14077,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 14067,
											"end": 14084,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 14063,
											"end": 14090,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 14053,
											"end": 14175,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "643"
										},
										{
											"begin": 14053,
											"end": 14175,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 14094,
											"end": 14173,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "644"
										},
										{
											"begin": 14094,
											"end": 14173,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "449"
										},
										{
											"begin": 14094,
											"end": 14173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 14094,
											"end": 14173,
											"name": "tag",
											"source": 17,
											"value": "644"
										},
										{
											"begin": 14094,
											"end": 14173,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14053,
											"end": 14175,
											"name": "tag",
											"source": 17,
											"value": "643"
										},
										{
											"begin": 14053,
											"end": 14175,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14211,
											"end": 14217,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 14198,
											"end": 14218,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 14236,
											"end": 14315,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "645"
										},
										{
											"begin": 14311,
											"end": 14314,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 14303,
											"end": 14309,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 14296,
											"end": 14300,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 14288,
											"end": 14294,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 14284,
											"end": 14301,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 14236,
											"end": 14315,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "460"
										},
										{
											"begin": 14236,
											"end": 14315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 14236,
											"end": 14315,
											"name": "tag",
											"source": 17,
											"value": "645"
										},
										{
											"begin": 14236,
											"end": 14315,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14227,
											"end": 14315,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 14227,
											"end": 14315,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14043,
											"end": 14321,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13981,
											"end": 14321,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 13981,
											"end": 14321,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 13981,
											"end": 14321,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13981,
											"end": 14321,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13981,
											"end": 14321,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 14343,
											"end": 15288,
											"name": "tag",
											"source": 17,
											"value": "462"
										},
										{
											"begin": 14343,
											"end": 15288,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14449,
											"end": 14454,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 14474,
											"end": 14565,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "647"
										},
										{
											"begin": 14490,
											"end": 14564,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "648"
										},
										{
											"begin": 14557,
											"end": 14563,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 14490,
											"end": 14564,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "457"
										},
										{
											"begin": 14490,
											"end": 14564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 14490,
											"end": 14564,
											"name": "tag",
											"source": 17,
											"value": "648"
										},
										{
											"begin": 14490,
											"end": 14564,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14474,
											"end": 14565,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "452"
										},
										{
											"begin": 14474,
											"end": 14565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 14474,
											"end": 14565,
											"name": "tag",
											"source": 17,
											"value": "647"
										},
										{
											"begin": 14474,
											"end": 14565,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14465,
											"end": 14565,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 14465,
											"end": 14565,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14585,
											"end": 14590,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 14614,
											"end": 14620,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 14607,
											"end": 14612,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 14600,
											"end": 14621,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 14648,
											"end": 14652,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 14641,
											"end": 14646,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 14637,
											"end": 14653,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 14630,
											"end": 14653,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 14630,
											"end": 14653,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14701,
											"end": 14705,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 14693,
											"end": 14699,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 14689,
											"end": 14706,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 14681,
											"end": 14687,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 14677,
											"end": 14707,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 14730,
											"end": 14733,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 14722,
											"end": 14728,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 14719,
											"end": 14734,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 14716,
											"end": 14838,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 14716,
											"end": 14838,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "649"
										},
										{
											"begin": 14716,
											"end": 14838,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 14749,
											"end": 14828,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "650"
										},
										{
											"begin": 14749,
											"end": 14828,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "458"
										},
										{
											"begin": 14749,
											"end": 14828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 14749,
											"end": 14828,
											"name": "tag",
											"source": 17,
											"value": "650"
										},
										{
											"begin": 14749,
											"end": 14828,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14716,
											"end": 14838,
											"name": "tag",
											"source": 17,
											"value": "649"
										},
										{
											"begin": 14716,
											"end": 14838,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14864,
											"end": 14870,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 14847,
											"end": 15282,
											"name": "tag",
											"source": 17,
											"value": "651"
										},
										{
											"begin": 14847,
											"end": 15282,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14881,
											"end": 14887,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 14876,
											"end": 14879,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 14873,
											"end": 14888,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 14847,
											"end": 15282,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 14847,
											"end": 15282,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "653"
										},
										{
											"begin": 14847,
											"end": 15282,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 14970,
											"end": 14973,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 14957,
											"end": 14974,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 15006,
											"end": 15024,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14993,
											"end": 15004,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 14990,
											"end": 15025,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 14987,
											"end": 15109,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 14987,
											"end": 15109,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "654"
										},
										{
											"begin": 14987,
											"end": 15109,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 15028,
											"end": 15107,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "655"
										},
										{
											"begin": 15028,
											"end": 15107,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "449"
										},
										{
											"begin": 15028,
											"end": 15107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 15028,
											"end": 15107,
											"name": "tag",
											"source": 17,
											"value": "655"
										},
										{
											"begin": 15028,
											"end": 15107,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14987,
											"end": 15109,
											"name": "tag",
											"source": 17,
											"value": "654"
										},
										{
											"begin": 14987,
											"end": 15109,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15152,
											"end": 15163,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 15144,
											"end": 15150,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 15140,
											"end": 15164,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 15190,
											"end": 15237,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "656"
										},
										{
											"begin": 15233,
											"end": 15236,
											"name": "DUP10",
											"source": 17
										},
										{
											"begin": 15221,
											"end": 15231,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 15190,
											"end": 15237,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "461"
										},
										{
											"begin": 15190,
											"end": 15237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 15190,
											"end": 15237,
											"name": "tag",
											"source": 17,
											"value": "656"
										},
										{
											"begin": 15190,
											"end": 15237,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15185,
											"end": 15188,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 15178,
											"end": 15238,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 15267,
											"end": 15271,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 15262,
											"end": 15265,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 15258,
											"end": 15272,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 15251,
											"end": 15272,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 15251,
											"end": 15272,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14923,
											"end": 15282,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14923,
											"end": 15282,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14907,
											"end": 14911,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 14902,
											"end": 14905,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 14898,
											"end": 14912,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 14891,
											"end": 14912,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 14891,
											"end": 14912,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14847,
											"end": 15282,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "651"
										},
										{
											"begin": 14847,
											"end": 15282,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 14847,
											"end": 15282,
											"name": "tag",
											"source": 17,
											"value": "653"
										},
										{
											"begin": 14847,
											"end": 15282,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14851,
											"end": 14872,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14455,
											"end": 15288,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14455,
											"end": 15288,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14343,
											"end": 15288,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 14343,
											"end": 15288,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 14343,
											"end": 15288,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14343,
											"end": 15288,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14343,
											"end": 15288,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14343,
											"end": 15288,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 15310,
											"end": 15700,
											"name": "tag",
											"source": 17,
											"value": "463"
										},
										{
											"begin": 15310,
											"end": 15700,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15391,
											"end": 15396,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 15440,
											"end": 15443,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 15433,
											"end": 15437,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 15425,
											"end": 15431,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 15421,
											"end": 15438,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 15417,
											"end": 15444,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 15407,
											"end": 15529,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "658"
										},
										{
											"begin": 15407,
											"end": 15529,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 15448,
											"end": 15527,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "659"
										},
										{
											"begin": 15448,
											"end": 15527,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "449"
										},
										{
											"begin": 15448,
											"end": 15527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 15448,
											"end": 15527,
											"name": "tag",
											"source": 17,
											"value": "659"
										},
										{
											"begin": 15448,
											"end": 15527,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15407,
											"end": 15529,
											"name": "tag",
											"source": 17,
											"value": "658"
										},
										{
											"begin": 15407,
											"end": 15529,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15565,
											"end": 15571,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 15552,
											"end": 15572,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 15590,
											"end": 15694,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "660"
										},
										{
											"begin": 15690,
											"end": 15693,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 15682,
											"end": 15688,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 15675,
											"end": 15679,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 15667,
											"end": 15673,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 15663,
											"end": 15680,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 15590,
											"end": 15694,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "462"
										},
										{
											"begin": 15590,
											"end": 15694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 15590,
											"end": 15694,
											"name": "tag",
											"source": 17,
											"value": "660"
										},
										{
											"begin": 15590,
											"end": 15694,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15581,
											"end": 15694,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 15581,
											"end": 15694,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15397,
											"end": 15700,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15310,
											"end": 15700,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 15310,
											"end": 15700,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 15310,
											"end": 15700,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15310,
											"end": 15700,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15310,
											"end": 15700,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 15706,
											"end": 16265,
											"name": "tag",
											"source": 17,
											"value": "105"
										},
										{
											"begin": 15706,
											"end": 16265,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15800,
											"end": 15806,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 15849,
											"end": 15851,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 15837,
											"end": 15846,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 15828,
											"end": 15835,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 15824,
											"end": 15847,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 15820,
											"end": 15852,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 15817,
											"end": 15936,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 15817,
											"end": 15936,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "662"
										},
										{
											"begin": 15817,
											"end": 15936,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 15855,
											"end": 15934,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "663"
										},
										{
											"begin": 15855,
											"end": 15934,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "418"
										},
										{
											"begin": 15855,
											"end": 15934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 15855,
											"end": 15934,
											"name": "tag",
											"source": 17,
											"value": "663"
										},
										{
											"begin": 15855,
											"end": 15934,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15817,
											"end": 15936,
											"name": "tag",
											"source": 17,
											"value": "662"
										},
										{
											"begin": 15817,
											"end": 15936,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 16003,
											"end": 16004,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 15992,
											"end": 16001,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 15988,
											"end": 16005,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 15975,
											"end": 16006,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 16033,
											"end": 16051,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16025,
											"end": 16031,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 16022,
											"end": 16052,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 16019,
											"end": 16136,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 16019,
											"end": 16136,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "664"
										},
										{
											"begin": 16019,
											"end": 16136,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 16055,
											"end": 16134,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "665"
										},
										{
											"begin": 16055,
											"end": 16134,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "419"
										},
										{
											"begin": 16055,
											"end": 16134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 16055,
											"end": 16134,
											"name": "tag",
											"source": 17,
											"value": "665"
										},
										{
											"begin": 16055,
											"end": 16134,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 16019,
											"end": 16136,
											"name": "tag",
											"source": 17,
											"value": "664"
										},
										{
											"begin": 16019,
											"end": 16136,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 16160,
											"end": 16248,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "666"
										},
										{
											"begin": 16240,
											"end": 16247,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 16231,
											"end": 16237,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 16220,
											"end": 16229,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 16216,
											"end": 16238,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 16160,
											"end": 16248,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "463"
										},
										{
											"begin": 16160,
											"end": 16248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 16160,
											"end": 16248,
											"name": "tag",
											"source": 17,
											"value": "666"
										},
										{
											"begin": 16160,
											"end": 16248,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 16150,
											"end": 16248,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 16150,
											"end": 16248,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15946,
											"end": 16258,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15706,
											"end": 16265,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 15706,
											"end": 16265,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 15706,
											"end": 16265,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15706,
											"end": 16265,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15706,
											"end": 16265,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 16271,
											"end": 16745,
											"name": "tag",
											"source": 17,
											"value": "109"
										},
										{
											"begin": 16271,
											"end": 16745,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 16339,
											"end": 16345,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 16347,
											"end": 16353,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 16396,
											"end": 16398,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 16384,
											"end": 16393,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 16375,
											"end": 16382,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 16371,
											"end": 16394,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 16367,
											"end": 16399,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 16364,
											"end": 16483,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 16364,
											"end": 16483,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "668"
										},
										{
											"begin": 16364,
											"end": 16483,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 16402,
											"end": 16481,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "669"
										},
										{
											"begin": 16402,
											"end": 16481,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "418"
										},
										{
											"begin": 16402,
											"end": 16481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 16402,
											"end": 16481,
											"name": "tag",
											"source": 17,
											"value": "669"
										},
										{
											"begin": 16402,
											"end": 16481,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 16364,
											"end": 16483,
											"name": "tag",
											"source": 17,
											"value": "668"
										},
										{
											"begin": 16364,
											"end": 16483,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 16522,
											"end": 16523,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 16547,
											"end": 16600,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "670"
										},
										{
											"begin": 16592,
											"end": 16599,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 16583,
											"end": 16589,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 16572,
											"end": 16581,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 16568,
											"end": 16590,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 16547,
											"end": 16600,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "437"
										},
										{
											"begin": 16547,
											"end": 16600,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 16547,
											"end": 16600,
											"name": "tag",
											"source": 17,
											"value": "670"
										},
										{
											"begin": 16547,
											"end": 16600,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 16537,
											"end": 16600,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 16537,
											"end": 16600,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16493,
											"end": 16610,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16649,
											"end": 16651,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 16675,
											"end": 16728,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "671"
										},
										{
											"begin": 16720,
											"end": 16727,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 16711,
											"end": 16717,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 16700,
											"end": 16709,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 16696,
											"end": 16718,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 16675,
											"end": 16728,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "437"
										},
										{
											"begin": 16675,
											"end": 16728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 16675,
											"end": 16728,
											"name": "tag",
											"source": 17,
											"value": "671"
										},
										{
											"begin": 16675,
											"end": 16728,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 16665,
											"end": 16728,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 16665,
											"end": 16728,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16620,
											"end": 16738,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16271,
											"end": 16745,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 16271,
											"end": 16745,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16271,
											"end": 16745,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 16271,
											"end": 16745,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 16271,
											"end": 16745,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16271,
											"end": 16745,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 16751,
											"end": 16931,
											"name": "tag",
											"source": 17,
											"value": "464"
										},
										{
											"begin": 16751,
											"end": 16931,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 16799,
											"end": 16876,
											"name": "PUSH",
											"source": 17,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16796,
											"end": 16797,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 16789,
											"end": 16877,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 16896,
											"end": 16900,
											"name": "PUSH",
											"source": 17,
											"value": "22"
										},
										{
											"begin": 16893,
											"end": 16894,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 16886,
											"end": 16901,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 16920,
											"end": 16924,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 16917,
											"end": 16918,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 16910,
											"end": 16925,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 16937,
											"end": 17257,
											"name": "tag",
											"source": 17,
											"value": "123"
										},
										{
											"begin": 16937,
											"end": 17257,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 16981,
											"end": 16987,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 17018,
											"end": 17019,
											"name": "PUSH",
											"source": 17,
											"value": "2"
										},
										{
											"begin": 17012,
											"end": 17016,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 17008,
											"end": 17020,
											"name": "DIV",
											"source": 17
										},
										{
											"begin": 16998,
											"end": 17020,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 16998,
											"end": 17020,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17065,
											"end": 17066,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 17059,
											"end": 17063,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 17055,
											"end": 17067,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 17086,
											"end": 17104,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 17076,
											"end": 17157,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "674"
										},
										{
											"begin": 17076,
											"end": 17157,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 17142,
											"end": 17146,
											"name": "PUSH",
											"source": 17,
											"value": "7F"
										},
										{
											"begin": 17134,
											"end": 17140,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 17130,
											"end": 17147,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 17120,
											"end": 17147,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 17120,
											"end": 17147,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17076,
											"end": 17157,
											"name": "tag",
											"source": 17,
											"value": "674"
										},
										{
											"begin": 17076,
											"end": 17157,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17204,
											"end": 17206,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 17196,
											"end": 17202,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 17193,
											"end": 17207,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 17173,
											"end": 17191,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 17170,
											"end": 17208,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 17167,
											"end": 17251,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "675"
										},
										{
											"begin": 17167,
											"end": 17251,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 17223,
											"end": 17241,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "676"
										},
										{
											"begin": 17223,
											"end": 17241,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "464"
										},
										{
											"begin": 17223,
											"end": 17241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 17223,
											"end": 17241,
											"name": "tag",
											"source": 17,
											"value": "676"
										},
										{
											"begin": 17223,
											"end": 17241,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17167,
											"end": 17251,
											"name": "tag",
											"source": 17,
											"value": "675"
										},
										{
											"begin": 17167,
											"end": 17251,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 16988,
											"end": 17257,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16937,
											"end": 17257,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 16937,
											"end": 17257,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 16937,
											"end": 17257,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16937,
											"end": 17257,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 17263,
											"end": 17705,
											"name": "tag",
											"source": 17,
											"value": "147"
										},
										{
											"begin": 17263,
											"end": 17705,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17412,
											"end": 17416,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 17450,
											"end": 17452,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 17439,
											"end": 17448,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 17435,
											"end": 17453,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 17427,
											"end": 17453,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 17427,
											"end": 17453,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17463,
											"end": 17534,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "678"
										},
										{
											"begin": 17531,
											"end": 17532,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 17520,
											"end": 17529,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 17516,
											"end": 17533,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 17507,
											"end": 17513,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 17463,
											"end": 17534,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "435"
										},
										{
											"begin": 17463,
											"end": 17534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 17463,
											"end": 17534,
											"name": "tag",
											"source": 17,
											"value": "678"
										},
										{
											"begin": 17463,
											"end": 17534,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17544,
											"end": 17616,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "679"
										},
										{
											"begin": 17612,
											"end": 17614,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 17601,
											"end": 17610,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 17597,
											"end": 17615,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 17588,
											"end": 17594,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 17544,
											"end": 17616,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "438"
										},
										{
											"begin": 17544,
											"end": 17616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 17544,
											"end": 17616,
											"name": "tag",
											"source": 17,
											"value": "679"
										},
										{
											"begin": 17544,
											"end": 17616,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17626,
											"end": 17698,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "680"
										},
										{
											"begin": 17694,
											"end": 17696,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 17683,
											"end": 17692,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 17679,
											"end": 17697,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 17670,
											"end": 17676,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 17626,
											"end": 17698,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "435"
										},
										{
											"begin": 17626,
											"end": 17698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 17626,
											"end": 17698,
											"name": "tag",
											"source": 17,
											"value": "680"
										},
										{
											"begin": 17626,
											"end": 17698,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17263,
											"end": 17705,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 17263,
											"end": 17705,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 17263,
											"end": 17705,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17263,
											"end": 17705,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17263,
											"end": 17705,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17263,
											"end": 17705,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17263,
											"end": 17705,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 17711,
											"end": 18043,
											"name": "tag",
											"source": 17,
											"value": "152"
										},
										{
											"begin": 17711,
											"end": 18043,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17832,
											"end": 17836,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 17870,
											"end": 17872,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 17859,
											"end": 17868,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 17855,
											"end": 17873,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 17847,
											"end": 17873,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 17847,
											"end": 17873,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17883,
											"end": 17954,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "682"
										},
										{
											"begin": 17951,
											"end": 17952,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 17940,
											"end": 17949,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 17936,
											"end": 17953,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 17927,
											"end": 17933,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 17883,
											"end": 17954,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "435"
										},
										{
											"begin": 17883,
											"end": 17954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 17883,
											"end": 17954,
											"name": "tag",
											"source": 17,
											"value": "682"
										},
										{
											"begin": 17883,
											"end": 17954,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17964,
											"end": 18036,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "683"
										},
										{
											"begin": 18032,
											"end": 18034,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 18021,
											"end": 18030,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 18017,
											"end": 18035,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 18008,
											"end": 18014,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 17964,
											"end": 18036,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "438"
										},
										{
											"begin": 17964,
											"end": 18036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 17964,
											"end": 18036,
											"name": "tag",
											"source": 17,
											"value": "683"
										},
										{
											"begin": 17964,
											"end": 18036,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17711,
											"end": 18043,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 17711,
											"end": 18043,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 17711,
											"end": 18043,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17711,
											"end": 18043,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17711,
											"end": 18043,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17711,
											"end": 18043,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 18049,
											"end": 18229,
											"name": "tag",
											"source": 17,
											"value": "170"
										},
										{
											"begin": 18049,
											"end": 18229,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 18097,
											"end": 18174,
											"name": "PUSH",
											"source": 17,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18094,
											"end": 18095,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 18087,
											"end": 18175,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 18194,
											"end": 18198,
											"name": "PUSH",
											"source": 17,
											"value": "32"
										},
										{
											"begin": 18191,
											"end": 18192,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 18184,
											"end": 18199,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 18218,
											"end": 18222,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 18215,
											"end": 18216,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 18208,
											"end": 18223,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 18235,
											"end": 18383,
											"name": "tag",
											"source": 17,
											"value": "465"
										},
										{
											"begin": 18235,
											"end": 18383,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 18337,
											"end": 18348,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 18374,
											"end": 18377,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 18359,
											"end": 18377,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 18359,
											"end": 18377,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 18235,
											"end": 18383,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 18235,
											"end": 18383,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 18235,
											"end": 18383,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 18235,
											"end": 18383,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 18235,
											"end": 18383,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 18389,
											"end": 18779,
											"name": "tag",
											"source": 17,
											"value": "466"
										},
										{
											"begin": 18389,
											"end": 18779,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 18495,
											"end": 18498,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 18523,
											"end": 18562,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "687"
										},
										{
											"begin": 18556,
											"end": 18561,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 18523,
											"end": 18562,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "425"
										},
										{
											"begin": 18523,
											"end": 18562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 18523,
											"end": 18562,
											"name": "tag",
											"source": 17,
											"value": "687"
										},
										{
											"begin": 18523,
											"end": 18562,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 18578,
											"end": 18667,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "688"
										},
										{
											"begin": 18660,
											"end": 18666,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 18655,
											"end": 18658,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 18578,
											"end": 18667,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "465"
										},
										{
											"begin": 18578,
											"end": 18667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 18578,
											"end": 18667,
											"name": "tag",
											"source": 17,
											"value": "688"
										},
										{
											"begin": 18578,
											"end": 18667,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 18571,
											"end": 18667,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 18571,
											"end": 18667,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 18676,
											"end": 18741,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "689"
										},
										{
											"begin": 18734,
											"end": 18740,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 18729,
											"end": 18732,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 18722,
											"end": 18726,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 18715,
											"end": 18720,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 18711,
											"end": 18727,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 18676,
											"end": 18741,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "427"
										},
										{
											"begin": 18676,
											"end": 18741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 18676,
											"end": 18741,
											"name": "tag",
											"source": 17,
											"value": "689"
										},
										{
											"begin": 18676,
											"end": 18741,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 18766,
											"end": 18772,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 18761,
											"end": 18764,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 18757,
											"end": 18773,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 18750,
											"end": 18773,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 18750,
											"end": 18773,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 18499,
											"end": 18779,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 18389,
											"end": 18779,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 18389,
											"end": 18779,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 18389,
											"end": 18779,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 18389,
											"end": 18779,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 18389,
											"end": 18779,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 18785,
											"end": 19220,
											"name": "tag",
											"source": 17,
											"value": "212"
										},
										{
											"begin": 18785,
											"end": 19220,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 18965,
											"end": 18968,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 18987,
											"end": 19082,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "691"
										},
										{
											"begin": 19078,
											"end": 19081,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 19069,
											"end": 19075,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 18987,
											"end": 19082,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "466"
										},
										{
											"begin": 18987,
											"end": 19082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 18987,
											"end": 19082,
											"name": "tag",
											"source": 17,
											"value": "691"
										},
										{
											"begin": 18987,
											"end": 19082,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 18980,
											"end": 19082,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 18980,
											"end": 19082,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19099,
											"end": 19194,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "692"
										},
										{
											"begin": 19190,
											"end": 19193,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 19181,
											"end": 19187,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 19099,
											"end": 19194,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "466"
										},
										{
											"begin": 19099,
											"end": 19194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 19099,
											"end": 19194,
											"name": "tag",
											"source": 17,
											"value": "692"
										},
										{
											"begin": 19099,
											"end": 19194,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 19092,
											"end": 19194,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 19092,
											"end": 19194,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19211,
											"end": 19214,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 19204,
											"end": 19214,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 19204,
											"end": 19214,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 18785,
											"end": 19220,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 18785,
											"end": 19220,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 18785,
											"end": 19220,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 18785,
											"end": 19220,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 18785,
											"end": 19220,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 18785,
											"end": 19220,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 19226,
											"end": 19324,
											"name": "tag",
											"source": 17,
											"value": "467"
										},
										{
											"begin": 19226,
											"end": 19324,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 19277,
											"end": 19283,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 19311,
											"end": 19316,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 19305,
											"end": 19317,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 19295,
											"end": 19317,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 19295,
											"end": 19317,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19226,
											"end": 19324,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 19226,
											"end": 19324,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 19226,
											"end": 19324,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19226,
											"end": 19324,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 19330,
											"end": 19498,
											"name": "tag",
											"source": 17,
											"value": "468"
										},
										{
											"begin": 19330,
											"end": 19498,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 19413,
											"end": 19424,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 19447,
											"end": 19453,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 19442,
											"end": 19445,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 19435,
											"end": 19454,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 19487,
											"end": 19491,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 19482,
											"end": 19485,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 19478,
											"end": 19492,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 19463,
											"end": 19492,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 19463,
											"end": 19492,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19330,
											"end": 19498,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 19330,
											"end": 19498,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 19330,
											"end": 19498,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19330,
											"end": 19498,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19330,
											"end": 19498,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 19504,
											"end": 19877,
											"name": "tag",
											"source": 17,
											"value": "469"
										},
										{
											"begin": 19504,
											"end": 19877,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 19590,
											"end": 19593,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 19618,
											"end": 19656,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "696"
										},
										{
											"begin": 19650,
											"end": 19655,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 19618,
											"end": 19656,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "467"
										},
										{
											"begin": 19618,
											"end": 19656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 19618,
											"end": 19656,
											"name": "tag",
											"source": 17,
											"value": "696"
										},
										{
											"begin": 19618,
											"end": 19656,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 19672,
											"end": 19742,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "697"
										},
										{
											"begin": 19735,
											"end": 19741,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 19730,
											"end": 19733,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 19672,
											"end": 19742,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "468"
										},
										{
											"begin": 19672,
											"end": 19742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 19672,
											"end": 19742,
											"name": "tag",
											"source": 17,
											"value": "697"
										},
										{
											"begin": 19672,
											"end": 19742,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 19665,
											"end": 19742,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 19665,
											"end": 19742,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19751,
											"end": 19816,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "698"
										},
										{
											"begin": 19809,
											"end": 19815,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 19804,
											"end": 19807,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 19797,
											"end": 19801,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 19790,
											"end": 19795,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 19786,
											"end": 19802,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 19751,
											"end": 19816,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "427"
										},
										{
											"begin": 19751,
											"end": 19816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 19751,
											"end": 19816,
											"name": "tag",
											"source": 17,
											"value": "698"
										},
										{
											"begin": 19751,
											"end": 19816,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 19841,
											"end": 19870,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "699"
										},
										{
											"begin": 19863,
											"end": 19869,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 19841,
											"end": 19870,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "428"
										},
										{
											"begin": 19841,
											"end": 19870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 19841,
											"end": 19870,
											"name": "tag",
											"source": 17,
											"value": "699"
										},
										{
											"begin": 19841,
											"end": 19870,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 19836,
											"end": 19839,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 19832,
											"end": 19871,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 19825,
											"end": 19871,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 19825,
											"end": 19871,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19594,
											"end": 19877,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19504,
											"end": 19877,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 19504,
											"end": 19877,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 19504,
											"end": 19877,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19504,
											"end": 19877,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19504,
											"end": 19877,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 19883,
											"end": 20523,
											"name": "tag",
											"source": 17,
											"value": "276"
										},
										{
											"begin": 19883,
											"end": 20523,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 20078,
											"end": 20082,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 20116,
											"end": 20119,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 20105,
											"end": 20114,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 20101,
											"end": 20120,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 20093,
											"end": 20120,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 20093,
											"end": 20120,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 20130,
											"end": 20201,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "701"
										},
										{
											"begin": 20198,
											"end": 20199,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 20187,
											"end": 20196,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 20183,
											"end": 20200,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 20174,
											"end": 20180,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 20130,
											"end": 20201,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "435"
										},
										{
											"begin": 20130,
											"end": 20201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 20130,
											"end": 20201,
											"name": "tag",
											"source": 17,
											"value": "701"
										},
										{
											"begin": 20130,
											"end": 20201,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 20211,
											"end": 20283,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "702"
										},
										{
											"begin": 20279,
											"end": 20281,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 20268,
											"end": 20277,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 20264,
											"end": 20282,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 20255,
											"end": 20261,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 20211,
											"end": 20283,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "435"
										},
										{
											"begin": 20211,
											"end": 20283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 20211,
											"end": 20283,
											"name": "tag",
											"source": 17,
											"value": "702"
										},
										{
											"begin": 20211,
											"end": 20283,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 20293,
											"end": 20365,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "703"
										},
										{
											"begin": 20361,
											"end": 20363,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 20350,
											"end": 20359,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 20346,
											"end": 20364,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 20337,
											"end": 20343,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 20293,
											"end": 20365,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "438"
										},
										{
											"begin": 20293,
											"end": 20365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 20293,
											"end": 20365,
											"name": "tag",
											"source": 17,
											"value": "703"
										},
										{
											"begin": 20293,
											"end": 20365,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 20412,
											"end": 20421,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 20406,
											"end": 20410,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 20402,
											"end": 20422,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 20397,
											"end": 20399,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 20386,
											"end": 20395,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 20382,
											"end": 20400,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 20375,
											"end": 20423,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 20440,
											"end": 20516,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "704"
										},
										{
											"begin": 20511,
											"end": 20515,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 20502,
											"end": 20508,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 20440,
											"end": 20516,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "469"
										},
										{
											"begin": 20440,
											"end": 20516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 20440,
											"end": 20516,
											"name": "tag",
											"source": 17,
											"value": "704"
										},
										{
											"begin": 20440,
											"end": 20516,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 20432,
											"end": 20516,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 20432,
											"end": 20516,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19883,
											"end": 20523,
											"name": "SWAP6",
											"source": 17
										},
										{
											"begin": 19883,
											"end": 20523,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 19883,
											"end": 20523,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19883,
											"end": 20523,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19883,
											"end": 20523,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19883,
											"end": 20523,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19883,
											"end": 20523,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19883,
											"end": 20523,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 20529,
											"end": 20670,
											"name": "tag",
											"source": 17,
											"value": "470"
										},
										{
											"begin": 20529,
											"end": 20670,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 20585,
											"end": 20590,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 20616,
											"end": 20622,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 20610,
											"end": 20623,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 20601,
											"end": 20623,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 20601,
											"end": 20623,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 20632,
											"end": 20664,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "706"
										},
										{
											"begin": 20658,
											"end": 20663,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 20632,
											"end": 20664,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "421"
										},
										{
											"begin": 20632,
											"end": 20664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 20632,
											"end": 20664,
											"name": "tag",
											"source": 17,
											"value": "706"
										},
										{
											"begin": 20632,
											"end": 20664,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 20529,
											"end": 20670,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 20529,
											"end": 20670,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 20529,
											"end": 20670,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 20529,
											"end": 20670,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 20529,
											"end": 20670,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 20676,
											"end": 21025,
											"name": "tag",
											"source": 17,
											"value": "279"
										},
										{
											"begin": 20676,
											"end": 21025,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 20745,
											"end": 20751,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 20794,
											"end": 20796,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 20782,
											"end": 20791,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 20773,
											"end": 20780,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 20769,
											"end": 20792,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 20765,
											"end": 20797,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 20762,
											"end": 20881,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 20762,
											"end": 20881,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "708"
										},
										{
											"begin": 20762,
											"end": 20881,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 20800,
											"end": 20879,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "709"
										},
										{
											"begin": 20800,
											"end": 20879,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "418"
										},
										{
											"begin": 20800,
											"end": 20879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 20800,
											"end": 20879,
											"name": "tag",
											"source": 17,
											"value": "709"
										},
										{
											"begin": 20800,
											"end": 20879,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 20762,
											"end": 20881,
											"name": "tag",
											"source": 17,
											"value": "708"
										},
										{
											"begin": 20762,
											"end": 20881,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 20920,
											"end": 20921,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 20945,
											"end": 21008,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "710"
										},
										{
											"begin": 21000,
											"end": 21007,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 20991,
											"end": 20997,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 20980,
											"end": 20989,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 20976,
											"end": 20998,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 20945,
											"end": 21008,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "470"
										},
										{
											"begin": 20945,
											"end": 21008,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 20945,
											"end": 21008,
											"name": "tag",
											"source": 17,
											"value": "710"
										},
										{
											"begin": 20945,
											"end": 21008,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 20935,
											"end": 21008,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 20935,
											"end": 21008,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 20891,
											"end": 21018,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 20676,
											"end": 21025,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 20676,
											"end": 21025,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 20676,
											"end": 21025,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 20676,
											"end": 21025,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 20676,
											"end": 21025,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 21031,
											"end": 21211,
											"name": "tag",
											"source": 17,
											"value": "304"
										},
										{
											"begin": 21031,
											"end": 21211,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 21079,
											"end": 21156,
											"name": "PUSH",
											"source": 17,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21076,
											"end": 21077,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 21069,
											"end": 21157,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 21176,
											"end": 21180,
											"name": "PUSH",
											"source": 17,
											"value": "12"
										},
										{
											"begin": 21173,
											"end": 21174,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 21166,
											"end": 21181,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 21200,
											"end": 21204,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 21197,
											"end": 21198,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 21190,
											"end": 21205,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 21217,
											"end": 21397,
											"name": "tag",
											"source": 17,
											"value": "471"
										},
										{
											"begin": 21217,
											"end": 21397,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 21265,
											"end": 21342,
											"name": "PUSH",
											"source": 17,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21262,
											"end": 21263,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 21255,
											"end": 21343,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 21362,
											"end": 21366,
											"name": "PUSH",
											"source": 17,
											"value": "11"
										},
										{
											"begin": 21359,
											"end": 21360,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 21352,
											"end": 21367,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 21386,
											"end": 21390,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 21383,
											"end": 21384,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 21376,
											"end": 21391,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 21403,
											"end": 21597,
											"name": "tag",
											"source": 17,
											"value": "340"
										},
										{
											"begin": 21403,
											"end": 21597,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 21443,
											"end": 21447,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 21463,
											"end": 21483,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "714"
										},
										{
											"begin": 21481,
											"end": 21482,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 21463,
											"end": 21483,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "430"
										},
										{
											"begin": 21463,
											"end": 21483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 21463,
											"end": 21483,
											"name": "tag",
											"source": 17,
											"value": "714"
										},
										{
											"begin": 21463,
											"end": 21483,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 21458,
											"end": 21483,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 21458,
											"end": 21483,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 21497,
											"end": 21517,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "715"
										},
										{
											"begin": 21515,
											"end": 21516,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 21497,
											"end": 21517,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "430"
										},
										{
											"begin": 21497,
											"end": 21517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 21497,
											"end": 21517,
											"name": "tag",
											"source": 17,
											"value": "715"
										},
										{
											"begin": 21497,
											"end": 21517,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 21492,
											"end": 21517,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 21492,
											"end": 21517,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 21541,
											"end": 21542,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 21538,
											"end": 21539,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 21534,
											"end": 21543,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 21526,
											"end": 21543,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 21526,
											"end": 21543,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 21565,
											"end": 21566,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 21559,
											"end": 21563,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 21556,
											"end": 21567,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 21553,
											"end": 21590,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 21553,
											"end": 21590,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "716"
										},
										{
											"begin": 21553,
											"end": 21590,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 21570,
											"end": 21588,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "717"
										},
										{
											"begin": 21570,
											"end": 21588,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "471"
										},
										{
											"begin": 21570,
											"end": 21588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 21570,
											"end": 21588,
											"name": "tag",
											"source": 17,
											"value": "717"
										},
										{
											"begin": 21570,
											"end": 21588,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 21553,
											"end": 21590,
											"name": "tag",
											"source": 17,
											"value": "716"
										},
										{
											"begin": 21553,
											"end": 21590,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 21403,
											"end": 21597,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 21403,
											"end": 21597,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 21403,
											"end": 21597,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 21403,
											"end": 21597,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 21403,
											"end": 21597,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 21603,
											"end": 21783,
											"name": "tag",
											"source": 17,
											"value": "349"
										},
										{
											"begin": 21603,
											"end": 21783,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 21651,
											"end": 21728,
											"name": "PUSH",
											"source": 17,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21648,
											"end": 21649,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 21641,
											"end": 21729,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 21748,
											"end": 21752,
											"name": "PUSH",
											"source": 17,
											"value": "31"
										},
										{
											"begin": 21745,
											"end": 21746,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 21738,
											"end": 21753,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 21772,
											"end": 21776,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 21769,
											"end": 21770,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 21762,
											"end": 21777,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 21789,
											"end": 21930,
											"name": "tag",
											"source": 17,
											"value": "472"
										},
										{
											"begin": 21789,
											"end": 21930,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 21838,
											"end": 21842,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 21861,
											"end": 21864,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 21853,
											"end": 21864,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 21853,
											"end": 21864,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 21884,
											"end": 21887,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 21881,
											"end": 21882,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 21874,
											"end": 21888,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 21918,
											"end": 21922,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 21915,
											"end": 21916,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 21905,
											"end": 21923,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 21897,
											"end": 21923,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 21897,
											"end": 21923,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 21789,
											"end": 21930,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 21789,
											"end": 21930,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 21789,
											"end": 21930,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 21789,
											"end": 21930,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 21936,
											"end": 22029,
											"name": "tag",
											"source": 17,
											"value": "473"
										},
										{
											"begin": 21936,
											"end": 22029,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 21973,
											"end": 21979,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 22020,
											"end": 22022,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 22015,
											"end": 22017,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 22008,
											"end": 22013,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 22004,
											"end": 22018,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 22000,
											"end": 22023,
											"name": "DIV",
											"source": 17
										},
										{
											"begin": 21990,
											"end": 22023,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 21990,
											"end": 22023,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 21936,
											"end": 22029,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 21936,
											"end": 22029,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 21936,
											"end": 22029,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 21936,
											"end": 22029,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 22035,
											"end": 22142,
											"name": "tag",
											"source": 17,
											"value": "474"
										},
										{
											"begin": 22035,
											"end": 22142,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 22079,
											"end": 22087,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 22129,
											"end": 22134,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 22123,
											"end": 22127,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 22119,
											"end": 22135,
											"name": "SHL",
											"source": 17
										},
										{
											"begin": 22098,
											"end": 22135,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 22098,
											"end": 22135,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 22035,
											"end": 22142,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 22035,
											"end": 22142,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 22035,
											"end": 22142,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 22035,
											"end": 22142,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 22035,
											"end": 22142,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 22148,
											"end": 22541,
											"name": "tag",
											"source": 17,
											"value": "475"
										},
										{
											"begin": 22148,
											"end": 22541,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 22217,
											"end": 22223,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 22267,
											"end": 22268,
											"name": "PUSH",
											"source": 17,
											"value": "8"
										},
										{
											"begin": 22255,
											"end": 22265,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 22251,
											"end": 22269,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 22290,
											"end": 22387,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "723"
										},
										{
											"begin": 22320,
											"end": 22386,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22309,
											"end": 22318,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 22290,
											"end": 22387,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "474"
										},
										{
											"begin": 22290,
											"end": 22387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 22290,
											"end": 22387,
											"name": "tag",
											"source": 17,
											"value": "723"
										},
										{
											"begin": 22290,
											"end": 22387,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 22408,
											"end": 22447,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "724"
										},
										{
											"begin": 22438,
											"end": 22446,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 22427,
											"end": 22436,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 22408,
											"end": 22447,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "474"
										},
										{
											"begin": 22408,
											"end": 22447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 22408,
											"end": 22447,
											"name": "tag",
											"source": 17,
											"value": "724"
										},
										{
											"begin": 22408,
											"end": 22447,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 22396,
											"end": 22447,
											"name": "SWAP6",
											"source": 17
										},
										{
											"begin": 22396,
											"end": 22447,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 22480,
											"end": 22484,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 22476,
											"end": 22485,
											"name": "NOT",
											"source": 17
										},
										{
											"begin": 22469,
											"end": 22474,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 22465,
											"end": 22486,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 22456,
											"end": 22486,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 22456,
											"end": 22486,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 22529,
											"end": 22533,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 22519,
											"end": 22527,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 22515,
											"end": 22534,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 22508,
											"end": 22513,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 22505,
											"end": 22535,
											"name": "OR",
											"source": 17
										},
										{
											"begin": 22495,
											"end": 22535,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 22495,
											"end": 22535,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 22224,
											"end": 22541,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 22224,
											"end": 22541,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 22148,
											"end": 22541,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 22148,
											"end": 22541,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 22148,
											"end": 22541,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 22148,
											"end": 22541,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 22148,
											"end": 22541,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 22148,
											"end": 22541,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 22547,
											"end": 22607,
											"name": "tag",
											"source": 17,
											"value": "476"
										},
										{
											"begin": 22547,
											"end": 22607,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 22575,
											"end": 22578,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 22596,
											"end": 22601,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 22589,
											"end": 22601,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 22589,
											"end": 22601,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 22547,
											"end": 22607,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 22547,
											"end": 22607,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 22547,
											"end": 22607,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 22547,
											"end": 22607,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 22613,
											"end": 22755,
											"name": "tag",
											"source": 17,
											"value": "477"
										},
										{
											"begin": 22613,
											"end": 22755,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 22663,
											"end": 22672,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 22696,
											"end": 22749,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "727"
										},
										{
											"begin": 22714,
											"end": 22748,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "728"
										},
										{
											"begin": 22723,
											"end": 22747,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "729"
										},
										{
											"begin": 22741,
											"end": 22746,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 22723,
											"end": 22747,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "430"
										},
										{
											"begin": 22723,
											"end": 22747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 22723,
											"end": 22747,
											"name": "tag",
											"source": 17,
											"value": "729"
										},
										{
											"begin": 22723,
											"end": 22747,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 22714,
											"end": 22748,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "476"
										},
										{
											"begin": 22714,
											"end": 22748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 22714,
											"end": 22748,
											"name": "tag",
											"source": 17,
											"value": "728"
										},
										{
											"begin": 22714,
											"end": 22748,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 22696,
											"end": 22749,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "430"
										},
										{
											"begin": 22696,
											"end": 22749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 22696,
											"end": 22749,
											"name": "tag",
											"source": 17,
											"value": "727"
										},
										{
											"begin": 22696,
											"end": 22749,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 22683,
											"end": 22749,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 22683,
											"end": 22749,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 22613,
											"end": 22755,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 22613,
											"end": 22755,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 22613,
											"end": 22755,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 22613,
											"end": 22755,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 22761,
											"end": 22836,
											"name": "tag",
											"source": 17,
											"value": "478"
										},
										{
											"begin": 22761,
											"end": 22836,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 22804,
											"end": 22807,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 22825,
											"end": 22830,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 22818,
											"end": 22830,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 22818,
											"end": 22830,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 22761,
											"end": 22836,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 22761,
											"end": 22836,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 22761,
											"end": 22836,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 22761,
											"end": 22836,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 22842,
											"end": 23111,
											"name": "tag",
											"source": 17,
											"value": "479"
										},
										{
											"begin": 22842,
											"end": 23111,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 22952,
											"end": 22991,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "732"
										},
										{
											"begin": 22983,
											"end": 22990,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 22952,
											"end": 22991,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "477"
										},
										{
											"begin": 22952,
											"end": 22991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 22952,
											"end": 22991,
											"name": "tag",
											"source": 17,
											"value": "732"
										},
										{
											"begin": 22952,
											"end": 22991,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 23013,
											"end": 23104,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "733"
										},
										{
											"begin": 23062,
											"end": 23103,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "734"
										},
										{
											"begin": 23086,
											"end": 23102,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 23062,
											"end": 23103,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "478"
										},
										{
											"begin": 23062,
											"end": 23103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 23062,
											"end": 23103,
											"name": "tag",
											"source": 17,
											"value": "734"
										},
										{
											"begin": 23062,
											"end": 23103,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 23054,
											"end": 23060,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 23047,
											"end": 23051,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 23041,
											"end": 23052,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 23013,
											"end": 23104,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "475"
										},
										{
											"begin": 23013,
											"end": 23104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 23013,
											"end": 23104,
											"name": "tag",
											"source": 17,
											"value": "733"
										},
										{
											"begin": 23013,
											"end": 23104,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 23007,
											"end": 23011,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 23000,
											"end": 23105,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 22918,
											"end": 23111,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 22842,
											"end": 23111,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 22842,
											"end": 23111,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 22842,
											"end": 23111,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 22842,
											"end": 23111,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 23117,
											"end": 23190,
											"name": "tag",
											"source": 17,
											"value": "480"
										},
										{
											"begin": 23117,
											"end": 23190,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 23162,
											"end": 23165,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 23117,
											"end": 23190,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 23117,
											"end": 23190,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 23196,
											"end": 23385,
											"name": "tag",
											"source": 17,
											"value": "481"
										},
										{
											"begin": 23196,
											"end": 23385,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 23273,
											"end": 23305,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "737"
										},
										{
											"begin": 23273,
											"end": 23305,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "480"
										},
										{
											"begin": 23273,
											"end": 23305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 23273,
											"end": 23305,
											"name": "tag",
											"source": 17,
											"value": "737"
										},
										{
											"begin": 23273,
											"end": 23305,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 23314,
											"end": 23379,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "738"
										},
										{
											"begin": 23372,
											"end": 23378,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 23364,
											"end": 23370,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 23358,
											"end": 23362,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 23314,
											"end": 23379,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "479"
										},
										{
											"begin": 23314,
											"end": 23379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 23314,
											"end": 23379,
											"name": "tag",
											"source": 17,
											"value": "738"
										},
										{
											"begin": 23314,
											"end": 23379,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 23249,
											"end": 23385,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 23196,
											"end": 23385,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 23196,
											"end": 23385,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 23196,
											"end": 23385,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 23391,
											"end": 23577,
											"name": "tag",
											"source": 17,
											"value": "482"
										},
										{
											"begin": 23391,
											"end": 23577,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 23451,
											"end": 23571,
											"name": "tag",
											"source": 17,
											"value": "740"
										},
										{
											"begin": 23451,
											"end": 23571,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 23468,
											"end": 23471,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 23461,
											"end": 23466,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 23458,
											"end": 23472,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 23451,
											"end": 23571,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 23451,
											"end": 23571,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "742"
										},
										{
											"begin": 23451,
											"end": 23571,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 23522,
											"end": 23561,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "743"
										},
										{
											"begin": 23559,
											"end": 23560,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 23552,
											"end": 23557,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 23522,
											"end": 23561,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "481"
										},
										{
											"begin": 23522,
											"end": 23561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 23522,
											"end": 23561,
											"name": "tag",
											"source": 17,
											"value": "743"
										},
										{
											"begin": 23522,
											"end": 23561,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 23495,
											"end": 23496,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 23488,
											"end": 23493,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 23484,
											"end": 23497,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 23475,
											"end": 23497,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 23475,
											"end": 23497,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 23451,
											"end": 23571,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "740"
										},
										{
											"begin": 23451,
											"end": 23571,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 23451,
											"end": 23571,
											"name": "tag",
											"source": 17,
											"value": "742"
										},
										{
											"begin": 23451,
											"end": 23571,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 23391,
											"end": 23577,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 23391,
											"end": 23577,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 23391,
											"end": 23577,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 23583,
											"end": 24126,
											"name": "tag",
											"source": 17,
											"value": "483"
										},
										{
											"begin": 23583,
											"end": 24126,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 23684,
											"end": 23686,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 23679,
											"end": 23682,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 23676,
											"end": 23687,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 23673,
											"end": 24119,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 23673,
											"end": 24119,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "745"
										},
										{
											"begin": 23673,
											"end": 24119,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 23718,
											"end": 23756,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "746"
										},
										{
											"begin": 23750,
											"end": 23755,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 23718,
											"end": 23756,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "472"
										},
										{
											"begin": 23718,
											"end": 23756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 23718,
											"end": 23756,
											"name": "tag",
											"source": 17,
											"value": "746"
										},
										{
											"begin": 23718,
											"end": 23756,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 23802,
											"end": 23831,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "747"
										},
										{
											"begin": 23820,
											"end": 23830,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 23802,
											"end": 23831,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "473"
										},
										{
											"begin": 23802,
											"end": 23831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 23802,
											"end": 23831,
											"name": "tag",
											"source": 17,
											"value": "747"
										},
										{
											"begin": 23802,
											"end": 23831,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 23792,
											"end": 23800,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 23788,
											"end": 23832,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 23985,
											"end": 23987,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 23973,
											"end": 23983,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 23970,
											"end": 23988,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 23967,
											"end": 24016,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 23967,
											"end": 24016,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "748"
										},
										{
											"begin": 23967,
											"end": 24016,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 24006,
											"end": 24014,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 23991,
											"end": 24014,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 23991,
											"end": 24014,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 23967,
											"end": 24016,
											"name": "tag",
											"source": 17,
											"value": "748"
										},
										{
											"begin": 23967,
											"end": 24016,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 24029,
											"end": 24109,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "749"
										},
										{
											"begin": 24085,
											"end": 24107,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "750"
										},
										{
											"begin": 24103,
											"end": 24106,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 24085,
											"end": 24107,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "473"
										},
										{
											"begin": 24085,
											"end": 24107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 24085,
											"end": 24107,
											"name": "tag",
											"source": 17,
											"value": "750"
										},
										{
											"begin": 24085,
											"end": 24107,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 24075,
											"end": 24083,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 24071,
											"end": 24108,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 24058,
											"end": 24069,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 24029,
											"end": 24109,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "482"
										},
										{
											"begin": 24029,
											"end": 24109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 24029,
											"end": 24109,
											"name": "tag",
											"source": 17,
											"value": "749"
										},
										{
											"begin": 24029,
											"end": 24109,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 23688,
											"end": 24119,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 23688,
											"end": 24119,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 23673,
											"end": 24119,
											"name": "tag",
											"source": 17,
											"value": "745"
										},
										{
											"begin": 23673,
											"end": 24119,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 23583,
											"end": 24126,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 23583,
											"end": 24126,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 23583,
											"end": 24126,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 23583,
											"end": 24126,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 24132,
											"end": 24249,
											"name": "tag",
											"source": 17,
											"value": "484"
										},
										{
											"begin": 24132,
											"end": 24249,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 24186,
											"end": 24194,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 24236,
											"end": 24241,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 24230,
											"end": 24234,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 24226,
											"end": 24242,
											"name": "SHR",
											"source": 17
										},
										{
											"begin": 24205,
											"end": 24242,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 24205,
											"end": 24242,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 24132,
											"end": 24249,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 24132,
											"end": 24249,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 24132,
											"end": 24249,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 24132,
											"end": 24249,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 24132,
											"end": 24249,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 24255,
											"end": 24424,
											"name": "tag",
											"source": 17,
											"value": "485"
										},
										{
											"begin": 24255,
											"end": 24424,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 24299,
											"end": 24305,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 24332,
											"end": 24383,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "753"
										},
										{
											"begin": 24380,
											"end": 24381,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 24376,
											"end": 24382,
											"name": "NOT",
											"source": 17
										},
										{
											"begin": 24368,
											"end": 24373,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 24365,
											"end": 24366,
											"name": "PUSH",
											"source": 17,
											"value": "8"
										},
										{
											"begin": 24361,
											"end": 24374,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 24332,
											"end": 24383,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "484"
										},
										{
											"begin": 24332,
											"end": 24383,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 24332,
											"end": 24383,
											"name": "tag",
											"source": 17,
											"value": "753"
										},
										{
											"begin": 24332,
											"end": 24383,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 24328,
											"end": 24384,
											"name": "NOT",
											"source": 17
										},
										{
											"begin": 24413,
											"end": 24417,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 24407,
											"end": 24411,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 24403,
											"end": 24418,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 24393,
											"end": 24418,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 24393,
											"end": 24418,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 24306,
											"end": 24424,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 24255,
											"end": 24424,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 24255,
											"end": 24424,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 24255,
											"end": 24424,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 24255,
											"end": 24424,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 24255,
											"end": 24424,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 24429,
											"end": 24724,
											"name": "tag",
											"source": 17,
											"value": "486"
										},
										{
											"begin": 24429,
											"end": 24724,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 24505,
											"end": 24509,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 24651,
											"end": 24680,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "755"
										},
										{
											"begin": 24676,
											"end": 24679,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 24670,
											"end": 24674,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 24651,
											"end": 24680,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "485"
										},
										{
											"begin": 24651,
											"end": 24680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 24651,
											"end": 24680,
											"name": "tag",
											"source": 17,
											"value": "755"
										},
										{
											"begin": 24651,
											"end": 24680,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 24643,
											"end": 24680,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 24643,
											"end": 24680,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 24713,
											"end": 24716,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 24710,
											"end": 24711,
											"name": "PUSH",
											"source": 17,
											"value": "2"
										},
										{
											"begin": 24706,
											"end": 24717,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 24700,
											"end": 24704,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 24697,
											"end": 24718,
											"name": "OR",
											"source": 17
										},
										{
											"begin": 24689,
											"end": 24718,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 24689,
											"end": 24718,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 24429,
											"end": 24724,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 24429,
											"end": 24724,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 24429,
											"end": 24724,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 24429,
											"end": 24724,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 24429,
											"end": 24724,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 24729,
											"end": 26124,
											"name": "tag",
											"source": 17,
											"value": "403"
										},
										{
											"begin": 24729,
											"end": 26124,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 24846,
											"end": 24883,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "757"
										},
										{
											"begin": 24879,
											"end": 24882,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 24846,
											"end": 24883,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "425"
										},
										{
											"begin": 24846,
											"end": 24883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 24846,
											"end": 24883,
											"name": "tag",
											"source": 17,
											"value": "757"
										},
										{
											"begin": 24846,
											"end": 24883,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 24948,
											"end": 24966,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24940,
											"end": 24946,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 24937,
											"end": 24967,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 24934,
											"end": 24990,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 24934,
											"end": 24990,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "758"
										},
										{
											"begin": 24934,
											"end": 24990,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 24970,
											"end": 24988,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "759"
										},
										{
											"begin": 24970,
											"end": 24988,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "298"
										},
										{
											"begin": 24970,
											"end": 24988,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 24970,
											"end": 24988,
											"name": "tag",
											"source": 17,
											"value": "759"
										},
										{
											"begin": 24970,
											"end": 24988,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 24934,
											"end": 24990,
											"name": "tag",
											"source": 17,
											"value": "758"
										},
										{
											"begin": 24934,
											"end": 24990,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 25014,
											"end": 25052,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "760"
										},
										{
											"begin": 25046,
											"end": 25050,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 25040,
											"end": 25051,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 25014,
											"end": 25052,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "123"
										},
										{
											"begin": 25014,
											"end": 25052,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 25014,
											"end": 25052,
											"name": "tag",
											"source": 17,
											"value": "760"
										},
										{
											"begin": 25014,
											"end": 25052,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 25099,
											"end": 25166,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "761"
										},
										{
											"begin": 25159,
											"end": 25165,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 25151,
											"end": 25157,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 25145,
											"end": 25149,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 25099,
											"end": 25166,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "483"
										},
										{
											"begin": 25099,
											"end": 25166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 25099,
											"end": 25166,
											"name": "tag",
											"source": 17,
											"value": "761"
										},
										{
											"begin": 25099,
											"end": 25166,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 25193,
											"end": 25194,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 25217,
											"end": 25221,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 25204,
											"end": 25221,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 25204,
											"end": 25221,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 25249,
											"end": 25251,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 25241,
											"end": 25247,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 25238,
											"end": 25252,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 25266,
											"end": 25267,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 25261,
											"end": 25879,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 25261,
											"end": 25879,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 25261,
											"end": 25879,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "763"
										},
										{
											"begin": 25261,
											"end": 25879,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 25923,
											"end": 25924,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 25940,
											"end": 25946,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 25937,
											"end": 26014,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 25937,
											"end": 26014,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "764"
										},
										{
											"begin": 25937,
											"end": 26014,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 25989,
											"end": 25998,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 25984,
											"end": 25987,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 25980,
											"end": 25999,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 25974,
											"end": 26000,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 25965,
											"end": 26000,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 25965,
											"end": 26000,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 25937,
											"end": 26014,
											"name": "tag",
											"source": 17,
											"value": "764"
										},
										{
											"begin": 25937,
											"end": 26014,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 26040,
											"end": 26107,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "765"
										},
										{
											"begin": 26100,
											"end": 26106,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 26093,
											"end": 26098,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 26040,
											"end": 26107,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "486"
										},
										{
											"begin": 26040,
											"end": 26107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 26040,
											"end": 26107,
											"name": "tag",
											"source": 17,
											"value": "765"
										},
										{
											"begin": 26040,
											"end": 26107,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 26034,
											"end": 26038,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 26027,
											"end": 26108,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 25896,
											"end": 26118,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 25231,
											"end": 26118,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "762"
										},
										{
											"begin": 25231,
											"end": 26118,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 25261,
											"end": 25879,
											"name": "tag",
											"source": 17,
											"value": "763"
										},
										{
											"begin": 25261,
											"end": 25879,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 25313,
											"end": 25317,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 25309,
											"end": 25318,
											"name": "NOT",
											"source": 17
										},
										{
											"begin": 25301,
											"end": 25307,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 25297,
											"end": 25319,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 25347,
											"end": 25384,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "766"
										},
										{
											"begin": 25379,
											"end": 25383,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 25347,
											"end": 25384,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "472"
										},
										{
											"begin": 25347,
											"end": 25384,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 25347,
											"end": 25384,
											"name": "tag",
											"source": 17,
											"value": "766"
										},
										{
											"begin": 25347,
											"end": 25384,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 25406,
											"end": 25407,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 25420,
											"end": 25628,
											"name": "tag",
											"source": 17,
											"value": "767"
										},
										{
											"begin": 25420,
											"end": 25628,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 25434,
											"end": 25441,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 25431,
											"end": 25432,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 25428,
											"end": 25442,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 25420,
											"end": 25628,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 25420,
											"end": 25628,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "769"
										},
										{
											"begin": 25420,
											"end": 25628,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 25513,
											"end": 25522,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 25508,
											"end": 25511,
											"name": "DUP10",
											"source": 17
										},
										{
											"begin": 25504,
											"end": 25523,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 25498,
											"end": 25524,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 25490,
											"end": 25496,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 25483,
											"end": 25525,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 25564,
											"end": 25565,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 25556,
											"end": 25562,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 25552,
											"end": 25566,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 25542,
											"end": 25566,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 25542,
											"end": 25566,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 25611,
											"end": 25613,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 25600,
											"end": 25609,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 25596,
											"end": 25614,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 25583,
											"end": 25614,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 25583,
											"end": 25614,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 25457,
											"end": 25461,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 25454,
											"end": 25455,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 25450,
											"end": 25462,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 25445,
											"end": 25462,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 25445,
											"end": 25462,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 25420,
											"end": 25628,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "767"
										},
										{
											"begin": 25420,
											"end": 25628,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 25420,
											"end": 25628,
											"name": "tag",
											"source": 17,
											"value": "769"
										},
										{
											"begin": 25420,
											"end": 25628,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 25656,
											"end": 25662,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 25647,
											"end": 25654,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 25644,
											"end": 25663,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 25641,
											"end": 25820,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 25641,
											"end": 25820,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "770"
										},
										{
											"begin": 25641,
											"end": 25820,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 25714,
											"end": 25723,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 25709,
											"end": 25712,
											"name": "DUP10",
											"source": 17
										},
										{
											"begin": 25705,
											"end": 25724,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 25699,
											"end": 25725,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 25757,
											"end": 25805,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "771"
										},
										{
											"begin": 25799,
											"end": 25803,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 25791,
											"end": 25797,
											"name": "DUP10",
											"source": 17
										},
										{
											"begin": 25787,
											"end": 25804,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 25776,
											"end": 25785,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 25757,
											"end": 25805,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "485"
										},
										{
											"begin": 25757,
											"end": 25805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 25757,
											"end": 25805,
											"name": "tag",
											"source": 17,
											"value": "771"
										},
										{
											"begin": 25757,
											"end": 25805,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 25749,
											"end": 25755,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 25742,
											"end": 25806,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 25664,
											"end": 25820,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 25641,
											"end": 25820,
											"name": "tag",
											"source": 17,
											"value": "770"
										},
										{
											"begin": 25641,
											"end": 25820,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 25866,
											"end": 25867,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 25862,
											"end": 25863,
											"name": "PUSH",
											"source": 17,
											"value": "2"
										},
										{
											"begin": 25854,
											"end": 25860,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": 25850,
											"end": 25864,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 25846,
											"end": 25868,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 25840,
											"end": 25844,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": 25833,
											"end": 25869,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 25268,
											"end": 25879,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 25268,
											"end": 25879,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 25268,
											"end": 25879,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 25231,
											"end": 26118,
											"name": "tag",
											"source": 17,
											"value": "762"
										},
										{
											"begin": 25231,
											"end": 26118,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 25231,
											"end": 26118,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 24821,
											"end": 26124,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 24821,
											"end": 26124,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 24821,
											"end": 26124,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 24729,
											"end": 26124,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 24729,
											"end": 26124,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 24729,
											"end": 26124,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/MyToken.sol",
								"stl-contracts/ERC/ERC5169.sol",
								"stl-contracts/ERC/IERC5169.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"ownerOf(uint256)": "6352211e",
							"renounceOwnership()": "715018a6",
							"safeMint(address,uint256)": "a1448194",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"scriptURI()": "4bb30912",
							"setApprovalForAll(address,bool)": "a22cb465",
							"setScriptURI(string[])": "e3d61eb3",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenByIndex(uint256)": "4f6ccce7",
							"tokenOfOwnerByIndex(address,uint256)": "2f745c59",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ERC721EnumerableForbiddenBatchMint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"ERC721OutOfBoundsIndex\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"name\":\"ScriptUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"scriptURI\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"newScriptURI\",\"type\":\"string[]\"}],\"name\":\"setScriptURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC721EnumerableForbiddenBatchMint()\":[{\"details\":\"Batch mint is not allowed.\"}],\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721OutOfBoundsIndex(address,uint256)\":[{\"details\":\"An `owner`'s token query was out of bounds for `index`. NOTE: The owner being `address(0)` indicates a global out of bounds index.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"ScriptUpdate(string[])\":{\"details\":\"This event emits when the scriptURI is updated, so wallets implementing this interface can update a cached script\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"scriptURI()\":{\"returns\":{\"_0\":\"The scriptURI\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenByIndex(uint256)\":{\"details\":\"See {IERC721Enumerable-tokenByIndex}.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"See {IERC721Enumerable-tokenOfOwnerByIndex}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"totalSupply()\":{\"details\":\"See {IERC721Enumerable-totalSupply}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"scriptURI()\":{\"notice\":\"Get the scriptURI for the contract\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MyToken.sol\":\"ERC721Mint\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":{\"keccak256\":\"0x36797469c391ea5ba27408e6ca8adf0824ba6f3adea9c139be18bd6f63232c16\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0dcf8bb9f7c29d678de34a051b4a71cf27ae56464678696c6913cbbfc75d548a\",\"dweb:/ipfs/QmSfdgU9V2dXh9oajUxgF9hU1aPnpd1PEMtcchoANsCNmW\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0x3d6954a93ac198a2ffa384fa58ccf18e7e235263e051a394328002eff4e073de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1f58c799bd939d3951c94893e83ef86acd56989d1d7db7f9d180c515e29e28ff\",\"dweb:/ipfs/QmTgAxHAAys4kq9ZfU9YB24MWYoHLGAKSxnYUigPFrNW7g\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"contracts/MyToken.sol\":{\"keccak256\":\"0xb5aed44e49550245783f735d401597baa8d233647957cf14a3dbf74afcfa0470\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc30f4c8ccf6233638824bbea70f01ac65db4681ddd924b1860d4daa8855bc8c\",\"dweb:/ipfs/QmVFfwB3do5sLGYA9kERB7Ar9sEx6jr2LcNfHwdFPnpG1a\"]},\"stl-contracts/ERC/ERC5169.sol\":{\"keccak256\":\"0x96b8bf429db674be4867b46b19019fc5da3d555b3f2f6830fb10c92546424e09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c7db0eae94fd3bf54c7f3b4f369d9b92c0120cc98b4a2feaf7d3042fac655b89\",\"dweb:/ipfs/QmUsLLEDCwYhdiwaxnATRR2hdSH3sH9aR22WBy1mZAvrZC\"]},\"stl-contracts/ERC/IERC5169.sol\":{\"keccak256\":\"0x613e18e1a8396483c2680d0202ac36243720de9f791491b7427922175013ace0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c433cb91474aed6e6b31808997043709f03cb4a8c66379632d263250bf745cab\",\"dweb:/ipfs/QmUx3A92JrvSAJKLST1Yg1enzd5GwwBfPxskjeUuXxiPBx\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "contracts/MyToken.sol:ERC721Mint",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 3432,
								"contract": "contracts/MyToken.sol:ERC721Mint",
								"label": "_scriptURI",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_string_storage)dyn_storage"
							},
							{
								"astId": 317,
								"contract": "contracts/MyToken.sol:ERC721Mint",
								"label": "_name",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "contracts/MyToken.sol:ERC721Mint",
								"label": "_symbol",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 323,
								"contract": "contracts/MyToken.sol:ERC721Mint",
								"label": "_owners",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 327,
								"contract": "contracts/MyToken.sol:ERC721Mint",
								"label": "_balances",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 331,
								"contract": "contracts/MyToken.sol:ERC721Mint",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 337,
								"contract": "contracts/MyToken.sol:ERC721Mint",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 1447,
								"contract": "contracts/MyToken.sol:ERC721Mint",
								"label": "_ownedTokens",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))"
							},
							{
								"astId": 1451,
								"contract": "contracts/MyToken.sol:ERC721Mint",
								"label": "_ownedTokensIndex",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 1454,
								"contract": "contracts/MyToken.sol:ERC721Mint",
								"label": "_allTokens",
								"offset": 0,
								"slot": "10",
								"type": "t_array(t_uint256)dyn_storage"
							},
							{
								"astId": 1458,
								"contract": "contracts/MyToken.sol:ERC721Mint",
								"label": "_allTokensIndex",
								"offset": 0,
								"slot": "11",
								"type": "t_mapping(t_uint256,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_string_storage)dyn_storage": {
								"base": "t_string_storage",
								"encoding": "dynamic_array",
								"label": "string[]",
								"numberOfBytes": "32"
							},
							"t_array(t_uint256)dyn_storage": {
								"base": "t_uint256",
								"encoding": "dynamic_array",
								"label": "uint256[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(uint256 => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"scriptURI()": {
								"notice": "Get the scriptURI for the contract"
							}
						},
						"version": 1
					}
				}
			},
			"stl-contracts/ERC/ERC5169.sol": {
				"ERC5169": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string[]",
									"name": "",
									"type": "string[]"
								}
							],
							"name": "ScriptUpdate",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "scriptURI",
							"outputs": [
								{
									"internalType": "string[]",
									"name": "",
									"type": "string[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string[]",
									"name": "newScriptURI",
									"type": "string[]"
								}
							],
							"name": "setScriptURI",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"ScriptUpdate(string[])": {
								"details": "This event emits when the scriptURI is updated, so wallets implementing this interface can update a cached script"
							}
						},
						"kind": "dev",
						"methods": {
							"scriptURI()": {
								"returns": {
									"_0": "The scriptURI"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"scriptURI()": "4bb30912",
							"setScriptURI(string[])": "e3d61eb3",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"name\":\"ScriptUpdate\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"scriptURI\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"newScriptURI\",\"type\":\"string[]\"}],\"name\":\"setScriptURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"ScriptUpdate(string[])\":{\"details\":\"This event emits when the scriptURI is updated, so wallets implementing this interface can update a cached script\"}},\"kind\":\"dev\",\"methods\":{\"scriptURI()\":{\"returns\":{\"_0\":\"The scriptURI\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"scriptURI()\":{\"notice\":\"Get the scriptURI for the contract\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"stl-contracts/ERC/ERC5169.sol\":\"ERC5169\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"stl-contracts/ERC/ERC5169.sol\":{\"keccak256\":\"0x96b8bf429db674be4867b46b19019fc5da3d555b3f2f6830fb10c92546424e09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c7db0eae94fd3bf54c7f3b4f369d9b92c0120cc98b4a2feaf7d3042fac655b89\",\"dweb:/ipfs/QmUsLLEDCwYhdiwaxnATRR2hdSH3sH9aR22WBy1mZAvrZC\"]},\"stl-contracts/ERC/IERC5169.sol\":{\"keccak256\":\"0x613e18e1a8396483c2680d0202ac36243720de9f791491b7427922175013ace0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c433cb91474aed6e6b31808997043709f03cb4a8c66379632d263250bf745cab\",\"dweb:/ipfs/QmUx3A92JrvSAJKLST1Yg1enzd5GwwBfPxskjeUuXxiPBx\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3432,
								"contract": "stl-contracts/ERC/ERC5169.sol:ERC5169",
								"label": "_scriptURI",
								"offset": 0,
								"slot": "0",
								"type": "t_array(t_string_storage)dyn_storage"
							}
						],
						"types": {
							"t_array(t_string_storage)dyn_storage": {
								"base": "t_string_storage",
								"encoding": "dynamic_array",
								"label": "string[]",
								"numberOfBytes": "32"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"scriptURI()": {
								"notice": "Get the scriptURI for the contract"
							}
						},
						"version": 1
					}
				}
			},
			"stl-contracts/ERC/IERC5169.sol": {
				"IERC5169": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string[]",
									"name": "",
									"type": "string[]"
								}
							],
							"name": "ScriptUpdate",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "scriptURI",
							"outputs": [
								{
									"internalType": "string[]",
									"name": "",
									"type": "string[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string[]",
									"name": "",
									"type": "string[]"
								}
							],
							"name": "setScriptURI",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"ScriptUpdate(string[])": {
								"details": "This event emits when the scriptURI is updated, so wallets implementing this interface can update a cached script"
							}
						},
						"kind": "dev",
						"methods": {
							"scriptURI()": {
								"returns": {
									"_0": "The scriptURI"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"scriptURI()": "4bb30912",
							"setScriptURI(string[])": "e3d61eb3"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"name\":\"ScriptUpdate\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"scriptURI\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"name\":\"setScriptURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"ScriptUpdate(string[])\":{\"details\":\"This event emits when the scriptURI is updated, so wallets implementing this interface can update a cached script\"}},\"kind\":\"dev\",\"methods\":{\"scriptURI()\":{\"returns\":{\"_0\":\"The scriptURI\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"scriptURI()\":{\"notice\":\"Get the scriptURI for the contract\"},\"setScriptURI(string[])\":{\"notice\":\"Update the scriptURI emits event ScriptUpdate(string[])\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"stl-contracts/ERC/IERC5169.sol\":\"IERC5169\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"stl-contracts/ERC/IERC5169.sol\":{\"keccak256\":\"0x613e18e1a8396483c2680d0202ac36243720de9f791491b7427922175013ace0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c433cb91474aed6e6b31808997043709f03cb4a8c66379632d263250bf745cab\",\"dweb:/ipfs/QmUx3A92JrvSAJKLST1Yg1enzd5GwwBfPxskjeUuXxiPBx\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"scriptURI()": {
								"notice": "Get the scriptURI for the contract"
							},
							"setScriptURI(string[])": {
								"notice": "Update the scriptURI emits event ScriptUpdate(string[])"
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1902
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 1903,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1902,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1902,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								1902
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1884,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1884,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:1",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "652:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "668:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "685:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:1"
									},
									"src": "621:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "889:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:1"
									},
									"src": "864:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1102:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:1"
									},
									"src": "1075:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1509:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1526:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1545:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:1"
									},
									"src": "1476:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1773:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:1"
									},
									"src": "1746:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2023:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:1"
									},
									"src": "1997:43:1"
								}
							],
							"scope": 285,
							"src": "278:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:1",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2465:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:1"
									},
									"src": "2440:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2652:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:1"
									},
									"src": "2623:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "2996:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3012:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3029:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:1"
									},
									"src": "2969:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3233:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:1"
									},
									"src": "3207:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3447:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:1"
									},
									"src": "3419:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3756:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3774:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:1"
									},
									"src": "3723:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4004:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:1"
									},
									"src": "3976:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4258:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:1"
									},
									"src": "4230:46:1"
								}
							],
							"scope": 285,
							"src": "2186:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:1",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4854:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4870:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4887:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4903:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:1"
									},
									"src": "4821:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5110:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:1"
									},
									"src": "5083:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5325:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:1"
									},
									"src": "5296:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5645:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5663:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:1"
									},
									"src": "5610:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5892:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:1"
									},
									"src": "5863:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6147:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:1"
									},
									"src": "6118:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6488:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6507:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:1"
									},
									"src": "6456:73:1"
								}
							],
							"scope": 285,
							"src": "4424:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
					"exportedSymbols": {
						"Context": [
							1902
						],
						"ERC165": [
							2181
						],
						"ERC721": [
							1293
						],
						"IERC165": [
							2193
						],
						"IERC721": [
							1410
						],
						"IERC721Errors": [
							237
						],
						"IERC721Metadata": [
							1872
						],
						"IERC721Receiver": [
							1428
						],
						"Strings": [
							2157
						]
					},
					"id": 1294,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1294,
							"sourceUnit": 1411,
							"src": "133:38:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 287,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1410,
										"src": "141:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"file": "./IERC721Receiver.sol",
							"id": 290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1294,
							"sourceUnit": 1429,
							"src": "172:54:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 289,
										"name": "IERC721Receiver",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1428,
										"src": "180:15:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
							"file": "./extensions/IERC721Metadata.sol",
							"id": 292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1294,
							"sourceUnit": 1873,
							"src": "227:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 291,
										"name": "IERC721Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1872,
										"src": "235:15:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1294,
							"sourceUnit": 1903,
							"src": "293:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 293,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1902,
										"src": "301:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "../../utils/Strings.sol",
							"id": 296,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1294,
							"sourceUnit": 2158,
							"src": "342:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 295,
										"name": "Strings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2157,
										"src": "350:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../../utils/introspection/ERC165.sol",
							"id": 299,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1294,
							"sourceUnit": 2182,
							"src": "391:69:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 297,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2193,
										"src": "399:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 298,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2181,
										"src": "408:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 301,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1294,
							"sourceUnit": 285,
							"src": "461:66:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 300,
										"name": "IERC721Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 237,
										"src": "469:13:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 303,
										"name": "Context",
										"nameLocations": [
											"804:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1902,
										"src": "804:7:2"
									},
									"id": 304,
									"nodeType": "InheritanceSpecifier",
									"src": "804:7:2"
								},
								{
									"baseName": {
										"id": 305,
										"name": "ERC165",
										"nameLocations": [
											"813:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2181,
										"src": "813:6:2"
									},
									"id": 306,
									"nodeType": "InheritanceSpecifier",
									"src": "813:6:2"
								},
								{
									"baseName": {
										"id": 307,
										"name": "IERC721",
										"nameLocations": [
											"821:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1410,
										"src": "821:7:2"
									},
									"id": 308,
									"nodeType": "InheritanceSpecifier",
									"src": "821:7:2"
								},
								{
									"baseName": {
										"id": 309,
										"name": "IERC721Metadata",
										"nameLocations": [
											"830:15:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1872,
										"src": "830:15:2"
									},
									"id": 310,
									"nodeType": "InheritanceSpecifier",
									"src": "830:15:2"
								},
								{
									"baseName": {
										"id": 311,
										"name": "IERC721Errors",
										"nameLocations": [
											"847:13:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 237,
										"src": "847:13:2"
									},
									"id": 312,
									"nodeType": "InheritanceSpecifier",
									"src": "847:13:2"
								}
							],
							"canonicalName": "ERC721",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 302,
								"nodeType": "StructuredDocumentation",
								"src": "529:246:2",
								"text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
							},
							"fullyImplemented": true,
							"id": 1293,
							"linearizedBaseContracts": [
								1293,
								237,
								1872,
								1410,
								2181,
								2193,
								1902
							],
							"name": "ERC721",
							"nameLocation": "794:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 315,
									"libraryName": {
										"id": 313,
										"name": "Strings",
										"nameLocations": [
											"873:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2157,
										"src": "873:7:2"
									},
									"nodeType": "UsingForDirective",
									"src": "867:26:2",
									"typeName": {
										"id": 314,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "885:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 317,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "932:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 1293,
									"src": "917:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 316,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "917:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 319,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "979:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 1293,
									"src": "964:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 318,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "964:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 323,
									"mutability": "mutable",
									"name": "_owners",
									"nameLocation": "1037:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 1293,
									"src": "993:51:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 322,
										"keyName": "tokenId",
										"keyNameLocation": "1009:7:2",
										"keyType": {
											"id": 320,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1001:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "993:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 321,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1020:7:2",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 327,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1093:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 1293,
									"src": "1051:51:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 326,
										"keyName": "owner",
										"keyNameLocation": "1067:5:2",
										"keyType": {
											"id": 324,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1059:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1051:33:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 325,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1076:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 331,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "1153:15:2",
									"nodeType": "VariableDeclaration",
									"scope": 1293,
									"src": "1109:59:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 330,
										"keyName": "tokenId",
										"keyNameLocation": "1125:7:2",
										"keyType": {
											"id": 328,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1117:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1109:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 329,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1136:7:2",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 337,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "1243:18:2",
									"nodeType": "VariableDeclaration",
									"scope": 1293,
									"src": "1175:86:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 336,
										"keyName": "owner",
										"keyNameLocation": "1191:5:2",
										"keyType": {
											"id": 332,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1183:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1175:59:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 335,
											"keyName": "operator",
											"keyNameLocation": "1216:8:2",
											"keyType": {
												"id": 333,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1208:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1200:33:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 334,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1228:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "1437:57:2",
										"statements": [
											{
												"expression": {
													"id": 347,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 345,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "1447:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 346,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 340,
														"src": "1455:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1447:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 348,
												"nodeType": "ExpressionStatement",
												"src": "1447:13:2"
											},
											{
												"expression": {
													"id": 351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 349,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "1470:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 350,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 342,
														"src": "1480:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1470:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 352,
												"nodeType": "ExpressionStatement",
												"src": "1470:17:2"
											}
										]
									},
									"documentation": {
										"id": 338,
										"nodeType": "StructuredDocumentation",
										"src": "1268:108:2",
										"text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
									},
									"id": 354,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1407:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "1393:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 339,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1393:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1428:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "1414:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 341,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1414:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1392:44:2"
									},
									"returnParameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1437:0:2"
									},
									"scope": 1293,
									"src": "1381:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2180,
										2192
									],
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "1669:192:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 382,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 377,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 370,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 365,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 357,
																"src": "1698:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 367,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1410,
																			"src": "1718:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1410_$",
																				"typeString": "type(contract IERC721)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1410_$",
																				"typeString": "type(contract IERC721)"
																			}
																		],
																		"id": 366,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1713:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 368,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1713:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$1410",
																		"typeString": "type(contract IERC721)"
																	}
																},
																"id": 369,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1727:11:2",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1713:25:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1698:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 376,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 371,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 357,
																"src": "1754:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 373,
																			"name": "IERC721Metadata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1872,
																			"src": "1774:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1872_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1872_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		],
																		"id": 372,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1769:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 374,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1769:21:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$1872",
																		"typeString": "type(contract IERC721Metadata)"
																	}
																},
																"id": 375,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1791:11:2",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1769:33:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1754:48:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1698:104:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 380,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 357,
																"src": "1842:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 378,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1818:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721_$1293_$",
																	"typeString": "type(contract super ERC721)"
																}
															},
															"id": 379,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1824:17:2",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2180,
															"src": "1818:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 381,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1818:36:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1698:156:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 364,
												"id": 383,
												"nodeType": "Return",
												"src": "1679:175:2"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "1500:56:2",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1570:17:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 361,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 359,
												"name": "ERC165",
												"nameLocations": [
													"1637:6:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2181,
												"src": "1637:6:2"
											},
											{
												"id": 360,
												"name": "IERC165",
												"nameLocations": [
													"1645:7:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2193,
												"src": "1645:7:2"
											}
										],
										"src": "1628:25:2"
									},
									"parameters": {
										"id": 358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1595:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "1588:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 356,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1588:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1587:20:2"
									},
									"returnParameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "1663:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 362,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1663:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1662:6:2"
									},
									"scope": 1293,
									"src": "1561:300:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1335
									],
									"body": {
										"id": 412,
										"nodeType": "Block",
										"src": "1992:136:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 393,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 388,
														"src": "2006:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 396,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2023:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 395,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2015:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 394,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2015:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 397,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2015:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2006:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 407,
												"nodeType": "IfStatement",
												"src": "2002:87:2",
												"trueBody": {
													"id": 406,
													"nodeType": "Block",
													"src": "2027:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 402,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2075:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 401,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2067:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 400,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2067:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 403,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2067:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 399,
																	"name": "ERC721InvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 195,
																	"src": "2048:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 404,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2048:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 405,
															"nodeType": "RevertStatement",
															"src": "2041:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"baseExpression": {
														"id": 408,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 327,
														"src": "2105:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 410,
													"indexExpression": {
														"id": 409,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 388,
														"src": "2115:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2105:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 392,
												"id": 411,
												"nodeType": "Return",
												"src": "2098:23:2"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "1867:48:2",
										"text": " @dev See {IERC721-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 413,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1929:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1947:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "1939:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1939:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1938:15:2"
									},
									"returnParameters": {
										"id": 392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 391,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "1983:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 390,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1983:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1982:9:2"
									},
									"scope": 1293,
									"src": "1920:208:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1343
									],
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "2257:46:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 422,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 416,
															"src": "2288:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 421,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1228,
														"src": "2274:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2274:22:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 420,
												"id": 424,
												"nodeType": "Return",
												"src": "2267:29:2"
											}
										]
									},
									"documentation": {
										"id": 414,
										"nodeType": "StructuredDocumentation",
										"src": "2134:46:2",
										"text": " @dev See {IERC721-ownerOf}."
									},
									"functionSelector": "6352211e",
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "2194:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2210:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "2202:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 415,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2202:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2201:17:2"
									},
									"returnParameters": {
										"id": 420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "2248:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 418,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2248:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2247:9:2"
									},
									"scope": 1293,
									"src": "2185:118:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1857
									],
									"body": {
										"id": 434,
										"nodeType": "Block",
										"src": "2425:29:2",
										"statements": [
											{
												"expression": {
													"id": 432,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 317,
													"src": "2442:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 431,
												"id": 433,
												"nodeType": "Return",
												"src": "2435:12:2"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "2309:51:2",
										"text": " @dev See {IERC721Metadata-name}."
									},
									"functionSelector": "06fdde03",
									"id": 435,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2374:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 428,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2378:2:2"
									},
									"returnParameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 435,
												"src": "2410:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 429,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2410:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2409:15:2"
									},
									"scope": 1293,
									"src": "2365:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1863
									],
									"body": {
										"id": 443,
										"nodeType": "Block",
										"src": "2580:31:2",
										"statements": [
											{
												"expression": {
													"id": 441,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 319,
													"src": "2597:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 440,
												"id": 442,
												"nodeType": "Return",
												"src": "2590:14:2"
											}
										]
									},
									"documentation": {
										"id": 436,
										"nodeType": "StructuredDocumentation",
										"src": "2460:53:2",
										"text": " @dev See {IERC721Metadata-symbol}."
									},
									"functionSelector": "95d89b41",
									"id": 444,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2527:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2533:2:2"
									},
									"returnParameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 439,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "2565:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 438,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2565:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2564:15:2"
									},
									"scope": 1293,
									"src": "2518:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1871
									],
									"body": {
										"id": 479,
										"nodeType": "Block",
										"src": "2756:176:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 453,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "2780:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 452,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1228,
														"src": "2766:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2766:22:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 455,
												"nodeType": "ExpressionStatement",
												"src": "2766:22:2"
											},
											{
												"assignments": [
													457
												],
												"declarations": [
													{
														"constant": false,
														"id": 457,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "2813:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 479,
														"src": "2799:21:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 456,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2799:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 460,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 458,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 489,
														"src": "2823:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2823:10:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2799:34:2"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 467,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 463,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 457,
																		"src": "2856:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 462,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2850:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 461,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2850:5:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 464,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2850:14:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 465,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2865:6:2",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2850:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 466,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2874:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2850:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 476,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2923:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2850:75:2",
													"trueExpression": {
														"arguments": [
															{
																"id": 471,
																"name": "baseURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 457,
																"src": "2892:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 472,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 447,
																		"src": "2901:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 473,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2909:8:2",
																	"memberName": "toString",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1970,
																	"src": "2901:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (string memory)"
																	}
																},
																"id": 474,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2901:18:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																},
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															],
															"expression": {
																"id": 469,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2878:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																	"typeString": "type(string storage pointer)"
																},
																"typeName": {
																	"id": 468,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "2878:6:2",
																	"typeDescriptions": {}
																}
															},
															"id": 470,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2885:6:2",
															"memberName": "concat",
															"nodeType": "MemberAccess",
															"src": "2878:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																"typeString": "function () pure returns (string memory)"
															}
														},
														"id": 475,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2878:42:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 451,
												"id": 478,
												"nodeType": "Return",
												"src": "2843:82:2"
											}
										]
									},
									"documentation": {
										"id": 445,
										"nodeType": "StructuredDocumentation",
										"src": "2617:55:2",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 480,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "2686:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 447,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2703:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "2695:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 446,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2695:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2694:17:2"
									},
									"returnParameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "2741:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 449,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2741:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2740:15:2"
									},
									"scope": 1293,
									"src": "2677:255:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 488,
										"nodeType": "Block",
										"src": "3240:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 486,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3257:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 485,
												"id": 487,
												"nodeType": "Return",
												"src": "3250:9:2"
											}
										]
									},
									"documentation": {
										"id": 481,
										"nodeType": "StructuredDocumentation",
										"src": "2938:231:2",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."
									},
									"id": 489,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "3183:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3191:2:2"
									},
									"returnParameters": {
										"id": 485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "3225:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 483,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3225:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3224:15:2"
									},
									"scope": 1293,
									"src": "3174:92:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1383
									],
									"body": {
										"id": 504,
										"nodeType": "Block",
										"src": "3384:52:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 498,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 492,
															"src": "3403:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 499,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "3407:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 500,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1884,
																"src": "3416:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3416:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 497,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1096,
															1162
														],
														"referencedDeclaration": 1096,
														"src": "3394:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address)"
														}
													},
													"id": 502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3394:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 503,
												"nodeType": "ExpressionStatement",
												"src": "3394:35:2"
											}
										]
									},
									"documentation": {
										"id": 490,
										"nodeType": "StructuredDocumentation",
										"src": "3272:46:2",
										"text": " @dev See {IERC721-approve}."
									},
									"functionSelector": "095ea7b3",
									"id": 505,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3332:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3348:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "3340:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 491,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3340:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3360:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "3352:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 493,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3352:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3339:29:2"
									},
									"returnParameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3384:0:2"
									},
									"scope": 1293,
									"src": "3323:113:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1399
									],
									"body": {
										"id": 521,
										"nodeType": "Block",
										"src": "3573:78:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 514,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "3597:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 513,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1228,
														"src": "3583:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 515,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3583:22:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 516,
												"nodeType": "ExpressionStatement",
												"src": "3583:22:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 518,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "3636:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 517,
														"name": "_getApproved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 671,
														"src": "3623:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3623:21:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 512,
												"id": 520,
												"nodeType": "Return",
												"src": "3616:28:2"
											}
										]
									},
									"documentation": {
										"id": 506,
										"nodeType": "StructuredDocumentation",
										"src": "3442:50:2",
										"text": " @dev See {IERC721-getApproved}."
									},
									"functionSelector": "081812fc",
									"id": 522,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "3506:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3526:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "3518:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 507,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3518:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3517:17:2"
									},
									"returnParameters": {
										"id": 512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 511,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "3564:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 510,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3564:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3563:9:2"
									},
									"scope": 1293,
									"src": "3497:154:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1391
									],
									"body": {
										"id": 537,
										"nodeType": "Block",
										"src": "3793:69:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 531,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1884,
																"src": "3822:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 532,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3822:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 533,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 525,
															"src": "3836:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 534,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "3846:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 530,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1199,
														"src": "3803:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3803:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 536,
												"nodeType": "ExpressionStatement",
												"src": "3803:52:2"
											}
										]
									},
									"documentation": {
										"id": 523,
										"nodeType": "StructuredDocumentation",
										"src": "3657:56:2",
										"text": " @dev See {IERC721-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 538,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "3727:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3753:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "3745:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 524,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3745:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3768:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "3763:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 526,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3763:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3744:33:2"
									},
									"returnParameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3793:0:2"
									},
									"scope": 1293,
									"src": "3718:144:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1409
									],
									"body": {
										"id": 554,
										"nodeType": "Block",
										"src": "4022:59:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 548,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 337,
															"src": "4039:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 550,
														"indexExpression": {
															"id": 549,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 541,
															"src": "4058:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4039:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 552,
													"indexExpression": {
														"id": 551,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 543,
														"src": "4065:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4039:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 547,
												"id": 553,
												"nodeType": "Return",
												"src": "4032:42:2"
											}
										]
									},
									"documentation": {
										"id": 539,
										"nodeType": "StructuredDocumentation",
										"src": "3868:55:2",
										"text": " @dev See {IERC721-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 555,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "3937:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 541,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3962:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "3954:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 540,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3954:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3977:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "3969:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 542,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3969:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3953:33:2"
									},
									"returnParameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "4016:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 545,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4016:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4015:6:2"
									},
									"scope": 1293,
									"src": "3928:153:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1375
									],
									"body": {
										"id": 600,
										"nodeType": "Block",
										"src": "4223:498:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 570,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 565,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 560,
														"src": "4237:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 568,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4251:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 567,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4243:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 566,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4243:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 569,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4243:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4237:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 579,
												"nodeType": "IfStatement",
												"src": "4233:87:2",
												"trueBody": {
													"id": 578,
													"nodeType": "Block",
													"src": "4255:65:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 574,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4306:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 573,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4298:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 572,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4298:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 575,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4298:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 571,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "4276:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 576,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4276:33:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 577,
															"nodeType": "RevertStatement",
															"src": "4269:40:2"
														}
													]
												}
											},
											{
												"assignments": [
													581
												],
												"declarations": [
													{
														"constant": false,
														"id": 581,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "4546:13:2",
														"nodeType": "VariableDeclaration",
														"scope": 600,
														"src": "4538:21:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 580,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4538:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 588,
												"initialValue": {
													"arguments": [
														{
															"id": 583,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 560,
															"src": "4570:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 584,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 562,
															"src": "4574:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 585,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1884,
																"src": "4583:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 586,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4583:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 582,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 850,
														"src": "4562:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4562:34:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4538:58:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 589,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 581,
														"src": "4610:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 590,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 558,
														"src": "4627:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4610:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 599,
												"nodeType": "IfStatement",
												"src": "4606:109:2",
												"trueBody": {
													"id": 598,
													"nodeType": "Block",
													"src": "4633:82:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 593,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 558,
																		"src": "4675:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 594,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 562,
																		"src": "4681:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 595,
																		"name": "previousOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 581,
																		"src": "4690:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 592,
																	"name": "ERC721IncorrectOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 209,
																	"src": "4654:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$",
																		"typeString": "function (address,uint256,address) pure"
																	}
																},
																"id": 596,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4654:50:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 597,
															"nodeType": "RevertStatement",
															"src": "4647:57:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 556,
										"nodeType": "StructuredDocumentation",
										"src": "4087:51:2",
										"text": " @dev See {IERC721-transferFrom}."
									},
									"functionSelector": "23b872dd",
									"id": 601,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4152:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4173:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "4165:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 557,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4165:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 560,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4187:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "4179:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 559,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4179:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4199:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "4191:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 561,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4191:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4164:43:2"
									},
									"returnParameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4223:0:2"
									},
									"scope": 1293,
									"src": "4143:578:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1365
									],
									"body": {
										"id": 618,
										"nodeType": "Block",
										"src": "4863:56:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 612,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 604,
															"src": "4890:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 613,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 606,
															"src": "4896:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 614,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 608,
															"src": "4900:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 615,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4909:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 611,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															619,
															645
														],
														"referencedDeclaration": 645,
														"src": "4873:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 616,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4873:39:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 617,
												"nodeType": "ExpressionStatement",
												"src": "4873:39:2"
											}
										]
									},
									"documentation": {
										"id": 602,
										"nodeType": "StructuredDocumentation",
										"src": "4727:55:2",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "42842e0e",
									"id": 619,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4796:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 604,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4821:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "4813:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 603,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4813:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 606,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4835:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "4827:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 605,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4827:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4847:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "4839:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 607,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4839:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4812:43:2"
									},
									"returnParameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4863:0:2"
									},
									"scope": 1293,
									"src": "4787:132:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1355
									],
									"body": {
										"id": 644,
										"nodeType": "Block",
										"src": "5088:105:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 632,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 622,
															"src": "5111:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 633,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 624,
															"src": "5117:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 626,
															"src": "5121:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 631,
														"name": "transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 601,
														"src": "5098:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5098:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 636,
												"nodeType": "ExpressionStatement",
												"src": "5098:31:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 638,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 622,
															"src": "5162:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 639,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 624,
															"src": "5168:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 640,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 626,
															"src": "5172:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 641,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 628,
															"src": "5181:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 637,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1292,
														"src": "5139:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 642,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5139:47:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 643,
												"nodeType": "ExpressionStatement",
												"src": "5139:47:2"
											}
										]
									},
									"documentation": {
										"id": 620,
										"nodeType": "StructuredDocumentation",
										"src": "4925:55:2",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "b88d4fde",
									"id": 645,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4994:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5019:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "5011:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 621,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5011:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5033:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "5025:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 623,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5025:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5045:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "5037:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 625,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5037:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5067:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "5054:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 627,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5054:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5010:62:2"
									},
									"returnParameters": {
										"id": 630,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5088:0:2"
									},
									"scope": 1293,
									"src": "4985:208:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 657,
										"nodeType": "Block",
										"src": "5782:40:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 653,
														"name": "_owners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 323,
														"src": "5799:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 655,
													"indexExpression": {
														"id": 654,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 648,
														"src": "5807:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5799:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 652,
												"id": 656,
												"nodeType": "Return",
												"src": "5792:23:2"
											}
										]
									},
									"documentation": {
										"id": 646,
										"nodeType": "StructuredDocumentation",
										"src": "5199:503:2",
										"text": " @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."
									},
									"id": 658,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownerOf",
									"nameLocation": "5716:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5733:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "5725:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 647,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5725:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5724:17:2"
									},
									"returnParameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "5773:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 650,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5773:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5772:9:2"
									},
									"scope": 1293,
									"src": "5707:115:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 670,
										"nodeType": "Block",
										"src": "6017:48:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 666,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 331,
														"src": "6034:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 668,
													"indexExpression": {
														"id": 667,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 661,
														"src": "6050:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6034:24:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 665,
												"id": 669,
												"nodeType": "Return",
												"src": "6027:31:2"
											}
										]
									},
									"documentation": {
										"id": 659,
										"nodeType": "StructuredDocumentation",
										"src": "5828:105:2",
										"text": " @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."
									},
									"id": 671,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getApproved",
									"nameLocation": "5947:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 661,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5968:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "5960:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5960:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5959:17:2"
									},
									"returnParameters": {
										"id": 665,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 664,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "6008:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 663,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6008:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6007:9:2"
									},
									"scope": 1293,
									"src": "5938:127:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 706,
										"nodeType": "Block",
										"src": "6485:163:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 704,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 688,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 683,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 676,
															"src": "6514:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 686,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6533:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 685,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6525:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 684,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6525:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 687,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6525:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "6514:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 702,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 696,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 691,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 689,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 674,
																			"src": "6552:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 690,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 676,
																			"src": "6561:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "6552:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 693,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 674,
																				"src": "6589:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 694,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 676,
																				"src": "6596:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 692,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 555,
																			"src": "6572:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 695,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6572:32:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "6552:52:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 701,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 698,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 678,
																				"src": "6621:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 697,
																			"name": "_getApproved",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 671,
																			"src": "6608:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																				"typeString": "function (uint256) view returns (address)"
																			}
																		},
																		"id": 699,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6608:21:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 700,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 676,
																		"src": "6633:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "6608:32:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "6552:88:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 703,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6551:90:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6514:127:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 682,
												"id": 705,
												"nodeType": "Return",
												"src": "6495:146:2"
											}
										]
									},
									"documentation": {
										"id": 672,
										"nodeType": "StructuredDocumentation",
										"src": "6071:300:2",
										"text": " @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 707,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isAuthorized",
									"nameLocation": "6385:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 679,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "6407:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "6399:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 673,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6399:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6422:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "6414:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 675,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6414:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 678,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6439:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "6431:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 677,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6431:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6398:49:2"
									},
									"returnParameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "6479:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 680,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6479:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6478:6:2"
									},
									"scope": 1293,
									"src": "6376:272:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 743,
										"nodeType": "Block",
										"src": "7179:271:2",
										"statements": [
											{
												"condition": {
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7193:39:2",
													"subExpression": {
														"arguments": [
															{
																"id": 718,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 710,
																"src": "7208:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 719,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 712,
																"src": "7215:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 720,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 714,
																"src": "7224:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 717,
															"name": "_isAuthorized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 707,
															"src": "7194:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,address,uint256) view returns (bool)"
															}
														},
														"id": 721,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7194:38:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 742,
												"nodeType": "IfStatement",
												"src": "7189:255:2",
												"trueBody": {
													"id": 741,
													"nodeType": "Block",
													"src": "7234:210:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 723,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 710,
																	"src": "7252:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 726,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7269:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 725,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7261:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 724,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "7261:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 727,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7261:10:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "7252:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 739,
																"nodeType": "Block",
																"src": "7350:84:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 735,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 712,
																					"src": "7402:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 736,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 714,
																					"src": "7411:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 734,
																				"name": "ERC721InsufficientApproval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 226,
																				"src": "7375:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256) pure"
																				}
																			},
																			"id": 737,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7375:44:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 738,
																		"nodeType": "RevertStatement",
																		"src": "7368:51:2"
																	}
																]
															},
															"id": 740,
															"nodeType": "IfStatement",
															"src": "7248:186:2",
															"trueBody": {
																"id": 733,
																"nodeType": "Block",
																"src": "7273:71:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 730,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 714,
																					"src": "7321:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 729,
																				"name": "ERC721NonexistentToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 200,
																				"src": "7298:22:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																					"typeString": "function (uint256) pure"
																				}
																			},
																			"id": 731,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7298:31:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 732,
																		"nodeType": "RevertStatement",
																		"src": "7291:38:2"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 708,
										"nodeType": "StructuredDocumentation",
										"src": "6654:423:2",
										"text": " @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n the `spender` for the specific `tokenId`.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 744,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkAuthorized",
									"nameLocation": "7091:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 710,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7116:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "7108:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 709,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7108:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 712,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7131:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "7123:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 711,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7123:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7148:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "7140:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 713,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7140:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7107:49:2"
									},
									"returnParameters": {
										"id": 716,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7179:0:2"
									},
									"scope": 1293,
									"src": "7082:368:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 759,
										"nodeType": "Block",
										"src": "8167:78:2",
										"statements": [
											{
												"id": 758,
												"nodeType": "UncheckedBlock",
												"src": "8177:62:2",
												"statements": [
													{
														"expression": {
															"id": 756,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 752,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 327,
																	"src": "8201:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 754,
																"indexExpression": {
																	"id": 753,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 747,
																	"src": "8211:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8201:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 755,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 749,
																"src": "8223:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"src": "8201:27:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 757,
														"nodeType": "ExpressionStatement",
														"src": "8201:27:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 745,
										"nodeType": "StructuredDocumentation",
										"src": "7456:631:2",
										"text": " @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another."
									},
									"id": 760,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_increaseBalance",
									"nameLocation": "8101:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 747,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8126:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "8118:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 746,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8118:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 749,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8143:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "8135:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 748,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "8135:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8117:32:2"
									},
									"returnParameters": {
										"id": 751,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8167:0:2"
									},
									"scope": 1293,
									"src": "8092:153:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 849,
										"nodeType": "Block",
										"src": "8933:700:2",
										"statements": [
											{
												"assignments": [
													773
												],
												"declarations": [
													{
														"constant": false,
														"id": 773,
														"mutability": "mutable",
														"name": "from",
														"nameLocation": "8951:4:2",
														"nodeType": "VariableDeclaration",
														"scope": 849,
														"src": "8943:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 772,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8943:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 777,
												"initialValue": {
													"arguments": [
														{
															"id": 775,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 765,
															"src": "8967:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 774,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 658,
														"src": "8958:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 776,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8958:17:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8943:32:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 783,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 778,
														"name": "auth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "9035:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 781,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9051:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 780,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9043:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 779,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9043:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 782,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9043:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9035:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 791,
												"nodeType": "IfStatement",
												"src": "9031:86:2",
												"trueBody": {
													"id": 790,
													"nodeType": "Block",
													"src": "9055:62:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 785,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 773,
																		"src": "9086:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 786,
																		"name": "auth",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 767,
																		"src": "9092:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 787,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 765,
																		"src": "9098:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 784,
																	"name": "_checkAuthorized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 744,
																	"src": "9069:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256) view"
																	}
																},
																"id": 788,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9069:37:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 789,
															"nodeType": "ExpressionStatement",
															"src": "9069:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 797,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 792,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 773,
														"src": "9161:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 795,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9177:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 794,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9169:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 793,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9169:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 796,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9169:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9161:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 819,
												"nodeType": "IfStatement",
												"src": "9157:256:2",
												"trueBody": {
													"id": 818,
													"nodeType": "Block",
													"src": "9181:232:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 801,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9294:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 800,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9286:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 799,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9286:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 802,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9286:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 803,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 765,
																		"src": "9298:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 806,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9315:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 805,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9307:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 804,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9307:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 807,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9307:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "66616c7365",
																		"id": 808,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9319:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 798,
																	"name": "_approve",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		1096,
																		1162
																	],
																	"referencedDeclaration": 1162,
																	"src": "9277:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
																		"typeString": "function (address,uint256,address,bool)"
																	}
																},
																"id": 809,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9277:48:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 810,
															"nodeType": "ExpressionStatement",
															"src": "9277:48:2"
														},
														{
															"id": 817,
															"nodeType": "UncheckedBlock",
															"src": "9340:63:2",
															"statements": [
																{
																	"expression": {
																		"id": 815,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 811,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 327,
																				"src": "9368:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 813,
																			"indexExpression": {
																				"id": 812,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 773,
																				"src": "9378:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9368:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 814,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9387:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9368:20:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 816,
																	"nodeType": "ExpressionStatement",
																	"src": "9368:20:2"
																}
															]
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 825,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 820,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 763,
														"src": "9427:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 823,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9441:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 822,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9433:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 821,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9433:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 824,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9433:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9427:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 834,
												"nodeType": "IfStatement",
												"src": "9423:107:2",
												"trueBody": {
													"id": 833,
													"nodeType": "Block",
													"src": "9445:85:2",
													"statements": [
														{
															"id": 832,
															"nodeType": "UncheckedBlock",
															"src": "9459:61:2",
															"statements": [
																{
																	"expression": {
																		"id": 830,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 826,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 327,
																				"src": "9487:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 828,
																			"indexExpression": {
																				"id": 827,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 763,
																				"src": "9497:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9487:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 829,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9504:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9487:18:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 831,
																	"nodeType": "ExpressionStatement",
																	"src": "9487:18:2"
																}
															]
														}
													]
												}
											},
											{
												"expression": {
													"id": 839,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 835,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 323,
															"src": "9540:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 837,
														"indexExpression": {
															"id": 836,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 765,
															"src": "9548:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9540:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 838,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 763,
														"src": "9559:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9540:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 840,
												"nodeType": "ExpressionStatement",
												"src": "9540:21:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 842,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 773,
															"src": "9586:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 843,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 763,
															"src": "9592:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 844,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 765,
															"src": "9596:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 841,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1309,
														"src": "9577:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 845,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9577:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 846,
												"nodeType": "EmitStatement",
												"src": "9572:32:2"
											},
											{
												"expression": {
													"id": 847,
													"name": "from",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 773,
													"src": "9622:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 771,
												"id": 848,
												"nodeType": "Return",
												"src": "9615:11:2"
											}
										]
									},
									"documentation": {
										"id": 761,
										"nodeType": "StructuredDocumentation",
										"src": "8251:582:2",
										"text": " @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."
									},
									"id": 850,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "8847:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 763,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8863:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "8855:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 762,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8855:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8875:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "8867:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 764,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8867:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "8892:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "8884:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 766,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8884:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8854:43:2"
									},
									"returnParameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "8924:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 769,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8924:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8923:9:2"
									},
									"scope": 1293,
									"src": "8838:795:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 899,
										"nodeType": "Block",
										"src": "10008:274:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 863,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 858,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 853,
														"src": "10022:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 861,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10036:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 860,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10028:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 859,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10028:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 862,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10028:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10022:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 872,
												"nodeType": "IfStatement",
												"src": "10018:87:2",
												"trueBody": {
													"id": 871,
													"nodeType": "Block",
													"src": "10040:65:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 867,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10091:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 866,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10083:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 865,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10083:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 868,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10083:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 864,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "10061:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 869,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10061:33:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 870,
															"nodeType": "RevertStatement",
															"src": "10054:40:2"
														}
													]
												}
											},
											{
												"assignments": [
													874
												],
												"declarations": [
													{
														"constant": false,
														"id": 874,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "10122:13:2",
														"nodeType": "VariableDeclaration",
														"scope": 899,
														"src": "10114:21:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 873,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10114:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 883,
												"initialValue": {
													"arguments": [
														{
															"id": 876,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 853,
															"src": "10146:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 877,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 855,
															"src": "10150:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 880,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 879,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10159:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 878,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10159:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 881,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10159:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 875,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 850,
														"src": "10138:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 882,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10138:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10114:56:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 889,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 884,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 874,
														"src": "10184:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 887,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10209:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 886,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10201:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 885,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10201:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 888,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10201:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10184:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 898,
												"nodeType": "IfStatement",
												"src": "10180:96:2",
												"trueBody": {
													"id": 897,
													"nodeType": "Block",
													"src": "10213:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 893,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10262:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 892,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10254:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 891,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10254:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 894,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10254:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 890,
																	"name": "ERC721InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 214,
																	"src": "10234:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 895,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10234:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 896,
															"nodeType": "RevertStatement",
															"src": "10227:38:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 851,
										"nodeType": "StructuredDocumentation",
										"src": "9639:311:2",
										"text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
									},
									"id": 900,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "9964:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 856,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 853,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9978:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 900,
												"src": "9970:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 852,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9970:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 855,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9990:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 900,
												"src": "9982:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 854,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9969:29:2"
									},
									"returnParameters": {
										"id": 857,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10008:0:2"
									},
									"scope": 1293,
									"src": "9955:327:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "10690:43:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 909,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 903,
															"src": "10710:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 910,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 905,
															"src": "10714:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 911,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10723:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 908,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															915,
															941
														],
														"referencedDeclaration": 941,
														"src": "10700:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10700:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 913,
												"nodeType": "ExpressionStatement",
												"src": "10700:26:2"
											}
										]
									},
									"documentation": {
										"id": 901,
										"nodeType": "StructuredDocumentation",
										"src": "10288:340:2",
										"text": " @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "10642:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 903,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10660:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "10652:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 902,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10652:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 905,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10672:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "10664:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 904,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10664:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10651:29:2"
									},
									"returnParameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10690:0:2"
									},
									"scope": 1293,
									"src": "10633:100:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 940,
										"nodeType": "Block",
										"src": "11038:98:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 926,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 918,
															"src": "11054:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 927,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 920,
															"src": "11058:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 925,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 900,
														"src": "11048:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 928,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11048:18:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 929,
												"nodeType": "ExpressionStatement",
												"src": "11048:18:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 933,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11107:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 932,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11099:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 931,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11099:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 934,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11099:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 935,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 918,
															"src": "11111:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 936,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 920,
															"src": "11115:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 937,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 922,
															"src": "11124:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 930,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1292,
														"src": "11076:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11076:53:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 939,
												"nodeType": "ExpressionStatement",
												"src": "11076:53:2"
											}
										]
									},
									"documentation": {
										"id": 916,
										"nodeType": "StructuredDocumentation",
										"src": "10739:210:2",
										"text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 941,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "10963:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 923,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10981:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "10973:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 917,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10973:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 920,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10993:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "10985:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 919,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10985:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 922,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "11015:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "11002:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 921,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11002:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10972:48:2"
									},
									"returnParameters": {
										"id": 924,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11038:0:2"
									},
									"scope": 1293,
									"src": "10954:182:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 973,
										"nodeType": "Block",
										"src": "11503:186:2",
										"statements": [
											{
												"assignments": [
													948
												],
												"declarations": [
													{
														"constant": false,
														"id": 948,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "11521:13:2",
														"nodeType": "VariableDeclaration",
														"scope": 973,
														"src": "11513:21:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 947,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11513:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 960,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 952,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11553:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 951,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11545:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 950,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11545:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 953,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11545:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 954,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 944,
															"src": "11557:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 957,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11574:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 956,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11566:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 955,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11566:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 958,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11566:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 949,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 850,
														"src": "11537:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 959,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11537:40:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11513:64:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 966,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 961,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 948,
														"src": "11591:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 964,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11616:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 963,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11608:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 962,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11608:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 965,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11608:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11591:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 972,
												"nodeType": "IfStatement",
												"src": "11587:96:2",
												"trueBody": {
													"id": 971,
													"nodeType": "Block",
													"src": "11620:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 968,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 944,
																		"src": "11664:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 967,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 200,
																	"src": "11641:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 969,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11641:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 970,
															"nodeType": "RevertStatement",
															"src": "11634:38:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 942,
										"nodeType": "StructuredDocumentation",
										"src": "11142:315:2",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 974,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "11471:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 945,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 944,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11485:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 974,
												"src": "11477:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 943,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11477:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11476:17:2"
									},
									"returnParameters": {
										"id": 946,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11503:0:2"
									},
									"scope": 1293,
									"src": "11462:227:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1033,
										"nodeType": "Block",
										"src": "12084:389:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 989,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 984,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 979,
														"src": "12098:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 987,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12112:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 986,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12104:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 985,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12104:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 988,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12104:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12098:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 998,
												"nodeType": "IfStatement",
												"src": "12094:87:2",
												"trueBody": {
													"id": 997,
													"nodeType": "Block",
													"src": "12116:65:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 993,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12167:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 992,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "12159:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 991,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "12159:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 994,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12159:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 990,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "12137:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 995,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12137:33:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 996,
															"nodeType": "RevertStatement",
															"src": "12130:40:2"
														}
													]
												}
											},
											{
												"assignments": [
													1000
												],
												"declarations": [
													{
														"constant": false,
														"id": 1000,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "12198:13:2",
														"nodeType": "VariableDeclaration",
														"scope": 1033,
														"src": "12190:21:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 999,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "12190:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1009,
												"initialValue": {
													"arguments": [
														{
															"id": 1002,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 979,
															"src": "12222:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1003,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 981,
															"src": "12226:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1006,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12243:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1005,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12235:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1004,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12235:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1007,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12235:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1001,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 850,
														"src": "12214:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 1008,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12214:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12190:56:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1015,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1010,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1000,
														"src": "12260:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1013,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12285:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1012,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12277:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1011,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12277:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 1014,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12277:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12260:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1023,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1021,
															"name": "previousOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1000,
															"src": "12362:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 1022,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 977,
															"src": "12379:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "12362:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1031,
													"nodeType": "IfStatement",
													"src": "12358:109:2",
													"trueBody": {
														"id": 1030,
														"nodeType": "Block",
														"src": "12385:82:2",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"id": 1025,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 977,
																			"src": "12427:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1026,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 981,
																			"src": "12433:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 1027,
																			"name": "previousOwner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1000,
																			"src": "12442:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1024,
																		"name": "ERC721IncorrectOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 209,
																		"src": "12406:20:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$",
																			"typeString": "function (address,uint256,address) pure"
																		}
																	},
																	"id": 1028,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12406:50:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1029,
																"nodeType": "RevertStatement",
																"src": "12399:57:2"
															}
														]
													}
												},
												"id": 1032,
												"nodeType": "IfStatement",
												"src": "12256:211:2",
												"trueBody": {
													"id": 1020,
													"nodeType": "Block",
													"src": "12289:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1017,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 981,
																		"src": "12333:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1016,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 200,
																	"src": "12310:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1018,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12310:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1019,
															"nodeType": "RevertStatement",
															"src": "12303:38:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 975,
										"nodeType": "StructuredDocumentation",
										"src": "11695:313:2",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
									},
									"id": 1034,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "12022:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 982,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 977,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12040:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1034,
												"src": "12032:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 976,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12032:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 979,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12054:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1034,
												"src": "12046:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 978,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12046:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 981,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12066:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1034,
												"src": "12058:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 980,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12058:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12031:43:2"
									},
									"returnParameters": {
										"id": 983,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12084:0:2"
									},
									"scope": 1293,
									"src": "12013:460:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1051,
										"nodeType": "Block",
										"src": "13481:53:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1045,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1037,
															"src": "13505:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1046,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1039,
															"src": "13511:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1047,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1041,
															"src": "13515:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1048,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13524:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1044,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1052,
															1078
														],
														"referencedDeclaration": 1078,
														"src": "13491:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1049,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13491:36:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1050,
												"nodeType": "ExpressionStatement",
												"src": "13491:36:2"
											}
										]
									},
									"documentation": {
										"id": 1035,
										"nodeType": "StructuredDocumentation",
										"src": "12479:922:2",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 1052,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "13415:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1042,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1037,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13437:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1052,
												"src": "13429:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1036,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13429:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1039,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13451:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1052,
												"src": "13443:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1038,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13443:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1041,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13463:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1052,
												"src": "13455:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1040,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13455:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13428:43:2"
									},
									"returnParameters": {
										"id": 1043,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13481:0:2"
									},
									"scope": 1293,
									"src": "13406:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1077,
										"nodeType": "Block",
										"src": "13873:102:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1065,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1055,
															"src": "13893:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1066,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1057,
															"src": "13899:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1067,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1059,
															"src": "13903:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1064,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1034,
														"src": "13883:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1068,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13883:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1069,
												"nodeType": "ExpressionStatement",
												"src": "13883:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1071,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1055,
															"src": "13944:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1072,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1057,
															"src": "13950:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1073,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1059,
															"src": "13954:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1074,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1061,
															"src": "13963:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1070,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1292,
														"src": "13921:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1075,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13921:47:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1076,
												"nodeType": "ExpressionStatement",
												"src": "13921:47:2"
											}
										]
									},
									"documentation": {
										"id": 1053,
										"nodeType": "StructuredDocumentation",
										"src": "13540:226:2",
										"text": " @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 1078,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "13780:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1062,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1055,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13802:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "13794:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1054,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13794:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1057,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13816:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "13808:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1056,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1059,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13828:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "13820:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1058,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13820:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1061,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "13850:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "13837:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1060,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13837:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13793:62:2"
									},
									"returnParameters": {
										"id": 1063,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13873:0:2"
									},
									"scope": 1293,
									"src": "13771:204:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1095,
										"nodeType": "Block",
										"src": "14488:50:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1089,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1081,
															"src": "14507:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1090,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1083,
															"src": "14511:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1091,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1085,
															"src": "14520:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1092,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14526:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1088,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1096,
															1162
														],
														"referencedDeclaration": 1162,
														"src": "14498:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,address,bool)"
														}
													},
													"id": 1093,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14498:33:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1094,
												"nodeType": "ExpressionStatement",
												"src": "14498:33:2"
											}
										]
									},
									"documentation": {
										"id": 1079,
										"nodeType": "StructuredDocumentation",
										"src": "13981:432:2",
										"text": " @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 1096,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14427:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1086,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1081,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14444:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1096,
												"src": "14436:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1080,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14436:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1083,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14456:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1096,
												"src": "14448:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1082,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14448:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1085,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "14473:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1096,
												"src": "14465:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1084,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14465:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14435:43:2"
									},
									"returnParameters": {
										"id": 1087,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14488:0:2"
									},
									"scope": 1293,
									"src": "14418:120:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1161,
										"nodeType": "Block",
										"src": "14814:568:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1108,
														"name": "emitEvent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1105,
														"src": "14880:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1114,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1109,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1103,
															"src": "14893:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1112,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14909:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1111,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14901:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1110,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "14901:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1113,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14901:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "14893:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "14880:31:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1154,
												"nodeType": "IfStatement",
												"src": "14876:460:2",
												"trueBody": {
													"id": 1153,
													"nodeType": "Block",
													"src": "14913:423:2",
													"statements": [
														{
															"assignments": [
																1117
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1117,
																	"mutability": "mutable",
																	"name": "owner",
																	"nameLocation": "14935:5:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 1153,
																	"src": "14927:13:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 1116,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "14927:7:2",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1121,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1119,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1101,
																		"src": "14957:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1118,
																	"name": "_requireOwned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1228,
																	"src": "14943:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 1120,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14943:22:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "14927:38:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1137,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1131,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1127,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1122,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1103,
																			"src": "15093:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 1125,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "15109:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1124,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "15101:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1123,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "15101:7:2",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1126,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15101:10:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "15093:18:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1130,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1128,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1117,
																			"src": "15115:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 1129,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1103,
																			"src": "15124:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "15115:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "15093:35:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"id": 1136,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "15132:30:2",
																	"subExpression": {
																		"arguments": [
																			{
																				"id": 1133,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1117,
																				"src": "15150:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1134,
																				"name": "auth",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1103,
																				"src": "15157:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1132,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 555,
																			"src": "15133:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 1135,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15133:29:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "15093:69:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1143,
															"nodeType": "IfStatement",
															"src": "15089:142:2",
															"trueBody": {
																"id": 1142,
																"nodeType": "Block",
																"src": "15164:67:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1139,
																					"name": "auth",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1103,
																					"src": "15211:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1138,
																				"name": "ERC721InvalidApprover",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 231,
																				"src": "15189:21:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																					"typeString": "function (address) pure"
																				}
																			},
																			"id": 1140,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15189:27:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1141,
																		"nodeType": "RevertStatement",
																		"src": "15182:34:2"
																	}
																]
															}
														},
														{
															"condition": {
																"id": 1144,
																"name": "emitEvent",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1105,
																"src": "15249:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1152,
															"nodeType": "IfStatement",
															"src": "15245:81:2",
															"trueBody": {
																"id": 1151,
																"nodeType": "Block",
																"src": "15260:66:2",
																"statements": [
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"id": 1146,
																					"name": "owner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1117,
																					"src": "15292:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1147,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1099,
																					"src": "15299:2:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1148,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1101,
																					"src": "15303:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1145,
																				"name": "Approval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1318,
																				"src": "15283:8:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,uint256)"
																				}
																			},
																			"id": 1149,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15283:28:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1150,
																		"nodeType": "EmitStatement",
																		"src": "15278:33:2"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"id": 1159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1155,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 331,
															"src": "15346:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1157,
														"indexExpression": {
															"id": 1156,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1101,
															"src": "15362:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15346:24:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1158,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1099,
														"src": "15373:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15346:29:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1160,
												"nodeType": "ExpressionStatement",
												"src": "15346:29:2"
											}
										]
									},
									"documentation": {
										"id": 1097,
										"nodeType": "StructuredDocumentation",
										"src": "14544:171:2",
										"text": " @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers."
									},
									"id": 1162,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14729:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1099,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14746:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1162,
												"src": "14738:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1098,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14738:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1101,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14758:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1162,
												"src": "14750:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1100,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14750:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1103,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "14775:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1162,
												"src": "14767:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1102,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14767:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1105,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "14786:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 1162,
												"src": "14781:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1104,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14781:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14737:59:2"
									},
									"returnParameters": {
										"id": 1107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14814:0:2"
									},
									"scope": 1293,
									"src": "14720:662:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1198,
										"nodeType": "Block",
										"src": "15684:219:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1172,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1167,
														"src": "15698:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1175,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15718:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1174,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "15710:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1173,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "15710:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 1176,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15710:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15698:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1183,
												"nodeType": "IfStatement",
												"src": "15694:91:2",
												"trueBody": {
													"id": 1182,
													"nodeType": "Block",
													"src": "15722:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1179,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1167,
																		"src": "15765:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1178,
																	"name": "ERC721InvalidOperator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 236,
																	"src": "15743:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1180,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15743:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1181,
															"nodeType": "RevertStatement",
															"src": "15736:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1184,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 337,
																"src": "15794:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1187,
															"indexExpression": {
																"id": 1185,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1165,
																"src": "15813:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15794:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1188,
														"indexExpression": {
															"id": 1186,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1167,
															"src": "15820:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15794:35:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1189,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1169,
														"src": "15832:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "15794:46:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1191,
												"nodeType": "ExpressionStatement",
												"src": "15794:46:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1193,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1165,
															"src": "15870:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1194,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1167,
															"src": "15877:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1195,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1169,
															"src": "15887:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1192,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1327,
														"src": "15855:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15855:41:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1197,
												"nodeType": "EmitStatement",
												"src": "15850:46:2"
											}
										]
									},
									"documentation": {
										"id": 1163,
										"nodeType": "StructuredDocumentation",
										"src": "15388:198:2",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"id": 1199,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "15600:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1165,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "15627:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1199,
												"src": "15619:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1164,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15619:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1167,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "15642:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1199,
												"src": "15634:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15634:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1169,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "15657:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1199,
												"src": "15652:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1168,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15652:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15618:48:2"
									},
									"returnParameters": {
										"id": 1171,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15684:0:2"
									},
									"scope": 1293,
									"src": "15591:312:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1227,
										"nodeType": "Block",
										"src": "16210:169:2",
										"statements": [
											{
												"assignments": [
													1208
												],
												"declarations": [
													{
														"constant": false,
														"id": 1208,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "16228:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 1227,
														"src": "16220:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1207,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "16220:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1212,
												"initialValue": {
													"arguments": [
														{
															"id": 1210,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1202,
															"src": "16245:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1209,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 658,
														"src": "16236:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16236:17:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16220:33:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1213,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1208,
														"src": "16267:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1216,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16284:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1215,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16276:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1214,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16276:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 1217,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16276:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16267:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1224,
												"nodeType": "IfStatement",
												"src": "16263:88:2",
												"trueBody": {
													"id": 1223,
													"nodeType": "Block",
													"src": "16288:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1220,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1202,
																		"src": "16332:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1219,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 200,
																	"src": "16309:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1221,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16309:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1222,
															"nodeType": "RevertStatement",
															"src": "16302:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1225,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1208,
													"src": "16367:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1206,
												"id": 1226,
												"nodeType": "Return",
												"src": "16360:12:2"
											}
										]
									},
									"documentation": {
										"id": 1200,
										"nodeType": "StructuredDocumentation",
										"src": "15909:224:2",
										"text": " @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}."
									},
									"id": 1228,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireOwned",
									"nameLocation": "16147:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1202,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16169:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "16161:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16161:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16160:17:2"
									},
									"returnParameters": {
										"id": 1206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1205,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "16201:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16201:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16200:9:2"
									},
									"scope": 1293,
									"src": "16138:241:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1291,
										"nodeType": "Block",
										"src": "17020:680:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1240,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1233,
																"src": "17034:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1241,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "17037:4:2",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "17034:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1242,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "17042:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "17034:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1243,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17051:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "17034:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1290,
												"nodeType": "IfStatement",
												"src": "17030:664:2",
												"trueBody": {
													"id": 1289,
													"nodeType": "Block",
													"src": "17054:640:2",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1269,
																		"nodeType": "Block",
																		"src": "17168:162:2",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1262,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1258,
																						"name": "retval",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1256,
																						"src": "17190:6:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1259,
																								"name": "IERC721Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1428,
																								"src": "17200:15:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1428_$",
																									"typeString": "type(contract IERC721Receiver)"
																								}
																							},
																							"id": 1260,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "17216:16:2",
																							"memberName": "onERC721Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1427,
																							"src": "17200:32:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1261,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "17233:8:2",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "17200:41:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "17190:51:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1268,
																				"nodeType": "IfStatement",
																				"src": "17186:130:2",
																				"trueBody": {
																					"id": 1267,
																					"nodeType": "Block",
																					"src": "17243:73:2",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1264,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1233,
																										"src": "17294:2:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1263,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 219,
																									"src": "17272:21:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1265,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "17272:25:2",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1266,
																							"nodeType": "RevertStatement",
																							"src": "17265:32:2"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1270,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1257,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1256,
																				"mutability": "mutable",
																				"name": "retval",
																				"nameLocation": "17160:6:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 1270,
																				"src": "17153:13:2",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1255,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "17153:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17152:15:2"
																	},
																	"src": "17144:186:2"
																},
																{
																	"block": {
																		"id": 1286,
																		"nodeType": "Block",
																		"src": "17359:325:2",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1277,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1274,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1272,
																							"src": "17381:6:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 1275,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "17388:6:2",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "17381:13:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 1276,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "17398:1:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "17381:18:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 1284,
																					"nodeType": "Block",
																					"src": "17480:190:2",
																					"statements": [
																						{
																							"AST": {
																								"nativeSrc": "17566:86:2",
																								"nodeType": "YulBlock",
																								"src": "17566:86:2",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nativeSrc": "17603:2:2",
																															"nodeType": "YulLiteral",
																															"src": "17603:2:2",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nativeSrc": "17607:6:2",
																															"nodeType": "YulIdentifier",
																															"src": "17607:6:2"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nativeSrc": "17599:3:2",
																														"nodeType": "YulIdentifier",
																														"src": "17599:3:2"
																													},
																													"nativeSrc": "17599:15:2",
																													"nodeType": "YulFunctionCall",
																													"src": "17599:15:2"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nativeSrc": "17622:6:2",
																															"nodeType": "YulIdentifier",
																															"src": "17622:6:2"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nativeSrc": "17616:5:2",
																														"nodeType": "YulIdentifier",
																														"src": "17616:5:2"
																													},
																													"nativeSrc": "17616:13:2",
																													"nodeType": "YulFunctionCall",
																													"src": "17616:13:2"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nativeSrc": "17592:6:2",
																												"nodeType": "YulIdentifier",
																												"src": "17592:6:2"
																											},
																											"nativeSrc": "17592:38:2",
																											"nodeType": "YulFunctionCall",
																											"src": "17592:38:2"
																										},
																										"nativeSrc": "17592:38:2",
																										"nodeType": "YulExpressionStatement",
																										"src": "17592:38:2"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "shanghai",
																							"externalReferences": [
																								{
																									"declaration": 1272,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "17607:6:2",
																									"valueSize": 1
																								},
																								{
																									"declaration": 1272,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "17622:6:2",
																									"valueSize": 1
																								}
																							],
																							"id": 1283,
																							"nodeType": "InlineAssembly",
																							"src": "17557:95:2"
																						}
																					]
																				},
																				"id": 1285,
																				"nodeType": "IfStatement",
																				"src": "17377:293:2",
																				"trueBody": {
																					"id": 1282,
																					"nodeType": "Block",
																					"src": "17401:73:2",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1279,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1233,
																										"src": "17452:2:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1278,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 219,
																									"src": "17430:21:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1280,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "17430:25:2",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1281,
																							"nodeType": "RevertStatement",
																							"src": "17423:32:2"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1287,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1273,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1272,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "17351:6:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 1287,
																				"src": "17338:19:2",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 1271,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "17338:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17337:21:2"
																	},
																	"src": "17331:353:2"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1249,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1884,
																			"src": "17109:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1250,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17109:12:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1251,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1231,
																		"src": "17123:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1252,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1235,
																		"src": "17129:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1253,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1237,
																		"src": "17138:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1246,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1233,
																				"src": "17088:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1245,
																			"name": "IERC721Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1428,
																			"src": "17072:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1428_$",
																				"typeString": "type(contract IERC721Receiver)"
																			}
																		},
																		"id": 1247,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17072:19:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721Receiver_$1428",
																			"typeString": "contract IERC721Receiver"
																		}
																	},
																	"id": 1248,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "17092:16:2",
																	"memberName": "onERC721Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1427,
																	"src": "17072:36:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1254,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17072:71:2",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1288,
															"nodeType": "TryStatement",
															"src": "17068:616:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1229,
										"nodeType": "StructuredDocumentation",
										"src": "16385:528:2",
										"text": " @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call"
									},
									"id": 1292,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOnERC721Received",
									"nameLocation": "16927:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1231,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16958:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1292,
												"src": "16950:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16950:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1233,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16972:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1292,
												"src": "16964:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16964:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1235,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16984:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1292,
												"src": "16976:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16976:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1237,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "17006:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1292,
												"src": "16993:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1236,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16993:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16949:62:2"
									},
									"returnParameters": {
										"id": 1239,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17020:0:2"
									},
									"scope": 1293,
									"src": "16918:782:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1294,
							"src": "776:16926:2",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": [
								1309,
								1318,
								1327
							]
						}
					],
					"src": "107:17596:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							2193
						],
						"IERC721": [
							1410
						]
					},
					"id": 1411,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1295,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1297,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1411,
							"sourceUnit": 2194,
							"src": "134:62:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1296,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2193,
										"src": "142:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1299,
										"name": "IERC165",
										"nameLocations": [
											"287:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2193,
										"src": "287:7:3"
									},
									"id": 1300,
									"nodeType": "InheritanceSpecifier",
									"src": "287:7:3"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1298,
								"nodeType": "StructuredDocumentation",
								"src": "198:67:3",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 1410,
							"linearizedBaseContracts": [
								1410,
								2193
							],
							"name": "IERC721",
							"nameLocation": "276:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1301,
										"nodeType": "StructuredDocumentation",
										"src": "301:88:3",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1309,
									"name": "Transfer",
									"nameLocation": "400:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1303,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "425:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "409:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1302,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "409:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1305,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "447:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "431:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "431:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1307,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "467:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "451:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1306,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "451:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "408:67:3"
									},
									"src": "394:82:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1310,
										"nodeType": "StructuredDocumentation",
										"src": "482:94:3",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1318,
									"name": "Approval",
									"nameLocation": "587:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1312,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "612:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "596:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1311,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "596:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1314,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "635:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "619:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1313,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "619:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1316,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "661:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "645:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1315,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "645:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "595:74:3"
									},
									"src": "581:89:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1319,
										"nodeType": "StructuredDocumentation",
										"src": "676:117:3",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1327,
									"name": "ApprovalForAll",
									"nameLocation": "804:14:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1321,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "835:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "819:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1320,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "819:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1323,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "858:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "842:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1322,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "842:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1325,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "873:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "868:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1324,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "868:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:64:3"
									},
									"src": "798:85:3"
								},
								{
									"documentation": {
										"id": 1328,
										"nodeType": "StructuredDocumentation",
										"src": "889:76:3",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 1335,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "979:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1330,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "997:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1335,
												"src": "989:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1329,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "989:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "988:15:3"
									},
									"returnParameters": {
										"id": 1334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1333,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1035:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1335,
												"src": "1027:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1332,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1027:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1026:17:3"
									},
									"scope": 1410,
									"src": "970:74:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1336,
										"nodeType": "StructuredDocumentation",
										"src": "1050:131:3",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 1343,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1195:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1338,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1211:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1343,
												"src": "1203:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1337,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1203:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1202:17:3"
									},
									"returnParameters": {
										"id": 1342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1341,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1251:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1343,
												"src": "1243:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1340,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1243:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1242:15:3"
									},
									"scope": 1410,
									"src": "1186:72:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1344,
										"nodeType": "StructuredDocumentation",
										"src": "1264:565:3",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1355,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1843:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1346,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1868:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "1860:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1345,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1860:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1348,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1882:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "1874:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1347,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1874:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1350,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1894:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "1886:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1349,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1352,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1918:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "1903:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1351,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1903:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1859:64:3"
									},
									"returnParameters": {
										"id": 1354,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1932:0:3"
									},
									"scope": 1410,
									"src": "1834:99:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1356,
										"nodeType": "StructuredDocumentation",
										"src": "1939:705:3",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 1365,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2658:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1358,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2683:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1365,
												"src": "2675:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2675:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1360,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2697:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1365,
												"src": "2689:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2689:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1362,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2709:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1365,
												"src": "2701:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2674:43:3"
									},
									"returnParameters": {
										"id": 1364,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2726:0:3"
									},
									"scope": 1410,
									"src": "2649:78:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1366,
										"nodeType": "StructuredDocumentation",
										"src": "2733:732:3",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1375,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3479:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1368,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3500:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "3492:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1367,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3492:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1370,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3514:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "3506:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1369,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3506:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1372,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3526:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "3518:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1371,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3518:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3491:43:3"
									},
									"returnParameters": {
										"id": 1374,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3543:0:3"
									},
									"scope": 1410,
									"src": "3470:74:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1376,
										"nodeType": "StructuredDocumentation",
										"src": "3550:452:3",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1383,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4016:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1378,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4032:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1383,
												"src": "4024:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1377,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4024:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1380,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4044:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1383,
												"src": "4036:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1379,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4036:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4023:29:3"
									},
									"returnParameters": {
										"id": 1382,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4061:0:3"
									},
									"scope": 1410,
									"src": "4007:55:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1384,
										"nodeType": "StructuredDocumentation",
										"src": "4068:315:3",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1391,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4397:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1386,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4423:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1391,
												"src": "4415:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4415:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1388,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4438:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1391,
												"src": "4433:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1387,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4433:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4414:33:3"
									},
									"returnParameters": {
										"id": 1390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4456:0:3"
									},
									"scope": 1410,
									"src": "4388:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1392,
										"nodeType": "StructuredDocumentation",
										"src": "4463:139:3",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1399,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4616:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1394,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4636:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1399,
												"src": "4628:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1393,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4628:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4627:17:3"
									},
									"returnParameters": {
										"id": 1398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1397,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4676:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1399,
												"src": "4668:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1396,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4668:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4667:18:3"
									},
									"scope": 1410,
									"src": "4607:79:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1400,
										"nodeType": "StructuredDocumentation",
										"src": "4692:138:3",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 1409,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4844:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1402,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4869:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1409,
												"src": "4861:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1401,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4861:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1404,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4884:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1409,
												"src": "4876:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1403,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4860:33:3"
									},
									"returnParameters": {
										"id": 1408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1407,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1409,
												"src": "4917:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1406,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4917:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4916:6:3"
									},
									"scope": 1410,
									"src": "4835:88:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1411,
							"src": "266:4659:3",
							"usedErrors": [],
							"usedEvents": [
								1309,
								1318,
								1327
							]
						}
					],
					"src": "108:4818:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							1428
						]
					},
					"id": 1429,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1412,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "116:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1413,
								"nodeType": "StructuredDocumentation",
								"src": "142:152:4",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 1428,
							"linearizedBaseContracts": [
								1428
							],
							"name": "IERC721Receiver",
							"nameLocation": "305:15:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1414,
										"nodeType": "StructuredDocumentation",
										"src": "327:500:4",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 1427,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "841:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1416,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "875:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "867:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1415,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1418,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "901:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "893:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1417,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "893:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1420,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "923:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "915:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1419,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "915:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1422,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "955:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "940:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1421,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "940:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:108:4"
									},
									"returnParameters": {
										"id": 1426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1425,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "984:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1424,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "984:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "983:8:4"
									},
									"scope": 1428,
									"src": "832:160:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1429,
							"src": "295:699:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "116:879:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
					"exportedSymbols": {
						"ERC721": [
							1293
						],
						"ERC721Enumerable": [
							1812
						],
						"IERC165": [
							2193
						],
						"IERC721Enumerable": [
							1844
						]
					},
					"id": 1813,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1430,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "128:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"file": "../ERC721.sol",
							"id": 1432,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1813,
							"sourceUnit": 1294,
							"src": "154:37:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1431,
										"name": "ERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1293,
										"src": "162:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
							"file": "./IERC721Enumerable.sol",
							"id": 1434,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1813,
							"sourceUnit": 1845,
							"src": "192:58:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1433,
										"name": "IERC721Enumerable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1844,
										"src": "200:17:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../../../utils/introspection/ERC165.sol",
							"id": 1436,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1813,
							"sourceUnit": 2182,
							"src": "251:64:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1435,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2193,
										"src": "259:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1438,
										"name": "ERC721",
										"nameLocations": [
											"746:6:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1293,
										"src": "746:6:5"
									},
									"id": 1439,
									"nodeType": "InheritanceSpecifier",
									"src": "746:6:5"
								},
								{
									"baseName": {
										"id": 1440,
										"name": "IERC721Enumerable",
										"nameLocations": [
											"754:17:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1844,
										"src": "754:17:5"
									},
									"id": 1441,
									"nodeType": "InheritanceSpecifier",
									"src": "754:17:5"
								}
							],
							"canonicalName": "ERC721Enumerable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1437,
								"nodeType": "StructuredDocumentation",
								"src": "317:390:5",
								"text": " @dev This implements an optional extension of {ERC721} defined in the EIP that adds enumerability\n of all the token ids in the contract as well as all token ids owned by each account.\n CAUTION: `ERC721` extensions that implement custom `balanceOf` logic, such as `ERC721Consecutive`,\n interfere with enumerability and should not be used together with `ERC721Enumerable`."
							},
							"fullyImplemented": true,
							"id": 1812,
							"linearizedBaseContracts": [
								1812,
								1844,
								1293,
								237,
								1872,
								1410,
								2181,
								2193,
								1902
							],
							"name": "ERC721Enumerable",
							"nameLocation": "726:16:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1447,
									"mutability": "mutable",
									"name": "_ownedTokens",
									"nameLocation": "846:12:5",
									"nodeType": "VariableDeclaration",
									"scope": 1812,
									"src": "778:80:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(uint256 => uint256))"
									},
									"typeName": {
										"id": 1446,
										"keyName": "owner",
										"keyNameLocation": "794:5:5",
										"keyType": {
											"id": 1442,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "786:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "778:59:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(uint256 => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1445,
											"keyName": "index",
											"keyNameLocation": "819:5:5",
											"keyType": {
												"id": 1443,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "811:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "803:33:5",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
												"typeString": "mapping(uint256 => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 1444,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "828:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1451,
									"mutability": "mutable",
									"name": "_ownedTokensIndex",
									"nameLocation": "908:17:5",
									"nodeType": "VariableDeclaration",
									"scope": 1812,
									"src": "864:61:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 1450,
										"keyName": "tokenId",
										"keyNameLocation": "880:7:5",
										"keyType": {
											"id": 1448,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "872:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "864:35:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1449,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "891:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1454,
									"mutability": "mutable",
									"name": "_allTokens",
									"nameLocation": "950:10:5",
									"nodeType": "VariableDeclaration",
									"scope": 1812,
									"src": "932:28:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
										"typeString": "uint256[]"
									},
									"typeName": {
										"baseType": {
											"id": 1452,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "932:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 1453,
										"nodeType": "ArrayTypeName",
										"src": "932:9:5",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
											"typeString": "uint256[]"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1458,
									"mutability": "mutable",
									"name": "_allTokensIndex",
									"nameLocation": "1010:15:5",
									"nodeType": "VariableDeclaration",
									"scope": 1812,
									"src": "966:59:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 1457,
										"keyName": "tokenId",
										"keyNameLocation": "982:7:5",
										"keyType": {
											"id": 1455,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "974:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "966:35:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1456,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "993:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 1459,
										"nodeType": "StructuredDocumentation",
										"src": "1032:168:5",
										"text": " @dev An `owner`'s token query was out of bounds for `index`.\n NOTE: The owner being `address(0)` indicates a global out of bounds index."
									},
									"errorSelector": "a57d13dc",
									"id": 1465,
									"name": "ERC721OutOfBoundsIndex",
									"nameLocation": "1211:22:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1461,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1242:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1465,
												"src": "1234:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1463,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "1257:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1465,
												"src": "1249:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1249:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1233:30:5"
									},
									"src": "1205:59:5"
								},
								{
									"documentation": {
										"id": 1466,
										"nodeType": "StructuredDocumentation",
										"src": "1270:50:5",
										"text": " @dev Batch mint is not allowed."
									},
									"errorSelector": "59171fc1",
									"id": 1468,
									"name": "ERC721EnumerableForbiddenBatchMint",
									"nameLocation": "1331:34:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1467,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1365:2:5"
									},
									"src": "1325:43:5"
								},
								{
									"baseFunctions": [
										385,
										2192
									],
									"body": {
										"id": 1491,
										"nodeType": "Block",
										"src": "1543:114:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1489,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 1484,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1479,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1471,
															"src": "1560:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1481,
																		"name": "IERC721Enumerable",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1844,
																		"src": "1580:17:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC721Enumerable_$1844_$",
																			"typeString": "type(contract IERC721Enumerable)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IERC721Enumerable_$1844_$",
																			"typeString": "type(contract IERC721Enumerable)"
																		}
																	],
																	"id": 1480,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "1575:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1482,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1575:23:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Enumerable_$1844",
																	"typeString": "type(contract IERC721Enumerable)"
																}
															},
															"id": 1483,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "1599:11:5",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "1575:35:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "1560:50:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 1487,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1471,
																"src": "1638:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 1485,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1614:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721Enumerable_$1812_$",
																	"typeString": "type(contract super ERC721Enumerable)"
																}
															},
															"id": 1486,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1620:17:5",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 385,
															"src": "1614:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 1488,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1614:36:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1560:90:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1478,
												"id": 1490,
												"nodeType": "Return",
												"src": "1553:97:5"
											}
										]
									},
									"documentation": {
										"id": 1469,
										"nodeType": "StructuredDocumentation",
										"src": "1374:56:5",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1492,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1444:17:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1475,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1473,
												"name": "IERC165",
												"nameLocations": [
													"1511:7:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2193,
												"src": "1511:7:5"
											},
											{
												"id": 1474,
												"name": "ERC721",
												"nameLocations": [
													"1520:6:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1293,
												"src": "1520:6:5"
											}
										],
										"src": "1502:25:5"
									},
									"parameters": {
										"id": 1472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1471,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1469:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 1492,
												"src": "1462:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1470,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1462:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1461:20:5"
									},
									"returnParameters": {
										"id": 1478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1477,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1492,
												"src": "1537:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1476,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1537:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1536:6:5"
									},
									"scope": 1812,
									"src": "1435:222:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1835
									],
									"body": {
										"id": 1520,
										"nodeType": "Block",
										"src": "1833:158:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1502,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1497,
														"src": "1847:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"arguments": [
															{
																"id": 1504,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1495,
																"src": "1866:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1503,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 413,
															"src": "1856:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view returns (uint256)"
															}
														},
														"id": 1505,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1856:16:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1847:25:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1513,
												"nodeType": "IfStatement",
												"src": "1843:99:5",
												"trueBody": {
													"id": 1512,
													"nodeType": "Block",
													"src": "1874:68:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1508,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1495,
																		"src": "1918:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1509,
																		"name": "index",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1497,
																		"src": "1925:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1507,
																	"name": "ERC721OutOfBoundsIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1465,
																	"src": "1895:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256) pure"
																	}
																},
																"id": 1510,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1895:36:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1511,
															"nodeType": "RevertStatement",
															"src": "1888:43:5"
														}
													]
												}
											},
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 1514,
															"name": "_ownedTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1447,
															"src": "1958:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(uint256 => uint256))"
															}
														},
														"id": 1516,
														"indexExpression": {
															"id": 1515,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1495,
															"src": "1971:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1958:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 1518,
													"indexExpression": {
														"id": 1517,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1497,
														"src": "1978:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1958:26:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1501,
												"id": 1519,
												"nodeType": "Return",
												"src": "1951:33:5"
											}
										]
									},
									"documentation": {
										"id": 1493,
										"nodeType": "StructuredDocumentation",
										"src": "1663:68:5",
										"text": " @dev See {IERC721Enumerable-tokenOfOwnerByIndex}."
									},
									"functionSelector": "2f745c59",
									"id": 1521,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenOfOwnerByIndex",
									"nameLocation": "1745:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1495,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1773:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1521,
												"src": "1765:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1494,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1765:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1497,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "1788:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1521,
												"src": "1780:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1496,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1780:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1764:30:5"
									},
									"returnParameters": {
										"id": 1501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1500,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1521,
												"src": "1824:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1499,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1824:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1823:9:5"
									},
									"scope": 1812,
									"src": "1736:255:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1825
									],
									"body": {
										"id": 1530,
										"nodeType": "Block",
										"src": "2123:41:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1527,
														"name": "_allTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1454,
														"src": "2140:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"id": 1528,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2151:6:5",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "2140:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1526,
												"id": 1529,
												"nodeType": "Return",
												"src": "2133:24:5"
											}
										]
									},
									"documentation": {
										"id": 1522,
										"nodeType": "StructuredDocumentation",
										"src": "1997:60:5",
										"text": " @dev See {IERC721Enumerable-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 1531,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2071:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1523,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2082:2:5"
									},
									"returnParameters": {
										"id": 1526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1525,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1531,
												"src": "2114:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1524,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2114:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2113:9:5"
									},
									"scope": 1812,
									"src": "2062:102:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1843
									],
									"body": {
										"id": 1557,
										"nodeType": "Block",
										"src": "2311:151:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1539,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1534,
														"src": "2325:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1540,
															"name": "totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1531,
															"src": "2334:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 1541,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2334:13:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2325:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1552,
												"nodeType": "IfStatement",
												"src": "2321:101:5",
												"trueBody": {
													"id": 1551,
													"nodeType": "Block",
													"src": "2349:73:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1546,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2401:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1545,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2393:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1544,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2393:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1547,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2393:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1548,
																		"name": "index",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1534,
																		"src": "2405:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1543,
																	"name": "ERC721OutOfBoundsIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1465,
																	"src": "2370:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256) pure"
																	}
																},
																"id": 1549,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2370:41:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1550,
															"nodeType": "RevertStatement",
															"src": "2363:48:5"
														}
													]
												}
											},
											{
												"expression": {
													"baseExpression": {
														"id": 1553,
														"name": "_allTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1454,
														"src": "2438:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"id": 1555,
													"indexExpression": {
														"id": 1554,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1534,
														"src": "2449:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2438:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1538,
												"id": 1556,
												"nodeType": "Return",
												"src": "2431:24:5"
											}
										]
									},
									"documentation": {
										"id": 1532,
										"nodeType": "StructuredDocumentation",
										"src": "2170:61:5",
										"text": " @dev See {IERC721Enumerable-tokenByIndex}."
									},
									"functionSelector": "4f6ccce7",
									"id": 1558,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenByIndex",
									"nameLocation": "2245:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1534,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "2266:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1558,
												"src": "2258:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1533,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2258:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2257:15:5"
									},
									"returnParameters": {
										"id": 1538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1537,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1558,
												"src": "2302:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1536,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2302:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2301:9:5"
									},
									"scope": 1812,
									"src": "2236:226:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										850
									],
									"body": {
										"id": 1626,
										"nodeType": "Block",
										"src": "2622:521:5",
										"statements": [
											{
												"assignments": [
													1572
												],
												"declarations": [
													{
														"constant": false,
														"id": 1572,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "2640:13:5",
														"nodeType": "VariableDeclaration",
														"scope": 1626,
														"src": "2632:21:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1571,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2632:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1579,
												"initialValue": {
													"arguments": [
														{
															"id": 1575,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1561,
															"src": "2670:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1576,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1563,
															"src": "2674:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1577,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1565,
															"src": "2683:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1573,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "2656:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC721Enumerable_$1812_$",
																"typeString": "type(contract super ERC721Enumerable)"
															}
														},
														"id": 1574,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2662:7:5",
														"memberName": "_update",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 850,
														"src": "2656:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 1578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2656:32:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2632:56:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1580,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1572,
														"src": "2703:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1583,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2728:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1582,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2720:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1581,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2720:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1584,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2720:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2703:27:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1593,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1591,
															"name": "previousOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1572,
															"src": "2807:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 1592,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1561,
															"src": "2824:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "2807:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1600,
													"nodeType": "IfStatement",
													"src": "2803:106:5",
													"trueBody": {
														"id": 1599,
														"nodeType": "Block",
														"src": "2828:81:5",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 1595,
																			"name": "previousOwner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1572,
																			"src": "2875:13:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1596,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1563,
																			"src": "2890:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1594,
																		"name": "_removeTokenFromOwnerEnumeration",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1738,
																		"src": "2842:32:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																			"typeString": "function (address,uint256)"
																		}
																	},
																	"id": 1597,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2842:56:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1598,
																"nodeType": "ExpressionStatement",
																"src": "2842:56:5"
															}
														]
													}
												},
												"id": 1601,
												"nodeType": "IfStatement",
												"src": "2699:210:5",
												"trueBody": {
													"id": 1590,
													"nodeType": "Block",
													"src": "2732:65:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1587,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1563,
																		"src": "2778:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1586,
																	"name": "_addTokenToAllTokensEnumeration",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1678,
																	"src": "2746:31:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 1588,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2746:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1589,
															"nodeType": "ExpressionStatement",
															"src": "2746:40:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1607,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1602,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1561,
														"src": "2922:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1605,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2936:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1604,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2928:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1603,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2928:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1606,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2928:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2922:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1615,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1613,
															"name": "previousOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1572,
															"src": "3020:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 1614,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1561,
															"src": "3037:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "3020:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1622,
													"nodeType": "IfStatement",
													"src": "3016:90:5",
													"trueBody": {
														"id": 1621,
														"nodeType": "Block",
														"src": "3041:65:5",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 1617,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1561,
																			"src": "3083:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1618,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1563,
																			"src": "3087:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1616,
																		"name": "_addTokenToOwnerEnumeration",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1658,
																		"src": "3055:27:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																			"typeString": "function (address,uint256)"
																		}
																	},
																	"id": 1619,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3055:40:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1620,
																"nodeType": "ExpressionStatement",
																"src": "3055:40:5"
															}
														]
													}
												},
												"id": 1623,
												"nodeType": "IfStatement",
												"src": "2918:188:5",
												"trueBody": {
													"id": 1612,
													"nodeType": "Block",
													"src": "2940:70:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1609,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1563,
																		"src": "2991:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1608,
																	"name": "_removeTokenFromAllTokensEnumeration",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1786,
																	"src": "2954:36:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 1610,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2954:45:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1611,
															"nodeType": "ExpressionStatement",
															"src": "2954:45:5"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1624,
													"name": "previousOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1572,
													"src": "3123:13:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1570,
												"id": 1625,
												"nodeType": "Return",
												"src": "3116:20:5"
											}
										]
									},
									"documentation": {
										"id": 1559,
										"nodeType": "StructuredDocumentation",
										"src": "2468:45:5",
										"text": " @dev See {ERC721-_update}."
									},
									"id": 1627,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "2527:7:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1567,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2595:8:5"
									},
									"parameters": {
										"id": 1566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1561,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2543:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1627,
												"src": "2535:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1560,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2535:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1563,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2555:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1627,
												"src": "2547:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1562,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2547:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1565,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "2572:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1627,
												"src": "2564:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1564,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2564:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2534:43:5"
									},
									"returnParameters": {
										"id": 1570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1569,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1627,
												"src": "2613:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1568,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2613:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2612:9:5"
									},
									"scope": 1812,
									"src": "2518:625:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1657,
										"nodeType": "Block",
										"src": "3511:140:5",
										"statements": [
											{
												"assignments": [
													1636
												],
												"declarations": [
													{
														"constant": false,
														"id": 1636,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "3529:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 1657,
														"src": "3521:14:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1635,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3521:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1642,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1638,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1630,
																"src": "3548:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1637,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 413,
															"src": "3538:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view returns (uint256)"
															}
														},
														"id": 1639,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3538:13:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"hexValue": "31",
														"id": 1640,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3554:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "3538:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3521:34:5"
											},
											{
												"expression": {
													"id": 1649,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1643,
																"name": "_ownedTokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1447,
																"src": "3565:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(uint256 => uint256))"
																}
															},
															"id": 1646,
															"indexExpression": {
																"id": 1644,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1630,
																"src": "3578:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3565:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1647,
														"indexExpression": {
															"id": 1645,
															"name": "length",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1636,
															"src": "3582:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3565:24:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1648,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1632,
														"src": "3592:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3565:34:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1650,
												"nodeType": "ExpressionStatement",
												"src": "3565:34:5"
											},
											{
												"expression": {
													"id": 1655,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1651,
															"name": "_ownedTokensIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1451,
															"src": "3609:17:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1653,
														"indexExpression": {
															"id": 1652,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1632,
															"src": "3627:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3609:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1654,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1636,
														"src": "3638:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3609:35:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1656,
												"nodeType": "ExpressionStatement",
												"src": "3609:35:5"
											}
										]
									},
									"documentation": {
										"id": 1628,
										"nodeType": "StructuredDocumentation",
										"src": "3149:283:5",
										"text": " @dev Private function to add a token to this extension's ownership-tracking data structures.\n @param to address representing the new owner of the given token ID\n @param tokenId uint256 ID of the token to be added to the tokens list of the given address"
									},
									"id": 1658,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_addTokenToOwnerEnumeration",
									"nameLocation": "3446:27:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1630,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3482:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1658,
												"src": "3474:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1629,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3474:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1632,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3494:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1658,
												"src": "3486:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1631,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3486:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3473:29:5"
									},
									"returnParameters": {
										"id": 1634,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3511:0:5"
									},
									"scope": 1812,
									"src": "3437:214:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1677,
										"nodeType": "Block",
										"src": "3912:95:5",
										"statements": [
											{
												"expression": {
													"id": 1669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1664,
															"name": "_allTokensIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1458,
															"src": "3922:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1666,
														"indexExpression": {
															"id": 1665,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1661,
															"src": "3938:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3922:24:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1667,
															"name": "_allTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1454,
															"src": "3949:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 1668,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3960:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3949:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3922:44:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1670,
												"nodeType": "ExpressionStatement",
												"src": "3922:44:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1674,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1661,
															"src": "3992:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1671,
															"name": "_allTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1454,
															"src": "3976:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 1673,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3987:4:5",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "3976:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
															"typeString": "function (uint256[] storage pointer,uint256)"
														}
													},
													"id": 1675,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3976:24:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1676,
												"nodeType": "ExpressionStatement",
												"src": "3976:24:5"
											}
										]
									},
									"documentation": {
										"id": 1659,
										"nodeType": "StructuredDocumentation",
										"src": "3657:184:5",
										"text": " @dev Private function to add a token to this extension's token tracking data structures.\n @param tokenId uint256 ID of the token to be added to the tokens list"
									},
									"id": 1678,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_addTokenToAllTokensEnumeration",
									"nameLocation": "3855:31:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1661,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3895:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1678,
												"src": "3887:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3887:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3886:17:5"
									},
									"returnParameters": {
										"id": 1663,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3912:0:5"
									},
									"scope": 1812,
									"src": "3846:161:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1737,
										"nodeType": "Block",
										"src": "4705:878:5",
										"statements": [
											{
												"assignments": [
													1687
												],
												"declarations": [
													{
														"constant": false,
														"id": 1687,
														"mutability": "mutable",
														"name": "lastTokenIndex",
														"nameLocation": "4894:14:5",
														"nodeType": "VariableDeclaration",
														"scope": 1737,
														"src": "4886:22:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1686,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4886:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1691,
												"initialValue": {
													"arguments": [
														{
															"id": 1689,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1681,
															"src": "4921:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1688,
														"name": "balanceOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 413,
														"src": "4911:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1690,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4911:15:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4886:40:5"
											},
											{
												"assignments": [
													1693
												],
												"declarations": [
													{
														"constant": false,
														"id": 1693,
														"mutability": "mutable",
														"name": "tokenIndex",
														"nameLocation": "4944:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 1737,
														"src": "4936:18:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1692,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4936:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1697,
												"initialValue": {
													"baseExpression": {
														"id": 1694,
														"name": "_ownedTokensIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1451,
														"src": "4957:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 1696,
													"indexExpression": {
														"id": 1695,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1683,
														"src": "4975:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4957:26:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4936:47:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1700,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1698,
														"name": "tokenIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1693,
														"src": "5087:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1699,
														"name": "lastTokenIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1687,
														"src": "5101:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5087:28:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1724,
												"nodeType": "IfStatement",
												"src": "5083:323:5",
												"trueBody": {
													"id": 1723,
													"nodeType": "Block",
													"src": "5117:289:5",
													"statements": [
														{
															"assignments": [
																1702
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1702,
																	"mutability": "mutable",
																	"name": "lastTokenId",
																	"nameLocation": "5139:11:5",
																	"nodeType": "VariableDeclaration",
																	"scope": 1723,
																	"src": "5131:19:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1701,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5131:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1708,
															"initialValue": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 1703,
																		"name": "_ownedTokens",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1447,
																		"src": "5153:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(uint256 => uint256))"
																		}
																	},
																	"id": 1705,
																	"indexExpression": {
																		"id": 1704,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1681,
																		"src": "5166:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5153:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1707,
																"indexExpression": {
																	"id": 1706,
																	"name": "lastTokenIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1687,
																	"src": "5172:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5153:34:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5131:56:5"
														},
														{
															"expression": {
																"id": 1715,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1709,
																			"name": "_ownedTokens",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1447,
																			"src": "5202:12:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(uint256 => uint256))"
																			}
																		},
																		"id": 1712,
																		"indexExpression": {
																			"id": 1710,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1681,
																			"src": "5215:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5202:18:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 1713,
																	"indexExpression": {
																		"id": 1711,
																		"name": "tokenIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1693,
																		"src": "5221:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "5202:30:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1714,
																	"name": "lastTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1702,
																	"src": "5235:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5202:44:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1716,
															"nodeType": "ExpressionStatement",
															"src": "5202:44:5"
														},
														{
															"expression": {
																"id": 1721,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1717,
																		"name": "_ownedTokensIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1451,
																		"src": "5318:17:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 1719,
																	"indexExpression": {
																		"id": 1718,
																		"name": "lastTokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1702,
																		"src": "5336:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "5318:30:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1720,
																	"name": "tokenIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1693,
																	"src": "5351:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5318:43:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1722,
															"nodeType": "ExpressionStatement",
															"src": "5318:43:5"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "5492:33:5",
													"subExpression": {
														"baseExpression": {
															"id": 1725,
															"name": "_ownedTokensIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1451,
															"src": "5499:17:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1727,
														"indexExpression": {
															"id": 1726,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1683,
															"src": "5517:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5499:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1729,
												"nodeType": "ExpressionStatement",
												"src": "5492:33:5"
											},
											{
												"expression": {
													"id": 1735,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "5535:41:5",
													"subExpression": {
														"baseExpression": {
															"baseExpression": {
																"id": 1730,
																"name": "_ownedTokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1447,
																"src": "5542:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(uint256 => uint256))"
																}
															},
															"id": 1732,
															"indexExpression": {
																"id": 1731,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1681,
																"src": "5555:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5542:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1734,
														"indexExpression": {
															"id": 1733,
															"name": "lastTokenIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1687,
															"src": "5561:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5542:34:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1736,
												"nodeType": "ExpressionStatement",
												"src": "5535:41:5"
											}
										]
									},
									"documentation": {
										"id": 1679,
										"nodeType": "StructuredDocumentation",
										"src": "4013:606:5",
										"text": " @dev Private function to remove a token from this extension's ownership-tracking data structures. Note that\n while the token is not assigned a new owner, the `_ownedTokensIndex` mapping is _not_ updated: this allows for\n gas optimizations e.g. when performing a transfer operation (avoiding double writes).\n This has O(1) time complexity, but alters the order of the _ownedTokens array.\n @param from address representing the previous owner of the given token ID\n @param tokenId uint256 ID of the token to be removed from the tokens list of the given address"
									},
									"id": 1738,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_removeTokenFromOwnerEnumeration",
									"nameLocation": "4633:32:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1681,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4674:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1738,
												"src": "4666:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4666:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1683,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4688:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1738,
												"src": "4680:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1682,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4680:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4665:31:5"
									},
									"returnParameters": {
										"id": 1685,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4705:0:5"
									},
									"scope": 1812,
									"src": "4624:959:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1785,
										"nodeType": "Block",
										"src": "5942:990:5",
										"statements": [
											{
												"assignments": [
													1745
												],
												"declarations": [
													{
														"constant": false,
														"id": 1745,
														"mutability": "mutable",
														"name": "lastTokenIndex",
														"nameLocation": "6128:14:5",
														"nodeType": "VariableDeclaration",
														"scope": 1785,
														"src": "6120:22:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1744,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6120:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1750,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1749,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1746,
															"name": "_allTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1454,
															"src": "6145:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 1747,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6156:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6145:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"hexValue": "31",
														"id": 1748,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6165:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "6145:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6120:46:5"
											},
											{
												"assignments": [
													1752
												],
												"declarations": [
													{
														"constant": false,
														"id": 1752,
														"mutability": "mutable",
														"name": "tokenIndex",
														"nameLocation": "6184:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 1785,
														"src": "6176:18:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1751,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6176:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1756,
												"initialValue": {
													"baseExpression": {
														"id": 1753,
														"name": "_allTokensIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1458,
														"src": "6197:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 1755,
													"indexExpression": {
														"id": 1754,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1741,
														"src": "6213:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6197:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6176:45:5"
											},
											{
												"assignments": [
													1758
												],
												"declarations": [
													{
														"constant": false,
														"id": 1758,
														"mutability": "mutable",
														"name": "lastTokenId",
														"nameLocation": "6551:11:5",
														"nodeType": "VariableDeclaration",
														"scope": 1785,
														"src": "6543:19:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1757,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6543:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1762,
												"initialValue": {
													"baseExpression": {
														"id": 1759,
														"name": "_allTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1454,
														"src": "6565:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"id": 1761,
													"indexExpression": {
														"id": 1760,
														"name": "lastTokenIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1745,
														"src": "6576:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6565:26:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6543:48:5"
											},
											{
												"expression": {
													"id": 1767,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1763,
															"name": "_allTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1454,
															"src": "6602:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 1765,
														"indexExpression": {
															"id": 1764,
															"name": "tokenIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1752,
															"src": "6613:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6602:22:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1766,
														"name": "lastTokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1758,
														"src": "6627:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6602:36:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1768,
												"nodeType": "ExpressionStatement",
												"src": "6602:36:5"
											},
											{
												"expression": {
													"id": 1773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1769,
															"name": "_allTokensIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1458,
															"src": "6706:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1771,
														"indexExpression": {
															"id": 1770,
															"name": "lastTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1758,
															"src": "6722:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6706:28:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1772,
														"name": "tokenIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1752,
														"src": "6737:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6706:41:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1774,
												"nodeType": "ExpressionStatement",
												"src": "6706:41:5"
											},
											{
												"expression": {
													"id": 1778,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "6868:31:5",
													"subExpression": {
														"baseExpression": {
															"id": 1775,
															"name": "_allTokensIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1458,
															"src": "6875:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1777,
														"indexExpression": {
															"id": 1776,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1741,
															"src": "6891:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6875:24:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1779,
												"nodeType": "ExpressionStatement",
												"src": "6868:31:5"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1780,
															"name": "_allTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1454,
															"src": "6909:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 1782,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6920:3:5",
														"memberName": "pop",
														"nodeType": "MemberAccess",
														"src": "6909:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
															"typeString": "function (uint256[] storage pointer)"
														}
													},
													"id": 1783,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6909:16:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1784,
												"nodeType": "ExpressionStatement",
												"src": "6909:16:5"
											}
										]
									},
									"documentation": {
										"id": 1739,
										"nodeType": "StructuredDocumentation",
										"src": "5589:277:5",
										"text": " @dev Private function to remove a token from this extension's token tracking data structures.\n This has O(1) time complexity, but alters the order of the _allTokens array.\n @param tokenId uint256 ID of the token to be removed from the tokens list"
									},
									"id": 1786,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_removeTokenFromAllTokensEnumeration",
									"nameLocation": "5880:36:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1742,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1741,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5925:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1786,
												"src": "5917:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1740,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5917:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5916:17:5"
									},
									"returnParameters": {
										"id": 1743,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5942:0:5"
									},
									"scope": 1812,
									"src": "5871:1061:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"baseFunctions": [
										760
									],
									"body": {
										"id": 1810,
										"nodeType": "Block",
										"src": "7134:149:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													},
													"id": 1797,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1795,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1791,
														"src": "7148:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1796,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7157:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7148:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1802,
												"nodeType": "IfStatement",
												"src": "7144:84:5",
												"trueBody": {
													"id": 1801,
													"nodeType": "Block",
													"src": "7160:68:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1798,
																	"name": "ERC721EnumerableForbiddenBatchMint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1468,
																	"src": "7181:34:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1799,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7181:36:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1800,
															"nodeType": "RevertStatement",
															"src": "7174:43:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1806,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1789,
															"src": "7260:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1807,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1791,
															"src": "7269:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														],
														"expression": {
															"id": 1803,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "7237:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC721Enumerable_$1812_$",
																"typeString": "type(contract super ERC721Enumerable)"
															}
														},
														"id": 1805,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7243:16:5",
														"memberName": "_increaseBalance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 760,
														"src": "7237:22:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint128_$returns$__$",
															"typeString": "function (address,uint128)"
														}
													},
													"id": 1808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7237:39:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1809,
												"nodeType": "ExpressionStatement",
												"src": "7237:39:5"
											}
										]
									},
									"documentation": {
										"id": 1787,
										"nodeType": "StructuredDocumentation",
										"src": "6938:106:5",
										"text": " See {ERC721-_increaseBalance}. We need that to account tokens that were minted in batch"
									},
									"id": 1811,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_increaseBalance",
									"nameLocation": "7058:16:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1793,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7125:8:5"
									},
									"parameters": {
										"id": 1792,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1789,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7083:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1811,
												"src": "7075:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1788,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7075:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1791,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7100:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1811,
												"src": "7092:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1790,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "7092:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7074:33:5"
									},
									"returnParameters": {
										"id": 1794,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7134:0:5"
									},
									"scope": 1812,
									"src": "7049:234:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1813,
							"src": "708:6577:5",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236,
								1465,
								1468
							],
							"usedEvents": [
								1309,
								1318,
								1327
							]
						}
					],
					"src": "128:7158:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
					"exportedSymbols": {
						"IERC721": [
							1410
						],
						"IERC721Enumerable": [
							1844
						]
					},
					"id": 1845,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1814,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "129:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "../IERC721.sol",
							"id": 1816,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1845,
							"sourceUnit": 1411,
							"src": "155:39:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1815,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1410,
										"src": "163:7:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1818,
										"name": "IERC721",
										"nameLocations": [
											"364:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1410,
										"src": "364:7:6"
									},
									"id": 1819,
									"nodeType": "InheritanceSpecifier",
									"src": "364:7:6"
								}
							],
							"canonicalName": "IERC721Enumerable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1817,
								"nodeType": "StructuredDocumentation",
								"src": "196:136:6",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 1844,
							"linearizedBaseContracts": [
								1844,
								1410,
								2193
							],
							"name": "IERC721Enumerable",
							"nameLocation": "343:17:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1820,
										"nodeType": "StructuredDocumentation",
										"src": "378:82:6",
										"text": " @dev Returns the total amount of tokens stored by the contract."
									},
									"functionSelector": "18160ddd",
									"id": 1825,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "474:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1821,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "485:2:6"
									},
									"returnParameters": {
										"id": 1824,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1823,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1825,
												"src": "511:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1822,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "511:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "510:9:6"
									},
									"scope": 1844,
									"src": "465:55:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1826,
										"nodeType": "StructuredDocumentation",
										"src": "526:171:6",
										"text": " @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n Use along with {balanceOf} to enumerate all of ``owner``'s tokens."
									},
									"functionSelector": "2f745c59",
									"id": 1835,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenOfOwnerByIndex",
									"nameLocation": "711:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1831,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1828,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "739:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1835,
												"src": "731:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1827,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "731:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1830,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "754:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1835,
												"src": "746:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1829,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "746:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "730:30:6"
									},
									"returnParameters": {
										"id": 1834,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1833,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1835,
												"src": "784:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1832,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "783:9:6"
									},
									"scope": 1844,
									"src": "702:91:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1836,
										"nodeType": "StructuredDocumentation",
										"src": "799:164:6",
										"text": " @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\n Use along with {totalSupply} to enumerate all tokens."
									},
									"functionSelector": "4f6ccce7",
									"id": 1843,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenByIndex",
									"nameLocation": "977:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1839,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1838,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "998:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1843,
												"src": "990:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1837,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "990:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "989:15:6"
									},
									"returnParameters": {
										"id": 1842,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1841,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1843,
												"src": "1028:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1840,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1028:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1027:9:6"
									},
									"scope": 1844,
									"src": "968:69:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1845,
							"src": "333:706:6",
							"usedErrors": [],
							"usedEvents": [
								1309,
								1318,
								1327
							]
						}
					],
					"src": "129:911:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
					"exportedSymbols": {
						"IERC721": [
							1410
						],
						"IERC721Metadata": [
							1872
						]
					},
					"id": 1873,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1846,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "127:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "../IERC721.sol",
							"id": 1848,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1873,
							"sourceUnit": 1411,
							"src": "153:39:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1847,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1410,
										"src": "161:7:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1850,
										"name": "IERC721",
										"nameLocations": [
											"357:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1410,
										"src": "357:7:7"
									},
									"id": 1851,
									"nodeType": "InheritanceSpecifier",
									"src": "357:7:7"
								}
							],
							"canonicalName": "IERC721Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1849,
								"nodeType": "StructuredDocumentation",
								"src": "194:133:7",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 1872,
							"linearizedBaseContracts": [
								1872,
								1410,
								2193
							],
							"name": "IERC721Metadata",
							"nameLocation": "338:15:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1852,
										"nodeType": "StructuredDocumentation",
										"src": "371:58:7",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 1857,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "443:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1853,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "447:2:7"
									},
									"returnParameters": {
										"id": 1856,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1855,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1857,
												"src": "473:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1854,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "473:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "472:15:7"
									},
									"scope": 1872,
									"src": "434:54:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1858,
										"nodeType": "StructuredDocumentation",
										"src": "494:60:7",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 1863,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "568:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1859,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "574:2:7"
									},
									"returnParameters": {
										"id": 1862,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1861,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1863,
												"src": "600:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1860,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "600:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "599:15:7"
									},
									"scope": 1872,
									"src": "559:56:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1864,
										"nodeType": "StructuredDocumentation",
										"src": "621:90:7",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 1871,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "725:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1867,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1866,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "742:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1871,
												"src": "734:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1865,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "734:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "733:17:7"
									},
									"returnParameters": {
										"id": 1870,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1869,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1871,
												"src": "774:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1868,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "774:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "773:15:7"
									},
									"scope": 1872,
									"src": "716:73:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1873,
							"src": "328:463:7",
							"usedErrors": [],
							"usedEvents": [
								1309,
								1318,
								1327
							]
						}
					],
					"src": "127:665:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1902
						]
					},
					"id": 1903,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1874,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:8"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1875,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:8",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1902,
							"linearizedBaseContracts": [
								1902
							],
							"name": "Context",
							"nameLocation": "642:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1883,
										"nodeType": "Block",
										"src": "718:34:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1880,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1881,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:8",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1879,
												"id": 1882,
												"nodeType": "Return",
												"src": "728:17:8"
											}
										]
									},
									"id": 1884,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1876,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:8"
									},
									"returnParameters": {
										"id": 1879,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1878,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1884,
												"src": "709:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1877,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:8"
									},
									"scope": 1902,
									"src": "656:96:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1892,
										"nodeType": "Block",
										"src": "825:32:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1889,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1890,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:8",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1888,
												"id": 1891,
												"nodeType": "Return",
												"src": "835:15:8"
											}
										]
									},
									"id": 1893,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1885,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:8"
									},
									"returnParameters": {
										"id": 1888,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1887,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1893,
												"src": "809:14:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1886,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:8"
									},
									"scope": 1902,
									"src": "758:99:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1900,
										"nodeType": "Block",
										"src": "935:25:8",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1898,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1897,
												"id": 1899,
												"nodeType": "Return",
												"src": "945:8:8"
											}
										]
									},
									"id": 1901,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1894,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:8"
									},
									"returnParameters": {
										"id": 1897,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1896,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1901,
												"src": "926:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1895,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:8"
									},
									"scope": 1902,
									"src": "863:97:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1903,
							"src": "624:338:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							3247
						],
						"SignedMath": [
							3352
						],
						"Strings": [
							2157
						]
					},
					"id": 2158,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1904,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 1906,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2158,
							"sourceUnit": 3248,
							"src": "127:37:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1905,
										"name": "Math",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3247,
										"src": "135:4:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 1908,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2158,
							"sourceUnit": 3353,
							"src": "165:49:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1907,
										"name": "SignedMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3352,
										"src": "173:10:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1909,
								"nodeType": "StructuredDocumentation",
								"src": "216:34:9",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 2157,
							"linearizedBaseContracts": [
								2157
							],
							"name": "Strings",
							"nameLocation": "259:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1912,
									"mutability": "constant",
									"name": "HEX_DIGITS",
									"nameLocation": "298:10:9",
									"nodeType": "VariableDeclaration",
									"scope": 2157,
									"src": "273:56:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1910,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "273:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1911,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "311:18:9",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1915,
									"mutability": "constant",
									"name": "ADDRESS_LENGTH",
									"nameLocation": "358:14:9",
									"nodeType": "VariableDeclaration",
									"scope": 2157,
									"src": "335:42:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1913,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "335:5:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 1914,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "375:2:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 1916,
										"nodeType": "StructuredDocumentation",
										"src": "384:81:9",
										"text": " @dev The `value` string doesn't fit in the specified `length`."
									},
									"errorSelector": "e22e27eb",
									"id": 1922,
									"name": "StringsInsufficientHexLength",
									"nameLocation": "476:28:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1921,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1918,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "513:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1922,
												"src": "505:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1917,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "505:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1920,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "528:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1922,
												"src": "520:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1919,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "520:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "504:31:9"
									},
									"src": "470:66:9"
								},
								{
									"body": {
										"id": 1969,
										"nodeType": "Block",
										"src": "708:627:9",
										"statements": [
											{
												"id": 1968,
												"nodeType": "UncheckedBlock",
												"src": "718:611:9",
												"statements": [
													{
														"assignments": [
															1931
														],
														"declarations": [
															{
																"constant": false,
																"id": 1931,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "750:6:9",
																"nodeType": "VariableDeclaration",
																"scope": 1968,
																"src": "742:14:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1930,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "742:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1938,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1937,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1934,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1925,
																		"src": "770:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1932,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3247,
																		"src": "759:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$3247_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1933,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "764:5:9",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3067,
																	"src": "759:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 1935,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "759:17:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1936,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "779:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "759:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "742:38:9"
													},
													{
														"assignments": [
															1940
														],
														"declarations": [
															{
																"constant": false,
																"id": 1940,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "808:6:9",
																"nodeType": "VariableDeclaration",
																"scope": 1968,
																"src": "794:20:9",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 1939,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "794:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1945,
														"initialValue": {
															"arguments": [
																{
																	"id": 1943,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1931,
																	"src": "828:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1942,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "817:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 1941,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "821:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 1944,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "817:18:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "794:41:9"
													},
													{
														"assignments": [
															1947
														],
														"declarations": [
															{
																"constant": false,
																"id": 1947,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "857:3:9",
																"nodeType": "VariableDeclaration",
																"scope": 1968,
																"src": "849:11:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1946,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "849:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1948,
														"nodeType": "VariableDeclarationStatement",
														"src": "849:11:9"
													},
													{
														"AST": {
															"nativeSrc": "930:67:9",
															"nodeType": "YulBlock",
															"src": "930:67:9",
															"statements": [
																{
																	"nativeSrc": "948:35:9",
																	"nodeType": "YulAssignment",
																	"src": "948:35:9",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nativeSrc": "959:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "959:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "971:2:9",
																						"nodeType": "YulLiteral",
																						"src": "971:2:9",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "975:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "975:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "967:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "967:3:9"
																				},
																				"nativeSrc": "967:15:9",
																				"nodeType": "YulFunctionCall",
																				"src": "967:15:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "955:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "955:3:9"
																		},
																		"nativeSrc": "955:28:9",
																		"nodeType": "YulFunctionCall",
																		"src": "955:28:9"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nativeSrc": "948:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "948:3:9"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 1940,
																"isOffset": false,
																"isSlot": false,
																"src": "959:6:9",
																"valueSize": 1
															},
															{
																"declaration": 1931,
																"isOffset": false,
																"isSlot": false,
																"src": "975:6:9",
																"valueSize": 1
															},
															{
																"declaration": 1947,
																"isOffset": false,
																"isSlot": false,
																"src": "948:3:9",
																"valueSize": 1
															}
														],
														"id": 1949,
														"nodeType": "InlineAssembly",
														"src": "921:76:9"
													},
													{
														"body": {
															"id": 1964,
															"nodeType": "Block",
															"src": "1023:269:9",
															"statements": [
																{
																	"expression": {
																		"id": 1952,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "1041:5:9",
																		"subExpression": {
																			"id": 1951,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1947,
																			"src": "1041:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1953,
																	"nodeType": "ExpressionStatement",
																	"src": "1041:5:9"
																},
																{
																	"AST": {
																		"nativeSrc": "1124:86:9",
																		"nodeType": "YulBlock",
																		"src": "1124:86:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "1154:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "1154:3:9"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "1168:5:9",
																											"nodeType": "YulIdentifier",
																											"src": "1168:5:9"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "1175:2:9",
																											"nodeType": "YulLiteral",
																											"src": "1175:2:9",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nativeSrc": "1164:3:9",
																										"nodeType": "YulIdentifier",
																										"src": "1164:3:9"
																									},
																									"nativeSrc": "1164:14:9",
																									"nodeType": "YulFunctionCall",
																									"src": "1164:14:9"
																								},
																								{
																									"name": "HEX_DIGITS",
																									"nativeSrc": "1180:10:9",
																									"nodeType": "YulIdentifier",
																									"src": "1180:10:9"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nativeSrc": "1159:4:9",
																								"nodeType": "YulIdentifier",
																								"src": "1159:4:9"
																							},
																							"nativeSrc": "1159:32:9",
																							"nodeType": "YulFunctionCall",
																							"src": "1159:32:9"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "1146:7:9",
																						"nodeType": "YulIdentifier",
																						"src": "1146:7:9"
																					},
																					"nativeSrc": "1146:46:9",
																					"nodeType": "YulFunctionCall",
																					"src": "1146:46:9"
																				},
																				"nativeSrc": "1146:46:9",
																				"nodeType": "YulExpressionStatement",
																				"src": "1146:46:9"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "shanghai",
																	"externalReferences": [
																		{
																			"declaration": 1912,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1180:10:9",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1947,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1154:3:9",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1925,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1168:5:9",
																			"valueSize": 1
																		}
																	],
																	"id": 1954,
																	"nodeType": "InlineAssembly",
																	"src": "1115:95:9"
																},
																{
																	"expression": {
																		"id": 1957,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1955,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1925,
																			"src": "1227:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 1956,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1236:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1227:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1958,
																	"nodeType": "ExpressionStatement",
																	"src": "1227:11:9"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1961,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1959,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1925,
																			"src": "1260:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1960,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1269:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1260:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1963,
																	"nodeType": "IfStatement",
																	"src": "1256:21:9",
																	"trueBody": {
																		"id": 1962,
																		"nodeType": "Break",
																		"src": "1272:5:9"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 1950,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1017:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 1965,
														"nodeType": "WhileStatement",
														"src": "1010:282:9"
													},
													{
														"expression": {
															"id": 1966,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1940,
															"src": "1312:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1929,
														"id": 1967,
														"nodeType": "Return",
														"src": "1305:13:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1923,
										"nodeType": "StructuredDocumentation",
										"src": "542:90:9",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1970,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "646:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1926,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1925,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "663:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1970,
												"src": "655:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1924,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:15:9"
									},
									"returnParameters": {
										"id": 1929,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1928,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1970,
												"src": "693:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1927,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "693:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:15:9"
									},
									"scope": 2157,
									"src": "637:698:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1995,
										"nodeType": "Block",
										"src": "1511:92:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1983,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1981,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1973,
																	"src": "1542:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1982,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1550:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1542:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"hexValue": "",
																"id": 1985,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1560:2:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															},
															"id": 1986,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "1542:20:9",
															"trueExpression": {
																"hexValue": "2d",
																"id": 1984,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1554:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																	"typeString": "literal_string \"-\""
																},
																"value": "-"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1990,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1973,
																			"src": "1588:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"expression": {
																			"id": 1988,
																			"name": "SignedMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3352,
																			"src": "1573:10:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SignedMath_$3352_$",
																				"typeString": "type(library SignedMath)"
																			}
																		},
																		"id": 1989,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1584:3:9",
																		"memberName": "abs",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3351,
																		"src": "1573:14:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																			"typeString": "function (int256) pure returns (uint256)"
																		}
																	},
																	"id": 1991,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1573:21:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1987,
																"name": "toString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1970,
																"src": "1564:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 1992,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1564:31:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 1979,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1528:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 1978,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "1528:6:9",
																"typeDescriptions": {}
															}
														},
														"id": 1980,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1535:6:9",
														"memberName": "concat",
														"nodeType": "MemberAccess",
														"src": "1528:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 1993,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1528:68:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1977,
												"id": 1994,
												"nodeType": "Return",
												"src": "1521:75:9"
											}
										]
									},
									"documentation": {
										"id": 1971,
										"nodeType": "StructuredDocumentation",
										"src": "1341:89:9",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 1996,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringSigned",
									"nameLocation": "1444:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1973,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1466:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1996,
												"src": "1459:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1972,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1459:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1458:14:9"
									},
									"returnParameters": {
										"id": 1977,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1976,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1996,
												"src": "1496:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1975,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1496:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:15:9"
									},
									"scope": 2157,
									"src": "1435:168:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2015,
										"nodeType": "Block",
										"src": "1782:100:9",
										"statements": [
											{
												"id": 2014,
												"nodeType": "UncheckedBlock",
												"src": "1792:84:9",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 2005,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1999,
																	"src": "1835:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2011,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 2008,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1999,
																				"src": "1854:5:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 2006,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3247,
																				"src": "1842:4:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$3247_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 2007,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1847:6:9",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 3189,
																			"src": "1842:11:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 2009,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1842:18:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 2010,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1863:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1842:22:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2004,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2016,
																	2099,
																	2119
																],
																"referencedDeclaration": 2099,
																"src": "1823:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 2012,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1823:42:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 2003,
														"id": 2013,
														"nodeType": "Return",
														"src": "1816:49:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1997,
										"nodeType": "StructuredDocumentation",
										"src": "1609:94:9",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 2016,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1717:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1999,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1737:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2016,
												"src": "1729:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1998,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1729:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1728:15:9"
									},
									"returnParameters": {
										"id": 2003,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2002,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2016,
												"src": "1767:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2001,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1767:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1766:15:9"
									},
									"scope": 2157,
									"src": "1708:174:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2098,
										"nodeType": "Block",
										"src": "2095:435:9",
										"statements": [
											{
												"assignments": [
													2027
												],
												"declarations": [
													{
														"constant": false,
														"id": 2027,
														"mutability": "mutable",
														"name": "localValue",
														"nameLocation": "2113:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 2098,
														"src": "2105:18:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2026,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2105:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2029,
												"initialValue": {
													"id": 2028,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2019,
													"src": "2126:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2105:26:9"
											},
											{
												"assignments": [
													2031
												],
												"declarations": [
													{
														"constant": false,
														"id": 2031,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "2154:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 2098,
														"src": "2141:19:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2030,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2141:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2040,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2038,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2036,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2034,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2173:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2035,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2021,
																	"src": "2177:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2173:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 2037,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2186:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "2173:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2033,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2163:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 2032,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2167:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 2039,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2163:25:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2141:47:9"
											},
											{
												"expression": {
													"id": 2045,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2041,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2031,
															"src": "2198:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2043,
														"indexExpression": {
															"hexValue": "30",
															"id": 2042,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2205:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2198:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2044,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2210:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "2198:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 2046,
												"nodeType": "ExpressionStatement",
												"src": "2198:15:9"
											},
											{
												"expression": {
													"id": 2051,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2047,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2031,
															"src": "2223:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2049,
														"indexExpression": {
															"hexValue": "31",
															"id": 2048,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2230:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2223:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 2050,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2235:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2223:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 2052,
												"nodeType": "ExpressionStatement",
												"src": "2223:15:9"
											},
											{
												"body": {
													"id": 2081,
													"nodeType": "Block",
													"src": "2293:95:9",
													"statements": [
														{
															"expression": {
																"id": 2075,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2067,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2031,
																		"src": "2307:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 2069,
																	"indexExpression": {
																		"id": 2068,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2054,
																		"src": "2314:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2307:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 2070,
																		"name": "HEX_DIGITS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1912,
																		"src": "2319:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 2074,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2073,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2071,
																			"name": "localValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2027,
																			"src": "2330:10:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 2072,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2343:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2330:16:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2319:28:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2307:40:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 2076,
															"nodeType": "ExpressionStatement",
															"src": "2307:40:9"
														},
														{
															"expression": {
																"id": 2079,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2077,
																	"name": "localValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2027,
																	"src": "2361:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 2078,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2376:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2361:16:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2080,
															"nodeType": "ExpressionStatement",
															"src": "2361:16:9"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2063,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2061,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2054,
														"src": "2281:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 2062,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2285:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2281:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2082,
												"initializationExpression": {
													"assignments": [
														2054
													],
													"declarations": [
														{
															"constant": false,
															"id": 2054,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2261:1:9",
															"nodeType": "VariableDeclaration",
															"scope": 2082,
															"src": "2253:9:9",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2053,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2253:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2060,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2059,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2057,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 2055,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2265:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2056,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2021,
																"src": "2269:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2265:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 2058,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2278:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2265:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2253:26:9"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 2065,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2288:3:9",
														"subExpression": {
															"id": 2064,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2054,
															"src": "2290:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2066,
													"nodeType": "ExpressionStatement",
													"src": "2288:3:9"
												},
												"nodeType": "ForStatement",
												"src": "2248:140:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2085,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2083,
														"name": "localValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2027,
														"src": "2401:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2084,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2415:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2401:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2092,
												"nodeType": "IfStatement",
												"src": "2397:96:9",
												"trueBody": {
													"id": 2091,
													"nodeType": "Block",
													"src": "2418:75:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2087,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2019,
																		"src": "2468:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 2088,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2021,
																		"src": "2475:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2086,
																	"name": "StringsInsufficientHexLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1922,
																	"src": "2439:28:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 2089,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2439:43:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2090,
															"nodeType": "RevertStatement",
															"src": "2432:50:9"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2095,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2031,
															"src": "2516:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2094,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2509:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 2093,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2509:6:9",
															"typeDescriptions": {}
														}
													},
													"id": 2096,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2509:14:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2025,
												"id": 2097,
												"nodeType": "Return",
												"src": "2502:21:9"
											}
										]
									},
									"documentation": {
										"id": 2017,
										"nodeType": "StructuredDocumentation",
										"src": "1888:112:9",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 2099,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2014:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2022,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2019,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2034:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2099,
												"src": "2026:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2018,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2026:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2021,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "2049:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 2099,
												"src": "2041:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2020,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2041:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2025:31:9"
									},
									"returnParameters": {
										"id": 2025,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2024,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2099,
												"src": "2080:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2023,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2080:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2079:15:9"
									},
									"scope": 2157,
									"src": "2005:525:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2118,
										"nodeType": "Block",
										"src": "2762:75:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2112,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2102,
																			"src": "2807:4:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 2111,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2799:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 2110,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2799:7:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2113,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2799:13:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 2109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2791:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2108,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2791:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 2114,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2791:22:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2115,
															"name": "ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1915,
															"src": "2815:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 2107,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2016,
															2099,
															2119
														],
														"referencedDeclaration": 2099,
														"src": "2779:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 2116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2779:51:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2106,
												"id": 2117,
												"nodeType": "Return",
												"src": "2772:58:9"
											}
										]
									},
									"documentation": {
										"id": 2100,
										"nodeType": "StructuredDocumentation",
										"src": "2536:148:9",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."
									},
									"id": 2119,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2698:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2102,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2718:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 2119,
												"src": "2710:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2101,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2710:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2709:14:9"
									},
									"returnParameters": {
										"id": 2106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2105,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2119,
												"src": "2747:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2104,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2747:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2746:15:9"
									},
									"scope": 2157,
									"src": "2689:148:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2155,
										"nodeType": "Block",
										"src": "2992:104:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2139,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 2131,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2122,
																		"src": "3015:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2130,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3009:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 2129,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3009:5:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 2132,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3009:8:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 2133,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3018:6:9",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3009:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 2136,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2124,
																		"src": "3034:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2135,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3028:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 2134,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3028:5:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 2137,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3028:8:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 2138,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3037:6:9",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3028:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3009:34:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 2152,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2143,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2122,
																			"src": "3063:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 2142,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3057:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 2141,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3057:5:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2144,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3057:8:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 2140,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3047:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 2145,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3047:19:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2149,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2124,
																			"src": "3086:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 2148,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3080:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 2147,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3080:5:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2150,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3080:8:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 2146,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3070:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 2151,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3070:19:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "3047:42:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3009:80:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2128,
												"id": 2154,
												"nodeType": "Return",
												"src": "3002:87:9"
											}
										]
									},
									"documentation": {
										"id": 2120,
										"nodeType": "StructuredDocumentation",
										"src": "2843:66:9",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 2156,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2923:5:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2122,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2943:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2156,
												"src": "2929:15:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2121,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2929:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2124,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2960:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2156,
												"src": "2946:15:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2123,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2946:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2928:34:9"
									},
									"returnParameters": {
										"id": 2128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2127,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2156,
												"src": "2986:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2126,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2986:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2985:6:9"
									},
									"scope": 2157,
									"src": "2914:182:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2158,
							"src": "251:2847:9",
							"usedErrors": [
								1922
							],
							"usedEvents": []
						}
					],
					"src": "101:2998:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							2181
						],
						"IERC165": [
							2193
						]
					},
					"id": 2182,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2159,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 2161,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2182,
							"sourceUnit": 2194,
							"src": "140:38:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2160,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2193,
										"src": "148:7:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2163,
										"name": "IERC165",
										"nameLocations": [
											"687:7:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2193,
										"src": "687:7:10"
									},
									"id": 2164,
									"nodeType": "InheritanceSpecifier",
									"src": "687:7:10"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2162,
								"nodeType": "StructuredDocumentation",
								"src": "180:478:10",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 2181,
							"linearizedBaseContracts": [
								2181,
								2193
							],
							"name": "ERC165",
							"nameLocation": "677:6:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										2192
									],
									"body": {
										"id": 2179,
										"nodeType": "Block",
										"src": "844:64:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 2177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2172,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2167,
														"src": "861:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2174,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2193,
																	"src": "881:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$2193_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$2193_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 2173,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "876:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2175,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "876:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$2193",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 2176,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "890:11:10",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "876:25:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "861:40:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2171,
												"id": 2178,
												"nodeType": "Return",
												"src": "854:47:10"
											}
										]
									},
									"documentation": {
										"id": 2165,
										"nodeType": "StructuredDocumentation",
										"src": "701:56:10",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 2180,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "771:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2167,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "796:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 2180,
												"src": "789:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2166,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:20:10"
									},
									"returnParameters": {
										"id": 2171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2170,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2180,
												"src": "838:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2169,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "838:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "837:6:10"
									},
									"scope": 2181,
									"src": "762:146:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 2182,
							"src": "659:251:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:797:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							2193
						]
					},
					"id": 2194,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2183,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2184,
								"nodeType": "StructuredDocumentation",
								"src": "141:279:11",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 2193,
							"linearizedBaseContracts": [
								2193
							],
							"name": "IERC165",
							"nameLocation": "431:7:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2185,
										"nodeType": "StructuredDocumentation",
										"src": "445:340:11",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 2192,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "799:17:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2187,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "824:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 2192,
												"src": "817:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2186,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "817:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:20:11"
									},
									"returnParameters": {
										"id": 2191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2192,
												"src": "860:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "860:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:6:11"
									},
									"scope": 2193,
									"src": "790:76:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2194,
							"src": "421:447:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:754:11"
				},
				"id": 11
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							3247
						]
					},
					"id": 3248,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2195,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2196,
								"nodeType": "StructuredDocumentation",
								"src": "129:73:12",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 3247,
							"linearizedBaseContracts": [
								3247
							],
							"name": "Math",
							"nameLocation": "211:4:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2197,
										"nodeType": "StructuredDocumentation",
										"src": "222:50:12",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 2199,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "283:20:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2198,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "303:2:12"
									},
									"src": "277:29:12"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 2204,
									"members": [
										{
											"id": 2200,
											"name": "Floor",
											"nameLocation": "336:5:12",
											"nodeType": "EnumValue",
											"src": "336:5:12"
										},
										{
											"id": 2201,
											"name": "Ceil",
											"nameLocation": "379:4:12",
											"nodeType": "EnumValue",
											"src": "379:4:12"
										},
										{
											"id": 2202,
											"name": "Trunc",
											"nameLocation": "421:5:12",
											"nodeType": "EnumValue",
											"src": "421:5:12"
										},
										{
											"id": 2203,
											"name": "Expand",
											"nameLocation": "451:6:12",
											"nodeType": "EnumValue",
											"src": "451:6:12"
										}
									],
									"name": "Rounding",
									"nameLocation": "317:8:12",
									"nodeType": "EnumDefinition",
									"src": "312:169:12"
								},
								{
									"body": {
										"id": 2235,
										"nodeType": "Block",
										"src": "661:140:12",
										"statements": [
											{
												"id": 2234,
												"nodeType": "UncheckedBlock",
												"src": "671:124:12",
												"statements": [
													{
														"assignments": [
															2217
														],
														"declarations": [
															{
																"constant": false,
																"id": 2217,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "703:1:12",
																"nodeType": "VariableDeclaration",
																"scope": 2234,
																"src": "695:9:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2216,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "695:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2221,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2220,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2218,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2207,
																"src": "707:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 2219,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2209,
																"src": "711:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "707:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "695:17:12"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2224,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2222,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2217,
																"src": "730:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 2223,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2207,
																"src": "734:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "730:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2229,
														"nodeType": "IfStatement",
														"src": "726:28:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2225,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "745:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2226,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "752:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2227,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "744:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2215,
															"id": 2228,
															"nodeType": "Return",
															"src": "737:17:12"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2230,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "776:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2231,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2217,
																	"src": "782:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2232,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "775:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2215,
														"id": 2233,
														"nodeType": "Return",
														"src": "768:16:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2205,
										"nodeType": "StructuredDocumentation",
										"src": "487:93:12",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 2236,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "594:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2207,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2236,
												"src": "601:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2209,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2236,
												"src": "612:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2208,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:12"
									},
									"returnParameters": {
										"id": 2215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2212,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2236,
												"src": "646:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2211,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "646:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2214,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2236,
												"src": "652:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2213,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:15:12"
									},
									"scope": 3247,
									"src": "585:216:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2263,
										"nodeType": "Block",
										"src": "984:113:12",
										"statements": [
											{
												"id": 2262,
												"nodeType": "UncheckedBlock",
												"src": "994:97:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2250,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2248,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2241,
																"src": "1022:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 2249,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2239,
																"src": "1026:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1022:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2255,
														"nodeType": "IfStatement",
														"src": "1018:28:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2251,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1037:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2252,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1044:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2253,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1036:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2247,
															"id": 2254,
															"nodeType": "Return",
															"src": "1029:17:12"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2256,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1068:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2259,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2257,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2239,
																		"src": "1074:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 2258,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2241,
																		"src": "1078:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1074:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2260,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1067:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2247,
														"id": 2261,
														"nodeType": "Return",
														"src": "1060:20:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2237,
										"nodeType": "StructuredDocumentation",
										"src": "807:96:12",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 2264,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "917:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2239,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "932:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2264,
												"src": "924:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2238,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "924:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2241,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "943:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2264,
												"src": "935:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2240,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:22:12"
									},
									"returnParameters": {
										"id": 2247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2244,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2264,
												"src": "969:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2243,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "969:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2246,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2264,
												"src": "975:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "975:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "968:15:12"
									},
									"scope": 3247,
									"src": "908:189:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2305,
										"nodeType": "Block",
										"src": "1283:417:12",
										"statements": [
											{
												"id": 2304,
												"nodeType": "UncheckedBlock",
												"src": "1293:401:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2278,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2276,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2267,
																"src": "1551:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2277,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1556:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1551:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2283,
														"nodeType": "IfStatement",
														"src": "1547:28:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 2279,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1567:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 2280,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1573:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2281,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1566:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2275,
															"id": 2282,
															"nodeType": "Return",
															"src": "1559:16:12"
														}
													},
													{
														"assignments": [
															2285
														],
														"declarations": [
															{
																"constant": false,
																"id": 2285,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1597:1:12",
																"nodeType": "VariableDeclaration",
																"scope": 2304,
																"src": "1589:9:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2284,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1589:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2289,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2288,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2286,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2267,
																"src": "1601:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2287,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2269,
																"src": "1605:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1601:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1589:17:12"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2294,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2292,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2290,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2285,
																	"src": "1624:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2291,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2267,
																	"src": "1628:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1624:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 2293,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2269,
																"src": "1633:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1624:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2299,
														"nodeType": "IfStatement",
														"src": "1620:33:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2295,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1644:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2296,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1651:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2297,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1643:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2275,
															"id": 2298,
															"nodeType": "Return",
															"src": "1636:17:12"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2300,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1675:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2301,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2285,
																	"src": "1681:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2302,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1674:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2275,
														"id": 2303,
														"nodeType": "Return",
														"src": "1667:16:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2265,
										"nodeType": "StructuredDocumentation",
										"src": "1103:99:12",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 2306,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1216:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2267,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1231:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2306,
												"src": "1223:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2266,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2269,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1242:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2306,
												"src": "1234:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:22:12"
									},
									"returnParameters": {
										"id": 2275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2272,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2306,
												"src": "1268:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2271,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2274,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2306,
												"src": "1274:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2273,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:15:12"
									},
									"scope": 3247,
									"src": "1207:493:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2333,
										"nodeType": "Block",
										"src": "1887:114:12",
										"statements": [
											{
												"id": 2332,
												"nodeType": "UncheckedBlock",
												"src": "1897:98:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2320,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2318,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2311,
																"src": "1925:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2319,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1930:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1925:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2325,
														"nodeType": "IfStatement",
														"src": "1921:29:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2321,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1941:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2322,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1948:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2323,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1940:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2317,
															"id": 2324,
															"nodeType": "Return",
															"src": "1933:17:12"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2326,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1972:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2329,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2327,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2309,
																		"src": "1978:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2328,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2311,
																		"src": "1982:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1978:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2330,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1971:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2317,
														"id": 2331,
														"nodeType": "Return",
														"src": "1964:20:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2307,
										"nodeType": "StructuredDocumentation",
										"src": "1706:100:12",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 2334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1820:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2309,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1835:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2334,
												"src": "1827:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1827:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2311,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1846:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2334,
												"src": "1838:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2310,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1838:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1826:22:12"
									},
									"returnParameters": {
										"id": 2317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2314,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2334,
												"src": "1872:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2313,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1872:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2316,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2334,
												"src": "1878:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2315,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1878:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1871:15:12"
									},
									"scope": 3247,
									"src": "1811:190:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2361,
										"nodeType": "Block",
										"src": "2198:114:12",
										"statements": [
											{
												"id": 2360,
												"nodeType": "UncheckedBlock",
												"src": "2208:98:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2348,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2346,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2339,
																"src": "2236:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2347,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2241:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2236:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2353,
														"nodeType": "IfStatement",
														"src": "2232:29:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2349,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2252:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2350,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2259:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2351,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2251:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2345,
															"id": 2352,
															"nodeType": "Return",
															"src": "2244:17:12"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2354,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2283:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2357,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2355,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2337,
																		"src": "2289:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 2356,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2339,
																		"src": "2293:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2289:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2358,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2282:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2345,
														"id": 2359,
														"nodeType": "Return",
														"src": "2275:20:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2335,
										"nodeType": "StructuredDocumentation",
										"src": "2007:110:12",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 2362,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2131:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2337,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2146:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2362,
												"src": "2138:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2336,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2138:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2339,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2157:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2362,
												"src": "2149:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2338,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2137:22:12"
									},
									"returnParameters": {
										"id": 2345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2342,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2362,
												"src": "2183:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2341,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2183:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2344,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2362,
												"src": "2189:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2343,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2189:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:15:12"
									},
									"scope": 3247,
									"src": "2122:190:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2379,
										"nodeType": "Block",
										"src": "2449:37:12",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2374,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2372,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2365,
															"src": "2466:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2373,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2367,
															"src": "2470:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2466:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2376,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2367,
														"src": "2478:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2377,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2466:13:12",
													"trueExpression": {
														"id": 2375,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2365,
														"src": "2474:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2371,
												"id": 2378,
												"nodeType": "Return",
												"src": "2459:20:12"
											}
										]
									},
									"documentation": {
										"id": 2363,
										"nodeType": "StructuredDocumentation",
										"src": "2318:59:12",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 2380,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "2391:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2365,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2403:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2380,
												"src": "2395:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2364,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2367,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2414:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2380,
												"src": "2406:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2406:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:22:12"
									},
									"returnParameters": {
										"id": 2371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2370,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2380,
												"src": "2440:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2369,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:9:12"
									},
									"scope": 3247,
									"src": "2382:104:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2397,
										"nodeType": "Block",
										"src": "2624:37:12",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2392,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2390,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2383,
															"src": "2641:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2391,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2385,
															"src": "2645:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2641:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2394,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2385,
														"src": "2653:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2395,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2641:13:12",
													"trueExpression": {
														"id": 2393,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2383,
														"src": "2649:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2389,
												"id": 2396,
												"nodeType": "Return",
												"src": "2634:20:12"
											}
										]
									},
									"documentation": {
										"id": 2381,
										"nodeType": "StructuredDocumentation",
										"src": "2492:60:12",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 2398,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2566:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2383,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2578:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2398,
												"src": "2570:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2382,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2385,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2589:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2398,
												"src": "2581:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2384,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2581:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:22:12"
									},
									"returnParameters": {
										"id": 2389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2388,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2398,
												"src": "2615:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2615:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2614:9:12"
									},
									"scope": 3247,
									"src": "2557:104:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2420,
										"nodeType": "Block",
										"src": "2845:82:12",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2418,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2408,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2401,
																	"src": "2900:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2409,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2403,
																	"src": "2904:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2900:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2411,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2899:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2417,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2414,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2412,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2401,
																		"src": "2910:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 2413,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2403,
																		"src": "2914:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2910:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2415,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2909:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 2416,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2919:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2909:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2899:21:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2407,
												"id": 2419,
												"nodeType": "Return",
												"src": "2892:28:12"
											}
										]
									},
									"documentation": {
										"id": 2399,
										"nodeType": "StructuredDocumentation",
										"src": "2667:102:12",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 2421,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2783:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2401,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2799:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2421,
												"src": "2791:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2400,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2791:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2403,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2810:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2421,
												"src": "2802:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2402,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2802:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2790:22:12"
									},
									"returnParameters": {
										"id": 2407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2406,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2421,
												"src": "2836:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2405,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2836:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2835:9:12"
									},
									"scope": 3247,
									"src": "2774:153:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2454,
										"nodeType": "Block",
										"src": "3219:260:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2431,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2426,
														"src": "3233:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2432,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3238:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3233:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2439,
												"nodeType": "IfStatement",
												"src": "3229:127:12",
												"trueBody": {
													"id": 2438,
													"nodeType": "Block",
													"src": "3241:115:12",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2436,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2434,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2424,
																	"src": "3340:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2435,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2426,
																	"src": "3344:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3340:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 2430,
															"id": 2437,
															"nodeType": "Return",
															"src": "3333:12:12"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2442,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2440,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2424,
															"src": "3444:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 2441,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3449:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3444:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2451,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2449,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2446,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2444,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2424,
																			"src": "3458:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2445,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3462:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3458:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2447,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3457:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 2448,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2426,
																"src": "3467:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3457:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 2450,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3471:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3457:15:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2452,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3444:28:12",
													"trueExpression": {
														"hexValue": "30",
														"id": 2443,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3453:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2430,
												"id": 2453,
												"nodeType": "Return",
												"src": "3437:35:12"
											}
										]
									},
									"documentation": {
										"id": 2422,
										"nodeType": "StructuredDocumentation",
										"src": "2933:210:12",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 2455,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3157:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2424,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3173:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2455,
												"src": "3165:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2423,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3165:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2426,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3184:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2455,
												"src": "3176:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2425,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3176:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3164:22:12"
									},
									"returnParameters": {
										"id": 2430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2429,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2455,
												"src": "3210:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3209:9:12"
									},
									"scope": 3247,
									"src": "3148:331:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2580,
										"nodeType": "Block",
										"src": "3901:4018:12",
										"statements": [
											{
												"id": 2579,
												"nodeType": "UncheckedBlock",
												"src": "3911:4002:12",
												"statements": [
													{
														"assignments": [
															2468
														],
														"declarations": [
															{
																"constant": false,
																"id": 2468,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "4240:5:12",
																"nodeType": "VariableDeclaration",
																"scope": 2579,
																"src": "4232:13:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2467,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4232:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2472,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2471,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2469,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2458,
																"src": "4248:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2470,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2460,
																"src": "4252:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4248:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4232:21:12"
													},
													{
														"assignments": [
															2474
														],
														"declarations": [
															{
																"constant": false,
																"id": 2474,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "4320:5:12",
																"nodeType": "VariableDeclaration",
																"scope": 2579,
																"src": "4312:13:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2473,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4312:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2475,
														"nodeType": "VariableDeclarationStatement",
														"src": "4312:13:12"
													},
													{
														"AST": {
															"nativeSrc": "4392:122:12",
															"nodeType": "YulBlock",
															"src": "4392:122:12",
															"statements": [
																{
																	"nativeSrc": "4410:30:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4410:30:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "4427:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "4427:1:12"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "4430:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "4430:1:12"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4437:1:12",
																						"nodeType": "YulLiteral",
																						"src": "4437:1:12",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4433:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4433:3:12"
																				},
																				"nativeSrc": "4433:6:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4433:6:12"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "4420:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "4420:6:12"
																		},
																		"nativeSrc": "4420:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4420:20:12"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "4414:2:12",
																			"nodeType": "YulTypedName",
																			"src": "4414:2:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4457:43:12",
																	"nodeType": "YulAssignment",
																	"src": "4457:43:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4474:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "4474:2:12"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4478:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "4478:5:12"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4470:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4470:3:12"
																				},
																				"nativeSrc": "4470:14:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4470:14:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4489:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "4489:2:12"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4493:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "4493:5:12"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4486:2:12",
																					"nodeType": "YulIdentifier",
																					"src": "4486:2:12"
																				},
																				"nativeSrc": "4486:13:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4486:13:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4466:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4466:3:12"
																		},
																		"nativeSrc": "4466:34:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4466:34:12"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "4457:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "4457:5:12"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2468,
																"isOffset": false,
																"isSlot": false,
																"src": "4478:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2468,
																"isOffset": false,
																"isSlot": false,
																"src": "4493:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2474,
																"isOffset": false,
																"isSlot": false,
																"src": "4457:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2458,
																"isOffset": false,
																"isSlot": false,
																"src": "4427:1:12",
																"valueSize": 1
															},
															{
																"declaration": 2460,
																"isOffset": false,
																"isSlot": false,
																"src": "4430:1:12",
																"valueSize": 1
															}
														],
														"id": 2476,
														"nodeType": "InlineAssembly",
														"src": "4383:131:12"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2479,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2477,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2474,
																"src": "4595:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2478,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4604:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4595:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2485,
														"nodeType": "IfStatement",
														"src": "4591:368:12",
														"trueBody": {
															"id": 2484,
															"nodeType": "Block",
															"src": "4607:352:12",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2482,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2480,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2468,
																			"src": "4925:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 2481,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2462,
																			"src": "4933:11:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4925:19:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 2466,
																	"id": 2483,
																	"nodeType": "Return",
																	"src": "4918:26:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2488,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2486,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2462,
																"src": "5065:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2487,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2474,
																"src": "5080:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5065:20:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2493,
														"nodeType": "IfStatement",
														"src": "5061:88:12",
														"trueBody": {
															"id": 2492,
															"nodeType": "Block",
															"src": "5087:62:12",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2489,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2199,
																			"src": "5112:20:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 2490,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5112:22:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 2491,
																	"nodeType": "RevertStatement",
																	"src": "5105:29:12"
																}
															]
														}
													},
													{
														"assignments": [
															2495
														],
														"declarations": [
															{
																"constant": false,
																"id": 2495,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "5412:9:12",
																"nodeType": "VariableDeclaration",
																"scope": 2579,
																"src": "5404:17:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2494,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5404:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2496,
														"nodeType": "VariableDeclarationStatement",
														"src": "5404:17:12"
													},
													{
														"AST": {
															"nativeSrc": "5444:291:12",
															"nodeType": "YulBlock",
															"src": "5444:291:12",
															"statements": [
																{
																	"nativeSrc": "5513:38:12",
																	"nodeType": "YulAssignment",
																	"src": "5513:38:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "5533:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "5533:1:12"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "5536:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "5536:1:12"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "5539:11:12",
																				"nodeType": "YulIdentifier",
																				"src": "5539:11:12"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "5526:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "5526:6:12"
																		},
																		"nativeSrc": "5526:25:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5526:25:12"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "5513:9:12",
																			"nodeType": "YulIdentifier",
																			"src": "5513:9:12"
																		}
																	]
																},
																{
																	"nativeSrc": "5633:41:12",
																	"nodeType": "YulAssignment",
																	"src": "5633:41:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "5646:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "5646:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "5656:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "5656:9:12"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "5667:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "5667:5:12"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "5653:2:12",
																					"nodeType": "YulIdentifier",
																					"src": "5653:2:12"
																				},
																				"nativeSrc": "5653:20:12",
																				"nodeType": "YulFunctionCall",
																				"src": "5653:20:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5642:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5642:3:12"
																		},
																		"nativeSrc": "5642:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5642:32:12"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "5633:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "5633:5:12"
																		}
																	]
																},
																{
																	"nativeSrc": "5691:30:12",
																	"nodeType": "YulAssignment",
																	"src": "5691:30:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "5704:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "5704:5:12"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "5711:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5711:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5700:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5700:3:12"
																		},
																		"nativeSrc": "5700:21:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5700:21:12"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "5691:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "5691:5:12"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2462,
																"isOffset": false,
																"isSlot": false,
																"src": "5539:11:12",
																"valueSize": 1
															},
															{
																"declaration": 2468,
																"isOffset": false,
																"isSlot": false,
																"src": "5667:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2468,
																"isOffset": false,
																"isSlot": false,
																"src": "5691:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2468,
																"isOffset": false,
																"isSlot": false,
																"src": "5704:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2474,
																"isOffset": false,
																"isSlot": false,
																"src": "5633:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2474,
																"isOffset": false,
																"isSlot": false,
																"src": "5646:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2495,
																"isOffset": false,
																"isSlot": false,
																"src": "5513:9:12",
																"valueSize": 1
															},
															{
																"declaration": 2495,
																"isOffset": false,
																"isSlot": false,
																"src": "5656:9:12",
																"valueSize": 1
															},
															{
																"declaration": 2495,
																"isOffset": false,
																"isSlot": false,
																"src": "5711:9:12",
																"valueSize": 1
															},
															{
																"declaration": 2458,
																"isOffset": false,
																"isSlot": false,
																"src": "5533:1:12",
																"valueSize": 1
															},
															{
																"declaration": 2460,
																"isOffset": false,
																"isSlot": false,
																"src": "5536:1:12",
																"valueSize": 1
															}
														],
														"id": 2497,
														"nodeType": "InlineAssembly",
														"src": "5435:300:12"
													},
													{
														"assignments": [
															2499
														],
														"declarations": [
															{
																"constant": false,
																"id": 2499,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "5947:4:12",
																"nodeType": "VariableDeclaration",
																"scope": 2579,
																"src": "5939:12:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2498,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5939:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2506,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2505,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2500,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2462,
																"src": "5954:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2503,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 2501,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5969:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 2502,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2462,
																			"src": "5973:11:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5969:15:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2504,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5968:17:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5954:31:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5939:46:12"
													},
													{
														"AST": {
															"nativeSrc": "6008:362:12",
															"nodeType": "YulBlock",
															"src": "6008:362:12",
															"statements": [
																{
																	"nativeSrc": "6073:37:12",
																	"nodeType": "YulAssignment",
																	"src": "6073:37:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "6092:11:12",
																				"nodeType": "YulIdentifier",
																				"src": "6092:11:12"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6105:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "6105:4:12"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6088:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6088:3:12"
																		},
																		"nativeSrc": "6088:22:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6088:22:12"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "6073:11:12",
																			"nodeType": "YulIdentifier",
																			"src": "6073:11:12"
																		}
																	]
																},
																{
																	"nativeSrc": "6177:25:12",
																	"nodeType": "YulAssignment",
																	"src": "6177:25:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "6190:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "6190:5:12"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6197:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "6197:4:12"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6186:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6186:3:12"
																		},
																		"nativeSrc": "6186:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6186:16:12"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "6177:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "6177:5:12"
																		}
																	]
																},
																{
																	"nativeSrc": "6317:39:12",
																	"nodeType": "YulAssignment",
																	"src": "6317:39:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6337:1:12",
																								"nodeType": "YulLiteral",
																								"src": "6337:1:12",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "6340:4:12",
																								"nodeType": "YulIdentifier",
																								"src": "6340:4:12"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "6333:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "6333:3:12"
																						},
																						"nativeSrc": "6333:12:12",
																						"nodeType": "YulFunctionCall",
																						"src": "6333:12:12"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "6347:4:12",
																						"nodeType": "YulIdentifier",
																						"src": "6347:4:12"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "6329:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "6329:3:12"
																				},
																				"nativeSrc": "6329:23:12",
																				"nodeType": "YulFunctionCall",
																				"src": "6329:23:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6354:1:12",
																				"nodeType": "YulLiteral",
																				"src": "6354:1:12",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6325:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6325:3:12"
																		},
																		"nativeSrc": "6325:31:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6325:31:12"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "6317:4:12",
																			"nodeType": "YulIdentifier",
																			"src": "6317:4:12"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2462,
																"isOffset": false,
																"isSlot": false,
																"src": "6073:11:12",
																"valueSize": 1
															},
															{
																"declaration": 2462,
																"isOffset": false,
																"isSlot": false,
																"src": "6092:11:12",
																"valueSize": 1
															},
															{
																"declaration": 2468,
																"isOffset": false,
																"isSlot": false,
																"src": "6177:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2468,
																"isOffset": false,
																"isSlot": false,
																"src": "6190:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2499,
																"isOffset": false,
																"isSlot": false,
																"src": "6105:4:12",
																"valueSize": 1
															},
															{
																"declaration": 2499,
																"isOffset": false,
																"isSlot": false,
																"src": "6197:4:12",
																"valueSize": 1
															},
															{
																"declaration": 2499,
																"isOffset": false,
																"isSlot": false,
																"src": "6317:4:12",
																"valueSize": 1
															},
															{
																"declaration": 2499,
																"isOffset": false,
																"isSlot": false,
																"src": "6340:4:12",
																"valueSize": 1
															},
															{
																"declaration": 2499,
																"isOffset": false,
																"isSlot": false,
																"src": "6347:4:12",
																"valueSize": 1
															}
														],
														"id": 2507,
														"nodeType": "InlineAssembly",
														"src": "5999:371:12"
													},
													{
														"expression": {
															"id": 2512,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2508,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2468,
																"src": "6436:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2511,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2509,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2474,
																	"src": "6445:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2510,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2499,
																	"src": "6453:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6445:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6436:21:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2513,
														"nodeType": "ExpressionStatement",
														"src": "6436:21:12"
													},
													{
														"assignments": [
															2515
														],
														"declarations": [
															{
																"constant": false,
																"id": 2515,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "6783:7:12",
																"nodeType": "VariableDeclaration",
																"scope": 2579,
																"src": "6775:15:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2514,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6775:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2522,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2521,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2518,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 2516,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6794:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 2517,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2462,
																			"src": "6798:11:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6794:15:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2519,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6793:17:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 2520,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6813:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "6793:21:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6775:39:12"
													},
													{
														"expression": {
															"id": 2529,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2523,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2515,
																"src": "7031:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2528,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2524,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7042:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2527,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2525,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2462,
																		"src": "7046:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2526,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2515,
																		"src": "7060:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7046:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7042:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7031:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2530,
														"nodeType": "ExpressionStatement",
														"src": "7031:36:12"
													},
													{
														"expression": {
															"id": 2537,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2531,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2515,
																"src": "7100:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2536,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2532,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7111:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2535,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2533,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2462,
																		"src": "7115:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2534,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2515,
																		"src": "7129:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7115:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7111:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7100:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2538,
														"nodeType": "ExpressionStatement",
														"src": "7100:36:12"
													},
													{
														"expression": {
															"id": 2545,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2539,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2515,
																"src": "7170:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2544,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2540,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7181:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2543,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2541,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2462,
																		"src": "7185:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2542,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2515,
																		"src": "7199:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7185:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7181:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7170:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2546,
														"nodeType": "ExpressionStatement",
														"src": "7170:36:12"
													},
													{
														"expression": {
															"id": 2553,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2547,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2515,
																"src": "7240:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2552,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2548,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7251:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2551,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2549,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2462,
																		"src": "7255:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2550,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2515,
																		"src": "7269:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7255:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7251:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7240:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2554,
														"nodeType": "ExpressionStatement",
														"src": "7240:36:12"
													},
													{
														"expression": {
															"id": 2561,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2555,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2515,
																"src": "7310:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2560,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2556,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7321:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2559,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2557,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2462,
																		"src": "7325:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2558,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2515,
																		"src": "7339:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7325:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7321:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7310:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2562,
														"nodeType": "ExpressionStatement",
														"src": "7310:36:12"
													},
													{
														"expression": {
															"id": 2569,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2563,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2515,
																"src": "7381:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2568,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2564,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7392:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2567,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2565,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2462,
																		"src": "7396:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2566,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2515,
																		"src": "7410:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7396:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7392:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7381:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2570,
														"nodeType": "ExpressionStatement",
														"src": "7381:36:12"
													},
													{
														"expression": {
															"id": 2575,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2571,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2465,
																"src": "7851:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2574,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2572,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2468,
																	"src": "7860:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2573,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2515,
																	"src": "7868:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7860:15:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7851:24:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2576,
														"nodeType": "ExpressionStatement",
														"src": "7851:24:12"
													},
													{
														"expression": {
															"id": 2577,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2465,
															"src": "7896:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2466,
														"id": 2578,
														"nodeType": "Return",
														"src": "7889:13:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2456,
										"nodeType": "StructuredDocumentation",
										"src": "3485:313:12",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 2581,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "3812:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2458,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3827:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2581,
												"src": "3819:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2457,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3819:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2460,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3838:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2581,
												"src": "3830:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2459,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3830:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2462,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "3849:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 2581,
												"src": "3841:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2461,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3841:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:43:12"
									},
									"returnParameters": {
										"id": 2466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2465,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3893:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2581,
												"src": "3885:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2464,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3885:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3884:16:12"
									},
									"scope": 3247,
									"src": "3803:4116:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2623,
										"nodeType": "Block",
										"src": "8161:192:12",
										"statements": [
											{
												"assignments": [
													2597
												],
												"declarations": [
													{
														"constant": false,
														"id": 2597,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8179:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 2623,
														"src": "8171:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2596,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8171:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2603,
												"initialValue": {
													"arguments": [
														{
															"id": 2599,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2584,
															"src": "8195:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2600,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2586,
															"src": "8198:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2601,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2588,
															"src": "8201:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2598,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2581,
															2624
														],
														"referencedDeclaration": 2581,
														"src": "8188:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8188:25:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8171:42:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2614,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2605,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2591,
																"src": "8244:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$2204",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$2204",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 2604,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3246,
															"src": "8227:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2204_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 2606,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8227:26:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2613,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2608,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2584,
																	"src": "8264:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2609,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2586,
																	"src": "8267:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2610,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2588,
																	"src": "8270:11:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2607,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "8257:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2611,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8257:25:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2612,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8285:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8257:29:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8227:59:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2620,
												"nodeType": "IfStatement",
												"src": "8223:101:12",
												"trueBody": {
													"id": 2619,
													"nodeType": "Block",
													"src": "8288:36:12",
													"statements": [
														{
															"expression": {
																"id": 2617,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2615,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2597,
																	"src": "8302:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 2616,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8312:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8302:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2618,
															"nodeType": "ExpressionStatement",
															"src": "8302:11:12"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2621,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2597,
													"src": "8340:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2595,
												"id": 2622,
												"nodeType": "Return",
												"src": "8333:13:12"
											}
										]
									},
									"documentation": {
										"id": 2582,
										"nodeType": "StructuredDocumentation",
										"src": "7925:121:12",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 2624,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "8060:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2592,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2584,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8075:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2624,
												"src": "8067:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2583,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8067:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2586,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8086:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2624,
												"src": "8078:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2585,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8078:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2588,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "8097:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 2624,
												"src": "8089:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2587,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8089:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2591,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8119:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2624,
												"src": "8110:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2204",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2590,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2589,
														"name": "Rounding",
														"nameLocations": [
															"8110:8:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2204,
														"src": "8110:8:12"
													},
													"referencedDeclaration": 2204,
													"src": "8110:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2204",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8066:62:12"
									},
									"returnParameters": {
										"id": 2595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2594,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2624,
												"src": "8152:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2593,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8152:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8151:9:12"
									},
									"scope": 3247,
									"src": "8051:302:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2735,
										"nodeType": "Block",
										"src": "8644:1585:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2634,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2632,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2627,
														"src": "8658:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2633,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8663:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8658:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2638,
												"nodeType": "IfStatement",
												"src": "8654:45:12",
												"trueBody": {
													"id": 2637,
													"nodeType": "Block",
													"src": "8666:33:12",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 2635,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8687:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2631,
															"id": 2636,
															"nodeType": "Return",
															"src": "8680:8:12"
														}
													]
												}
											},
											{
												"assignments": [
													2640
												],
												"declarations": [
													{
														"constant": false,
														"id": 2640,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9386:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 2735,
														"src": "9378:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2639,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9378:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2649,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 2641,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9395:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2646,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2643,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2627,
																			"src": "9406:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2642,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			2903,
																			2938
																		],
																		"referencedDeclaration": 2903,
																		"src": "9401:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2644,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9401:7:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2645,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9412:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9401:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2647,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9400:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9395:19:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9378:36:12"
											},
											{
												"id": 2734,
												"nodeType": "UncheckedBlock",
												"src": "9815:408:12",
												"statements": [
													{
														"expression": {
															"id": 2659,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2650,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2640,
																"src": "9839:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2651,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2640,
																				"src": "9849:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2654,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2652,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2627,
																					"src": "9858:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2653,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2640,
																					"src": "9862:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9858:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9849:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2656,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9848:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2657,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9873:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9848:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9839:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2660,
														"nodeType": "ExpressionStatement",
														"src": "9839:35:12"
													},
													{
														"expression": {
															"id": 2670,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2661,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2640,
																"src": "9888:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2669,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2666,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2662,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2640,
																				"src": "9898:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2665,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2663,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2627,
																					"src": "9907:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2664,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2640,
																					"src": "9911:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9907:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9898:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2667,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9897:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2668,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9922:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9897:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9888:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2671,
														"nodeType": "ExpressionStatement",
														"src": "9888:35:12"
													},
													{
														"expression": {
															"id": 2681,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2672,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2640,
																"src": "9937:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2680,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2677,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2673,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2640,
																				"src": "9947:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2676,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2674,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2627,
																					"src": "9956:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2675,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2640,
																					"src": "9960:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9956:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9947:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2678,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9946:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2679,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9971:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9946:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9937:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2682,
														"nodeType": "ExpressionStatement",
														"src": "9937:35:12"
													},
													{
														"expression": {
															"id": 2692,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2683,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2640,
																"src": "9986:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2691,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2688,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2684,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2640,
																				"src": "9996:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2687,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2685,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2627,
																					"src": "10005:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2686,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2640,
																					"src": "10009:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10005:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9996:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2689,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9995:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2690,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10020:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9995:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9986:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2693,
														"nodeType": "ExpressionStatement",
														"src": "9986:35:12"
													},
													{
														"expression": {
															"id": 2703,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2694,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2640,
																"src": "10035:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2702,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2699,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2695,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2640,
																				"src": "10045:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2698,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2696,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2627,
																					"src": "10054:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2697,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2640,
																					"src": "10058:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10054:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10045:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2700,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10044:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2701,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10069:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10044:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10035:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2704,
														"nodeType": "ExpressionStatement",
														"src": "10035:35:12"
													},
													{
														"expression": {
															"id": 2714,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2705,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2640,
																"src": "10084:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2706,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2640,
																				"src": "10094:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2709,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2707,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2627,
																					"src": "10103:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2708,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2640,
																					"src": "10107:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10103:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10094:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2711,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10093:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2712,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10118:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10093:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10084:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2715,
														"nodeType": "ExpressionStatement",
														"src": "10084:35:12"
													},
													{
														"expression": {
															"id": 2725,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2716,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2640,
																"src": "10133:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2724,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2721,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2717,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2640,
																				"src": "10143:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2720,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2718,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2627,
																					"src": "10152:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2719,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2640,
																					"src": "10156:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10152:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10143:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2722,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10142:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2723,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10142:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10133:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2726,
														"nodeType": "ExpressionStatement",
														"src": "10133:35:12"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 2728,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2640,
																	"src": "10193:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2731,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2729,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2627,
																		"src": "10201:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2730,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2640,
																		"src": "10205:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10201:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2727,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2398,
																"src": "10189:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2732,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10189:23:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2631,
														"id": 2733,
														"nodeType": "Return",
														"src": "10182:30:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2625,
										"nodeType": "StructuredDocumentation",
										"src": "8359:223:12",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 2736,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8596:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2628,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2627,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8609:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2736,
												"src": "8601:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2626,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8601:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8600:11:12"
									},
									"returnParameters": {
										"id": 2631,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2630,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2736,
												"src": "8635:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2629,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8635:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8634:9:12"
									},
									"scope": 3247,
									"src": "8587:1642:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2770,
										"nodeType": "Block",
										"src": "10405:164:12",
										"statements": [
											{
												"id": 2769,
												"nodeType": "UncheckedBlock",
												"src": "10415:148:12",
												"statements": [
													{
														"assignments": [
															2748
														],
														"declarations": [
															{
																"constant": false,
																"id": 2748,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "10447:6:12",
																"nodeType": "VariableDeclaration",
																"scope": 2769,
																"src": "10439:14:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2747,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10439:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2752,
														"initialValue": {
															"arguments": [
																{
																	"id": 2750,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2739,
																	"src": "10461:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2749,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2736,
																	2771
																],
																"referencedDeclaration": 2736,
																"src": "10456:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2751,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10456:7:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10439:24:12"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2767,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2753,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2748,
																"src": "10484:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2762,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2755,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2742,
																						"src": "10511:8:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2204",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2204",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2754,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3246,
																					"src": "10494:16:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2204_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2756,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10494:26:12",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2761,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2759,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2757,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2748,
																						"src": "10524:6:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 2758,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2748,
																						"src": "10533:6:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10524:15:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2760,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2739,
																					"src": "10542:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10524:19:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "10494:49:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2764,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10550:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2765,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "10494:57:12",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2763,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10546:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2766,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10493:59:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "10484:68:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2746,
														"id": 2768,
														"nodeType": "Return",
														"src": "10477:75:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2737,
										"nodeType": "StructuredDocumentation",
										"src": "10235:89:12",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 2771,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "10338:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2743,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2739,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10351:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2771,
												"src": "10343:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2738,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10343:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2742,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10363:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2771,
												"src": "10354:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2204",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2741,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2740,
														"name": "Rounding",
														"nameLocations": [
															"10354:8:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2204,
														"src": "10354:8:12"
													},
													"referencedDeclaration": 2204,
													"src": "10354:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2204",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10342:30:12"
									},
									"returnParameters": {
										"id": 2746,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2745,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2771,
												"src": "10396:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2744,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10396:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10395:9:12"
									},
									"scope": 3247,
									"src": "10329:240:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2902,
										"nodeType": "Block",
										"src": "10760:922:12",
										"statements": [
											{
												"assignments": [
													2780
												],
												"declarations": [
													{
														"constant": false,
														"id": 2780,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10778:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 2902,
														"src": "10770:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2779,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10770:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2782,
												"initialValue": {
													"hexValue": "30",
													"id": 2781,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10787:1:12",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10770:18:12"
											},
											{
												"id": 2899,
												"nodeType": "UncheckedBlock",
												"src": "10798:855:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2787,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2785,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2783,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2774,
																	"src": "10826:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2784,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10835:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "10826:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2786,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10841:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10826:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2797,
														"nodeType": "IfStatement",
														"src": "10822:99:12",
														"trueBody": {
															"id": 2796,
															"nodeType": "Block",
															"src": "10844:77:12",
															"statements": [
																{
																	"expression": {
																		"id": 2790,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2788,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2774,
																			"src": "10862:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2789,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10872:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10862:13:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2791,
																	"nodeType": "ExpressionStatement",
																	"src": "10862:13:12"
																},
																{
																	"expression": {
																		"id": 2794,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2792,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2780,
																			"src": "10893:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2793,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10903:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10893:13:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2795,
																	"nodeType": "ExpressionStatement",
																	"src": "10893:13:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2802,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2800,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2798,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2774,
																	"src": "10938:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2799,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10947:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10938:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2801,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10952:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10938:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2812,
														"nodeType": "IfStatement",
														"src": "10934:96:12",
														"trueBody": {
															"id": 2811,
															"nodeType": "Block",
															"src": "10955:75:12",
															"statements": [
																{
																	"expression": {
																		"id": 2805,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2803,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2774,
																			"src": "10973:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2804,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10983:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10973:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2806,
																	"nodeType": "ExpressionStatement",
																	"src": "10973:12:12"
																},
																{
																	"expression": {
																		"id": 2809,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2807,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2780,
																			"src": "11003:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2808,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11013:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11003:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2810,
																	"nodeType": "ExpressionStatement",
																	"src": "11003:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2817,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2815,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2813,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2774,
																	"src": "11047:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2814,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11056:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11047:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2816,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11061:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11047:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2827,
														"nodeType": "IfStatement",
														"src": "11043:96:12",
														"trueBody": {
															"id": 2826,
															"nodeType": "Block",
															"src": "11064:75:12",
															"statements": [
																{
																	"expression": {
																		"id": 2820,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2818,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2774,
																			"src": "11082:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2819,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11092:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11082:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2821,
																	"nodeType": "ExpressionStatement",
																	"src": "11082:12:12"
																},
																{
																	"expression": {
																		"id": 2824,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2822,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2780,
																			"src": "11112:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2823,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11122:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11112:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2825,
																	"nodeType": "ExpressionStatement",
																	"src": "11112:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2832,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2830,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2828,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2774,
																	"src": "11156:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2829,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11165:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11156:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2831,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11170:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11156:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2842,
														"nodeType": "IfStatement",
														"src": "11152:96:12",
														"trueBody": {
															"id": 2841,
															"nodeType": "Block",
															"src": "11173:75:12",
															"statements": [
																{
																	"expression": {
																		"id": 2835,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2833,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2774,
																			"src": "11191:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2834,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11201:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11191:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2836,
																	"nodeType": "ExpressionStatement",
																	"src": "11191:12:12"
																},
																{
																	"expression": {
																		"id": 2839,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2837,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2780,
																			"src": "11221:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2838,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11231:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11221:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2840,
																	"nodeType": "ExpressionStatement",
																	"src": "11221:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2847,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2845,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2843,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2774,
																	"src": "11265:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2844,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11274:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11265:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2846,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11278:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11265:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2857,
														"nodeType": "IfStatement",
														"src": "11261:93:12",
														"trueBody": {
															"id": 2856,
															"nodeType": "Block",
															"src": "11281:73:12",
															"statements": [
																{
																	"expression": {
																		"id": 2850,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2848,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2774,
																			"src": "11299:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2849,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11309:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11299:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2851,
																	"nodeType": "ExpressionStatement",
																	"src": "11299:11:12"
																},
																{
																	"expression": {
																		"id": 2854,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2852,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2780,
																			"src": "11328:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2853,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11338:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11328:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2855,
																	"nodeType": "ExpressionStatement",
																	"src": "11328:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2862,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2860,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2858,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2774,
																	"src": "11371:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2859,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11380:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "11371:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2861,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11384:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11371:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2872,
														"nodeType": "IfStatement",
														"src": "11367:93:12",
														"trueBody": {
															"id": 2871,
															"nodeType": "Block",
															"src": "11387:73:12",
															"statements": [
																{
																	"expression": {
																		"id": 2865,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2863,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2774,
																			"src": "11405:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2864,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11415:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11405:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2866,
																	"nodeType": "ExpressionStatement",
																	"src": "11405:11:12"
																},
																{
																	"expression": {
																		"id": 2869,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2867,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2780,
																			"src": "11434:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2868,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11444:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11434:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2870,
																	"nodeType": "ExpressionStatement",
																	"src": "11434:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2877,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2875,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2873,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2774,
																	"src": "11477:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2874,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11486:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "11477:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2876,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11490:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11477:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2887,
														"nodeType": "IfStatement",
														"src": "11473:93:12",
														"trueBody": {
															"id": 2886,
															"nodeType": "Block",
															"src": "11493:73:12",
															"statements": [
																{
																	"expression": {
																		"id": 2880,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2878,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2774,
																			"src": "11511:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2879,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11521:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11511:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2881,
																	"nodeType": "ExpressionStatement",
																	"src": "11511:11:12"
																},
																{
																	"expression": {
																		"id": 2884,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2882,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2780,
																			"src": "11540:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2883,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11550:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11540:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2885,
																	"nodeType": "ExpressionStatement",
																	"src": "11540:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2892,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2890,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2888,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2774,
																	"src": "11583:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2889,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11592:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11583:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2891,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11596:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11583:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2898,
														"nodeType": "IfStatement",
														"src": "11579:64:12",
														"trueBody": {
															"id": 2897,
															"nodeType": "Block",
															"src": "11599:44:12",
															"statements": [
																{
																	"expression": {
																		"id": 2895,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2893,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2780,
																			"src": "11617:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2894,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11627:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11617:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2896,
																	"nodeType": "ExpressionStatement",
																	"src": "11617:11:12"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2900,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2780,
													"src": "11669:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2778,
												"id": 2901,
												"nodeType": "Return",
												"src": "11662:13:12"
											}
										]
									},
									"documentation": {
										"id": 2772,
										"nodeType": "StructuredDocumentation",
										"src": "10575:119:12",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2903,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "10708:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2774,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10721:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2903,
												"src": "10713:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2773,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10713:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10712:15:12"
									},
									"returnParameters": {
										"id": 2778,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2777,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2903,
												"src": "10751:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2776,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10751:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10750:9:12"
									},
									"scope": 3247,
									"src": "10699:983:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2937,
										"nodeType": "Block",
										"src": "11915:168:12",
										"statements": [
											{
												"id": 2936,
												"nodeType": "UncheckedBlock",
												"src": "11925:152:12",
												"statements": [
													{
														"assignments": [
															2915
														],
														"declarations": [
															{
																"constant": false,
																"id": 2915,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11957:6:12",
																"nodeType": "VariableDeclaration",
																"scope": 2936,
																"src": "11949:14:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2914,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11949:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2919,
														"initialValue": {
															"arguments": [
																{
																	"id": 2917,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2906,
																	"src": "11971:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2916,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2903,
																	2938
																],
																"referencedDeclaration": 2903,
																"src": "11966:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2918,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11966:11:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11949:28:12"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2934,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2920,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2915,
																"src": "11998:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2929,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2922,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2909,
																						"src": "12025:8:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2204",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2204",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2921,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3246,
																					"src": "12008:16:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2204_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2923,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12008:26:12",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2928,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2926,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2924,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12038:1:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 2925,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2915,
																						"src": "12043:6:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12038:11:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2927,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2906,
																					"src": "12052:5:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12038:19:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12008:49:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2931,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12064:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2932,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12008:57:12",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2930,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12060:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2933,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12007:59:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11998:68:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2913,
														"id": 2935,
														"nodeType": "Return",
														"src": "11991:75:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2904,
										"nodeType": "StructuredDocumentation",
										"src": "11688:142:12",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2938,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "11844:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2906,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11857:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2938,
												"src": "11849:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2905,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11849:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2909,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11873:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2938,
												"src": "11864:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2204",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2908,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2907,
														"name": "Rounding",
														"nameLocations": [
															"11864:8:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2204,
														"src": "11864:8:12"
													},
													"referencedDeclaration": 2204,
													"src": "11864:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2204",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11848:34:12"
									},
									"returnParameters": {
										"id": 2913,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2912,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2938,
												"src": "11906:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2911,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11906:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11905:9:12"
									},
									"scope": 3247,
									"src": "11835:248:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3066,
										"nodeType": "Block",
										"src": "12276:854:12",
										"statements": [
											{
												"assignments": [
													2947
												],
												"declarations": [
													{
														"constant": false,
														"id": 2947,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12294:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 3066,
														"src": "12286:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2946,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12286:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2949,
												"initialValue": {
													"hexValue": "30",
													"id": 2948,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12303:1:12",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12286:18:12"
											},
											{
												"id": 3063,
												"nodeType": "UncheckedBlock",
												"src": "12314:787:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2954,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2950,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2941,
																"src": "12342:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 2953,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2951,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12351:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2952,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12357:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "12351:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "12342:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2966,
														"nodeType": "IfStatement",
														"src": "12338:103:12",
														"trueBody": {
															"id": 2965,
															"nodeType": "Block",
															"src": "12361:80:12",
															"statements": [
																{
																	"expression": {
																		"id": 2959,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2955,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2941,
																			"src": "12379:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 2958,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2956,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12388:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 2957,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12394:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "12388:8:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "12379:17:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2960,
																	"nodeType": "ExpressionStatement",
																	"src": "12379:17:12"
																},
																{
																	"expression": {
																		"id": 2963,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2961,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2947,
																			"src": "12414:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2962,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12424:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "12414:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2964,
																	"nodeType": "ExpressionStatement",
																	"src": "12414:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2971,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2967,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2941,
																"src": "12458:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 2970,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2968,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12467:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2969,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12473:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12467:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "12458:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2983,
														"nodeType": "IfStatement",
														"src": "12454:103:12",
														"trueBody": {
															"id": 2982,
															"nodeType": "Block",
															"src": "12477:80:12",
															"statements": [
																{
																	"expression": {
																		"id": 2976,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2972,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2941,
																			"src": "12495:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 2975,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2973,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12504:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 2974,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12510:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "12504:8:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "12495:17:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2977,
																	"nodeType": "ExpressionStatement",
																	"src": "12495:17:12"
																},
																{
																	"expression": {
																		"id": 2980,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2978,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2947,
																			"src": "12530:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2979,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12540:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12530:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2981,
																	"nodeType": "ExpressionStatement",
																	"src": "12530:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2988,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2984,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2941,
																"src": "12574:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 2987,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2985,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12583:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2986,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12589:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12583:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "12574:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3000,
														"nodeType": "IfStatement",
														"src": "12570:103:12",
														"trueBody": {
															"id": 2999,
															"nodeType": "Block",
															"src": "12593:80:12",
															"statements": [
																{
																	"expression": {
																		"id": 2993,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2989,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2941,
																			"src": "12611:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 2992,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2990,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12620:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 2991,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12626:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "12620:8:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "12611:17:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2994,
																	"nodeType": "ExpressionStatement",
																	"src": "12611:17:12"
																},
																{
																	"expression": {
																		"id": 2997,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2995,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2947,
																			"src": "12646:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2996,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12656:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12646:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2998,
																	"nodeType": "ExpressionStatement",
																	"src": "12646:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3005,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3001,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2941,
																"src": "12690:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 3004,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3002,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12699:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 3003,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12705:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12699:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "12690:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3017,
														"nodeType": "IfStatement",
														"src": "12686:100:12",
														"trueBody": {
															"id": 3016,
															"nodeType": "Block",
															"src": "12708:78:12",
															"statements": [
																{
																	"expression": {
																		"id": 3010,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3006,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2941,
																			"src": "12726:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 3009,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3007,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12735:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 3008,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12741:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "12735:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "12726:16:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3011,
																	"nodeType": "ExpressionStatement",
																	"src": "12726:16:12"
																},
																{
																	"expression": {
																		"id": 3014,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3012,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2947,
																			"src": "12760:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 3013,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12770:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12760:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3015,
																	"nodeType": "ExpressionStatement",
																	"src": "12760:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3022,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3018,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2941,
																"src": "12803:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 3021,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3019,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12812:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 3020,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12818:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "12812:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "12803:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3034,
														"nodeType": "IfStatement",
														"src": "12799:100:12",
														"trueBody": {
															"id": 3033,
															"nodeType": "Block",
															"src": "12821:78:12",
															"statements": [
																{
																	"expression": {
																		"id": 3027,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3023,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2941,
																			"src": "12839:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 3026,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3024,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12848:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 3025,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12854:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "12848:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "12839:16:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3028,
																	"nodeType": "ExpressionStatement",
																	"src": "12839:16:12"
																},
																{
																	"expression": {
																		"id": 3031,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3029,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2947,
																			"src": "12873:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 3030,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12883:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12873:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3032,
																	"nodeType": "ExpressionStatement",
																	"src": "12873:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3039,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3035,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2941,
																"src": "12916:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 3038,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3036,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12925:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 3037,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12931:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "12925:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "12916:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3051,
														"nodeType": "IfStatement",
														"src": "12912:100:12",
														"trueBody": {
															"id": 3050,
															"nodeType": "Block",
															"src": "12934:78:12",
															"statements": [
																{
																	"expression": {
																		"id": 3044,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3040,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2941,
																			"src": "12952:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 3043,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3041,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12961:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 3042,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12967:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "12961:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "12952:16:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3045,
																	"nodeType": "ExpressionStatement",
																	"src": "12952:16:12"
																},
																{
																	"expression": {
																		"id": 3048,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3046,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2947,
																			"src": "12986:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 3047,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12996:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12986:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3049,
																	"nodeType": "ExpressionStatement",
																	"src": "12986:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3056,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3052,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2941,
																"src": "13029:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 3055,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3053,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13038:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3054,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13044:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13038:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "13029:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3062,
														"nodeType": "IfStatement",
														"src": "13025:66:12",
														"trueBody": {
															"id": 3061,
															"nodeType": "Block",
															"src": "13047:44:12",
															"statements": [
																{
																	"expression": {
																		"id": 3059,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3057,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2947,
																			"src": "13065:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 3058,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13075:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "13065:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3060,
																	"nodeType": "ExpressionStatement",
																	"src": "13065:11:12"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 3064,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2947,
													"src": "13117:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2945,
												"id": 3065,
												"nodeType": "Return",
												"src": "13110:13:12"
											}
										]
									},
									"documentation": {
										"id": 2939,
										"nodeType": "StructuredDocumentation",
										"src": "12089:120:12",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 3067,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "12223:5:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2942,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2941,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12237:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 3067,
												"src": "12229:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2940,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12229:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12228:15:12"
									},
									"returnParameters": {
										"id": 2945,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2944,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3067,
												"src": "12267:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2943,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12267:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12266:9:12"
									},
									"scope": 3247,
									"src": "12214:916:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3101,
										"nodeType": "Block",
										"src": "13365:170:12",
										"statements": [
											{
												"id": 3100,
												"nodeType": "UncheckedBlock",
												"src": "13375:154:12",
												"statements": [
													{
														"assignments": [
															3079
														],
														"declarations": [
															{
																"constant": false,
																"id": 3079,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "13407:6:12",
																"nodeType": "VariableDeclaration",
																"scope": 3100,
																"src": "13399:14:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3078,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13399:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3083,
														"initialValue": {
															"arguments": [
																{
																	"id": 3081,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3070,
																	"src": "13422:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3080,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	3067,
																	3102
																],
																"referencedDeclaration": 3067,
																"src": "13416:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 3082,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13416:12:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13399:29:12"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3098,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3084,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3079,
																"src": "13449:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 3093,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3086,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3073,
																						"src": "13476:8:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2204",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2204",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 3085,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3246,
																					"src": "13459:16:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2204_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 3087,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13459:26:12",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3092,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3090,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 3088,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13489:2:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 3089,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3079,
																						"src": "13495:6:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13489:12:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 3091,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3070,
																					"src": "13504:5:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13489:20:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13459:50:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 3095,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13516:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 3096,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13459:58:12",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 3094,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13512:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 3097,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13458:60:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13449:69:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3077,
														"id": 3099,
														"nodeType": "Return",
														"src": "13442:76:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3068,
										"nodeType": "StructuredDocumentation",
										"src": "13136:143:12",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 3102,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "13293:5:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3070,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13307:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 3102,
												"src": "13299:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3069,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13299:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3073,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "13323:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 3102,
												"src": "13314:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2204",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3072,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3071,
														"name": "Rounding",
														"nameLocations": [
															"13314:8:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2204,
														"src": "13314:8:12"
													},
													"referencedDeclaration": 2204,
													"src": "13314:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2204",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13298:34:12"
									},
									"returnParameters": {
										"id": 3077,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3076,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3102,
												"src": "13356:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3075,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13356:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13355:9:12"
									},
									"scope": 3247,
									"src": "13284:251:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3188,
										"nodeType": "Block",
										"src": "13855:600:12",
										"statements": [
											{
												"assignments": [
													3111
												],
												"declarations": [
													{
														"constant": false,
														"id": 3111,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "13873:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 3188,
														"src": "13865:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3110,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13865:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3113,
												"initialValue": {
													"hexValue": "30",
													"id": 3112,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13882:1:12",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13865:18:12"
											},
											{
												"id": 3185,
												"nodeType": "UncheckedBlock",
												"src": "13893:533:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3118,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3116,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3114,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3105,
																	"src": "13921:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 3115,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13930:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "13921:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3117,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13936:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13921:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3128,
														"nodeType": "IfStatement",
														"src": "13917:98:12",
														"trueBody": {
															"id": 3127,
															"nodeType": "Block",
															"src": "13939:76:12",
															"statements": [
																{
																	"expression": {
																		"id": 3121,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3119,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3105,
																			"src": "13957:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 3120,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13967:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "13957:13:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3122,
																	"nodeType": "ExpressionStatement",
																	"src": "13957:13:12"
																},
																{
																	"expression": {
																		"id": 3125,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3123,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3111,
																			"src": "13988:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3124,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13998:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "13988:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3126,
																	"nodeType": "ExpressionStatement",
																	"src": "13988:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3133,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3131,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3129,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3105,
																	"src": "14032:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 3130,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14041:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "14032:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3132,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14046:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14032:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3143,
														"nodeType": "IfStatement",
														"src": "14028:95:12",
														"trueBody": {
															"id": 3142,
															"nodeType": "Block",
															"src": "14049:74:12",
															"statements": [
																{
																	"expression": {
																		"id": 3136,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3134,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3105,
																			"src": "14067:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 3135,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14077:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "14067:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3137,
																	"nodeType": "ExpressionStatement",
																	"src": "14067:12:12"
																},
																{
																	"expression": {
																		"id": 3140,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3138,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3111,
																			"src": "14097:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 3139,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14107:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "14097:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3141,
																	"nodeType": "ExpressionStatement",
																	"src": "14097:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3148,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3146,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3144,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3105,
																	"src": "14140:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 3145,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14149:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "14140:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3147,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14154:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14140:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3158,
														"nodeType": "IfStatement",
														"src": "14136:95:12",
														"trueBody": {
															"id": 3157,
															"nodeType": "Block",
															"src": "14157:74:12",
															"statements": [
																{
																	"expression": {
																		"id": 3151,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3149,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3105,
																			"src": "14175:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 3150,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14185:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "14175:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3152,
																	"nodeType": "ExpressionStatement",
																	"src": "14175:12:12"
																},
																{
																	"expression": {
																		"id": 3155,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3153,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3111,
																			"src": "14205:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 3154,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14215:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "14205:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3156,
																	"nodeType": "ExpressionStatement",
																	"src": "14205:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3163,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3161,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3159,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3105,
																	"src": "14248:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 3160,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14257:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "14248:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3162,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14262:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14248:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3173,
														"nodeType": "IfStatement",
														"src": "14244:95:12",
														"trueBody": {
															"id": 3172,
															"nodeType": "Block",
															"src": "14265:74:12",
															"statements": [
																{
																	"expression": {
																		"id": 3166,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3164,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3105,
																			"src": "14283:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3165,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14293:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14283:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3167,
																	"nodeType": "ExpressionStatement",
																	"src": "14283:12:12"
																},
																{
																	"expression": {
																		"id": 3170,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3168,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3111,
																			"src": "14313:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 3169,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14323:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "14313:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3171,
																	"nodeType": "ExpressionStatement",
																	"src": "14313:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3178,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3176,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3174,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3105,
																	"src": "14356:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 3175,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14365:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "14356:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3177,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14369:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14356:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3184,
														"nodeType": "IfStatement",
														"src": "14352:64:12",
														"trueBody": {
															"id": 3183,
															"nodeType": "Block",
															"src": "14372:44:12",
															"statements": [
																{
																	"expression": {
																		"id": 3181,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3179,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3111,
																			"src": "14390:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 3180,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14400:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "14390:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3182,
																	"nodeType": "ExpressionStatement",
																	"src": "14390:11:12"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 3186,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3111,
													"src": "14442:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3109,
												"id": 3187,
												"nodeType": "Return",
												"src": "14435:13:12"
											}
										]
									},
									"documentation": {
										"id": 3103,
										"nodeType": "StructuredDocumentation",
										"src": "13541:246:12",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 3189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "13801:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3105,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13816:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 3189,
												"src": "13808:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3104,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13807:15:12"
									},
									"returnParameters": {
										"id": 3109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3108,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3189,
												"src": "13846:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3107,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13846:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13845:9:12"
									},
									"scope": 3247,
									"src": "13792:663:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3226,
										"nodeType": "Block",
										"src": "14692:177:12",
										"statements": [
											{
												"id": 3225,
												"nodeType": "UncheckedBlock",
												"src": "14702:161:12",
												"statements": [
													{
														"assignments": [
															3201
														],
														"declarations": [
															{
																"constant": false,
																"id": 3201,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "14734:6:12",
																"nodeType": "VariableDeclaration",
																"scope": 3225,
																"src": "14726:14:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3200,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14726:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3205,
														"initialValue": {
															"arguments": [
																{
																	"id": 3203,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3192,
																	"src": "14750:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3202,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	3189,
																	3227
																],
																"referencedDeclaration": 3189,
																"src": "14743:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 3204,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14743:13:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14726:30:12"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3223,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3206,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3201,
																"src": "14777:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 3218,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3208,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3195,
																						"src": "14804:8:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2204",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2204",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 3207,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3246,
																					"src": "14787:16:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2204_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 3209,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14787:26:12",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3217,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3215,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 3210,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14817:1:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 3213,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 3211,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 3201,
																									"src": "14823:6:12",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 3212,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "14833:1:12",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "14823:11:12",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 3214,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "14822:13:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "14817:18:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 3216,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3192,
																					"src": "14838:5:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14817:26:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "14787:56:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 3220,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14850:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 3221,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "14787:64:12",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 3219,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14846:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 3222,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14786:66:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "14777:75:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3199,
														"id": 3224,
														"nodeType": "Return",
														"src": "14770:82:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3190,
										"nodeType": "StructuredDocumentation",
										"src": "14461:144:12",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 3227,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "14619:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3192,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14634:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 3227,
												"src": "14626:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3191,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14626:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3195,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "14650:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 3227,
												"src": "14641:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2204",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3194,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3193,
														"name": "Rounding",
														"nameLocations": [
															"14641:8:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2204,
														"src": "14641:8:12"
													},
													"referencedDeclaration": 2204,
													"src": "14641:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2204",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14625:34:12"
									},
									"returnParameters": {
										"id": 3199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3198,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3227,
												"src": "14683:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14683:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14682:9:12"
									},
									"scope": 3247,
									"src": "14610:259:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3245,
										"nodeType": "Block",
										"src": "15067:48:12",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 3243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 3241,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 3238,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3231,
																	"src": "15090:8:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$2204",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$2204",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 3237,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15084:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 3236,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "15084:5:12",
																	"typeDescriptions": {}
																}
															},
															"id": 3239,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15084:15:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 3240,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15102:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "15084:19:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 3242,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15107:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "15084:24:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3235,
												"id": 3244,
												"nodeType": "Return",
												"src": "15077:31:12"
											}
										]
									},
									"documentation": {
										"id": 3228,
										"nodeType": "StructuredDocumentation",
										"src": "14875:113:12",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 3246,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "15002:16:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3231,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "15028:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 3246,
												"src": "15019:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2204",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3230,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3229,
														"name": "Rounding",
														"nameLocations": [
															"15019:8:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2204,
														"src": "15019:8:12"
													},
													"referencedDeclaration": 2204,
													"src": "15019:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2204",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15018:19:12"
									},
									"returnParameters": {
										"id": 3235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3234,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3246,
												"src": "15061:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3233,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15061:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15060:6:12"
									},
									"scope": 3247,
									"src": "14993:122:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3248,
							"src": "203:14914:12",
							"usedErrors": [
								2199
							],
							"usedEvents": []
						}
					],
					"src": "103:15015:12"
				},
				"id": 12
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							3352
						]
					},
					"id": 3353,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3249,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:13"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 3250,
								"nodeType": "StructuredDocumentation",
								"src": "135:80:13",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 3352,
							"linearizedBaseContracts": [
								3352
							],
							"name": "SignedMath",
							"nameLocation": "224:10:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 3267,
										"nodeType": "Block",
										"src": "376:37:13",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3262,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3260,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3253,
															"src": "393:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 3261,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3255,
															"src": "397:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "393:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 3264,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3255,
														"src": "405:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 3265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "393:13:13",
													"trueExpression": {
														"id": 3263,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3253,
														"src": "401:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3259,
												"id": 3266,
												"nodeType": "Return",
												"src": "386:20:13"
											}
										]
									},
									"documentation": {
										"id": 3251,
										"nodeType": "StructuredDocumentation",
										"src": "241:66:13",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 3268,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "321:3:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3253,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "332:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 3268,
												"src": "325:8:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3252,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "325:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3255,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "342:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 3268,
												"src": "335:8:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3254,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "335:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "324:20:13"
									},
									"returnParameters": {
										"id": 3259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3258,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3268,
												"src": "368:6:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3257,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "368:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "367:8:13"
									},
									"scope": 3352,
									"src": "312:101:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3285,
										"nodeType": "Block",
										"src": "555:37:13",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3280,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3278,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3271,
															"src": "572:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 3279,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3273,
															"src": "576:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "572:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 3282,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3273,
														"src": "584:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 3283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "572:13:13",
													"trueExpression": {
														"id": 3281,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3271,
														"src": "580:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3277,
												"id": 3284,
												"nodeType": "Return",
												"src": "565:20:13"
											}
										]
									},
									"documentation": {
										"id": 3269,
										"nodeType": "StructuredDocumentation",
										"src": "419:67:13",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 3286,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "500:3:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3271,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "511:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 3286,
												"src": "504:8:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3270,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "504:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3273,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "521:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 3286,
												"src": "514:8:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3272,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "514:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "503:20:13"
									},
									"returnParameters": {
										"id": 3277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3276,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3286,
												"src": "547:6:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3275,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "547:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "546:8:13"
									},
									"scope": 3352,
									"src": "491:101:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3329,
										"nodeType": "Block",
										"src": "797:162:13",
										"statements": [
											{
												"assignments": [
													3297
												],
												"declarations": [
													{
														"constant": false,
														"id": 3297,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "866:1:13",
														"nodeType": "VariableDeclaration",
														"scope": 3329,
														"src": "859:8:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 3296,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "859:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3310,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3300,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3298,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3289,
																	"src": "871:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 3299,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3291,
																	"src": "875:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "871:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3301,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "870:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3307,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3304,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3302,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3289,
																				"src": "882:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 3303,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3291,
																				"src": "886:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "882:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 3305,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "881:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3306,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "892:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "881:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3308,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "880:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "870:24:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "859:35:13"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3311,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3297,
														"src": "911:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3325,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3319,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3316,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3297,
																						"src": "931:1:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 3315,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "923:7:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 3314,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "923:7:13",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 3317,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "923:10:13",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 3318,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "937:3:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "923:17:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 3313,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "916:6:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 3312,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "916:6:13",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3320,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "916:25:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3323,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3321,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3289,
																				"src": "945:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 3322,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3291,
																				"src": "949:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "945:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 3324,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "944:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "916:35:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3326,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "915:37:13",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "911:41:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3295,
												"id": 3328,
												"nodeType": "Return",
												"src": "904:48:13"
											}
										]
									},
									"documentation": {
										"id": 3287,
										"nodeType": "StructuredDocumentation",
										"src": "598:126:13",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 3330,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "738:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3289,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "753:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 3330,
												"src": "746:8:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3288,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "746:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3291,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "763:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 3330,
												"src": "756:8:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3290,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "756:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "745:20:13"
									},
									"returnParameters": {
										"id": 3295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3294,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3330,
												"src": "789:6:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3293,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:8:13"
									},
									"scope": 3352,
									"src": "729:230:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3350,
										"nodeType": "Block",
										"src": "1103:158:13",
										"statements": [
											{
												"id": 3349,
												"nodeType": "UncheckedBlock",
												"src": "1113:142:13",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 3342,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3340,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3333,
																			"src": "1228:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 3341,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1233:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1228:6:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 3345,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1241:2:13",
																		"subExpression": {
																			"id": 3344,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3333,
																			"src": "1242:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 3346,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1228:15:13",
																	"trueExpression": {
																		"id": 3343,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3333,
																		"src": "1237:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 3339,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1220:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 3338,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1220:7:13",
																	"typeDescriptions": {}
																}
															},
															"id": 3347,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1220:24:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3337,
														"id": 3348,
														"nodeType": "Return",
														"src": "1213:31:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3331,
										"nodeType": "StructuredDocumentation",
										"src": "965:78:13",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 3351,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1057:3:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3333,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1068:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 3351,
												"src": "1061:8:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3332,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1061:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1060:10:13"
									},
									"returnParameters": {
										"id": 3337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3336,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3351,
												"src": "1094:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3335,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1093:9:13"
									},
									"scope": 3352,
									"src": "1048:213:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3353,
							"src": "216:1047:13",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "109:1155:13"
				},
				"id": 13
			},
			"contracts/MyToken.sol": {
				"ast": {
					"absolutePath": "contracts/MyToken.sol",
					"exportedSymbols": {
						"Context": [
							1902
						],
						"ERC165": [
							2181
						],
						"ERC5169": [
							3485
						],
						"ERC721": [
							1293
						],
						"ERC721Enumerable": [
							1812
						],
						"ERC721Mint": [
							3424
						],
						"IERC165": [
							2193
						],
						"IERC5169": [
							3508
						],
						"IERC721": [
							1410
						],
						"IERC721Enumerable": [
							1844
						],
						"IERC721Errors": [
							237
						],
						"IERC721Metadata": [
							1872
						],
						"IERC721Receiver": [
							1428
						],
						"Ownable": [
							147
						],
						"Strings": [
							2157
						]
					},
					"id": 3425,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3354,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:14"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"id": 3355,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3425,
							"sourceUnit": 1294,
							"src": "57:57:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 3356,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3425,
							"sourceUnit": 148,
							"src": "116:52:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
							"file": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
							"id": 3357,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3425,
							"sourceUnit": 1813,
							"src": "169:78:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "stl-contracts/ERC/ERC5169.sol",
							"file": "stl-contracts/ERC/ERC5169.sol",
							"id": 3358,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3425,
							"sourceUnit": 3486,
							"src": "248:39:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3359,
										"name": "Ownable",
										"nameLocations": [
											"312:7:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "312:7:14"
									},
									"id": 3360,
									"nodeType": "InheritanceSpecifier",
									"src": "312:7:14"
								},
								{
									"baseName": {
										"id": 3361,
										"name": "ERC5169",
										"nameLocations": [
											"321:7:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3485,
										"src": "321:7:14"
									},
									"id": 3362,
									"nodeType": "InheritanceSpecifier",
									"src": "321:7:14"
								},
								{
									"baseName": {
										"id": 3363,
										"name": "ERC721Enumerable",
										"nameLocations": [
											"330:16:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1812,
										"src": "330:16:14"
									},
									"id": 3364,
									"nodeType": "InheritanceSpecifier",
									"src": "330:16:14"
								}
							],
							"canonicalName": "ERC721Mint",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3424,
							"linearizedBaseContracts": [
								3424,
								1812,
								1844,
								1293,
								237,
								1872,
								1410,
								2181,
								2193,
								3485,
								3508,
								147,
								1902
							],
							"name": "ERC721Mint",
							"nameLocation": "298:10:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 3375,
										"nodeType": "Block",
										"src": "439:2:14",
										"statements": []
									},
									"id": 3376,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "646f7562696d616f",
													"id": 3367,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "382:10:14",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_4fe887bd7eb4297b2d470429b314863698425c8087e50838527b44df35496e42",
														"typeString": "literal_string \"doubimao\""
													},
													"value": "doubimao"
												},
												{
													"hexValue": "646f7562696d616f",
													"id": 3368,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "394:10:14",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_4fe887bd7eb4297b2d470429b314863698425c8087e50838527b44df35496e42",
														"typeString": "literal_string \"doubimao\""
													},
													"value": "doubimao"
												}
											],
											"id": 3369,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3366,
												"name": "ERC721",
												"nameLocations": [
													"375:6:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1293,
												"src": "375:6:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "375:30:14"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 3371,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "423:3:14",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 3372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "427:6:14",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "423:10:14",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 3373,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3370,
												"name": "Ownable",
												"nameLocations": [
													"415:7:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "415:7:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "415:19:14"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "364:2:14"
									},
									"returnParameters": {
										"id": 3374,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "439:0:14"
									},
									"scope": 3424,
									"src": "353:88:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1492,
										3477
									],
									"body": {
										"id": 3396,
										"nodeType": "Block",
										"src": "593:137:14",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 3394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 3388,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3378,
																"src": "657:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 3386,
																"name": "ERC721Enumerable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1812,
																"src": "622:16:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC721Enumerable_$1812_$",
																	"typeString": "type(contract ERC721Enumerable)"
																}
															},
															"id": 3387,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "639:17:14",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1492,
															"src": "622:34:14",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 3389,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "622:47:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 3392,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3378,
																"src": "711:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 3390,
																"name": "ERC5169",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3485,
																"src": "685:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC5169_$3485_$",
																	"typeString": "type(contract ERC5169)"
																}
															},
															"id": 3391,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "693:17:14",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3477,
															"src": "685:25:14",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 3393,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "685:38:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "622:101:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3385,
												"id": 3395,
												"nodeType": "Return",
												"src": "603:120:14"
											}
										]
									},
									"functionSelector": "01ffc9a7",
									"id": 3397,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "456:17:14",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3382,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 3380,
												"name": "ERC5169",
												"nameLocations": [
													"539:7:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3485,
												"src": "539:7:14"
											},
											{
												"id": 3381,
												"name": "ERC721Enumerable",
												"nameLocations": [
													"548:16:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1812,
												"src": "548:16:14"
											}
										],
										"src": "530:35:14"
									},
									"parameters": {
										"id": 3379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3378,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "481:11:14",
												"nodeType": "VariableDeclaration",
												"scope": 3397,
												"src": "474:18:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 3377,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "474:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "473:20:14"
									},
									"returnParameters": {
										"id": 3385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3384,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3397,
												"src": "583:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3383,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "583:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "582:6:14"
									},
									"scope": 3424,
									"src": "447:283:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										3484
									],
									"body": {
										"id": 3407,
										"nodeType": "Block",
										"src": "902:2:14",
										"statements": []
									},
									"id": 3408,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3405,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3404,
												"name": "onlyOwner",
												"nameLocations": [
													"888:9:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "888:9:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "888:9:14"
										}
									],
									"name": "_authorizeSetScripts",
									"nameLocation": "786:20:14",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3403,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 3402,
												"name": "ERC5169",
												"nameLocations": [
													"871:7:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3485,
												"src": "871:7:14"
											}
										],
										"src": "862:17:14"
									},
									"parameters": {
										"id": 3401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3400,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3408,
												"src": "807:15:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
													"typeString": "string[]"
												},
												"typeName": {
													"baseType": {
														"id": 3398,
														"name": "string",
														"nodeType": "ElementaryTypeName",
														"src": "807:6:14",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage_ptr",
															"typeString": "string"
														}
													},
													"id": 3399,
													"nodeType": "ArrayTypeName",
													"src": "807:8:14",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
														"typeString": "string[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "806:17:14"
									},
									"returnParameters": {
										"id": 3406,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "902:0:14"
									},
									"scope": 3424,
									"src": "777:127:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3422,
										"nodeType": "Block",
										"src": "974:39:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3418,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3410,
															"src": "994:2:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3419,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3412,
															"src": "998:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3417,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															915,
															941
														],
														"referencedDeclaration": 915,
														"src": "984:9:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 3420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "984:22:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3421,
												"nodeType": "ExpressionStatement",
												"src": "984:22:14"
											}
										]
									},
									"functionSelector": "a1448194",
									"id": 3423,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3415,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3414,
												"name": "onlyOwner",
												"nameLocations": [
													"964:9:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "964:9:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "964:9:14"
										}
									],
									"name": "safeMint",
									"nameLocation": "919:8:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3410,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "936:2:14",
												"nodeType": "VariableDeclaration",
												"scope": 3423,
												"src": "928:10:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3409,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "928:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3412,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "948:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 3423,
												"src": "940:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3411,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "940:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "927:29:14"
									},
									"returnParameters": {
										"id": 3416,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "974:0:14"
									},
									"scope": 3424,
									"src": "910:103:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 3425,
							"src": "289:726:14",
							"usedErrors": [
								13,
								18,
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236,
								1465,
								1468
							],
							"usedEvents": [
								24,
								1309,
								1318,
								1327,
								3493
							]
						}
					],
					"src": "32:983:14"
				},
				"id": 14
			},
			"stl-contracts/ERC/ERC5169.sol": {
				"ast": {
					"absolutePath": "stl-contracts/ERC/ERC5169.sol",
					"exportedSymbols": {
						"ERC5169": [
							3485
						],
						"IERC5169": [
							3508
						]
					},
					"id": 3486,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3426,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:15"
						},
						{
							"absolutePath": "stl-contracts/ERC/IERC5169.sol",
							"file": "./IERC5169.sol",
							"id": 3427,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3486,
							"sourceUnit": 3509,
							"src": "129:24:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 3428,
										"name": "IERC5169",
										"nameLocations": [
											"184:8:15"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3508,
										"src": "184:8:15"
									},
									"id": 3429,
									"nodeType": "InheritanceSpecifier",
									"src": "184:8:15"
								}
							],
							"canonicalName": "ERC5169",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": false,
							"id": 3485,
							"linearizedBaseContracts": [
								3485,
								3508
							],
							"name": "ERC5169",
							"nameLocation": "173:7:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3432,
									"mutability": "mutable",
									"name": "_scriptURI",
									"nameLocation": "216:10:15",
									"nodeType": "VariableDeclaration",
									"scope": 3485,
									"src": "199:27:15",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
										"typeString": "string[]"
									},
									"typeName": {
										"baseType": {
											"id": 3430,
											"name": "string",
											"nodeType": "ElementaryTypeName",
											"src": "199:6:15",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											}
										},
										"id": 3431,
										"nodeType": "ArrayTypeName",
										"src": "199:8:15",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
											"typeString": "string[]"
										}
									},
									"visibility": "private"
								},
								{
									"baseFunctions": [
										3500
									],
									"body": {
										"id": 3441,
										"nodeType": "Block",
										"src": "303:34:15",
										"statements": [
											{
												"expression": {
													"id": 3439,
													"name": "_scriptURI",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3432,
													"src": "320:10:15",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
														"typeString": "string storage ref[] storage ref"
													}
												},
												"functionReturnParameters": 3438,
												"id": 3440,
												"nodeType": "Return",
												"src": "313:17:15"
											}
										]
									},
									"functionSelector": "4bb30912",
									"id": 3442,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "scriptURI",
									"nameLocation": "242:9:15",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3434,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "268:8:15"
									},
									"parameters": {
										"id": 3433,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "251:2:15"
									},
									"returnParameters": {
										"id": 3438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3437,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3442,
												"src": "286:15:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
													"typeString": "string[]"
												},
												"typeName": {
													"baseType": {
														"id": 3435,
														"name": "string",
														"nodeType": "ElementaryTypeName",
														"src": "286:6:15",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage_ptr",
															"typeString": "string"
														}
													},
													"id": 3436,
													"nodeType": "ArrayTypeName",
													"src": "286:8:15",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
														"typeString": "string[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "285:17:15"
									},
									"scope": 3485,
									"src": "233:104:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										3507
									],
									"body": {
										"id": 3461,
										"nodeType": "Block",
										"src": "413:129:15",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3450,
															"name": "newScriptURI",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3445,
															"src": "444:12:15",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
																"typeString": "string memory[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
																"typeString": "string memory[] memory"
															}
														],
														"id": 3449,
														"name": "_authorizeSetScripts",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3484,
														"src": "423:20:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (string memory[] memory)"
														}
													},
													"id": 3451,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "423:34:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3452,
												"nodeType": "ExpressionStatement",
												"src": "423:34:15"
											},
											{
												"expression": {
													"id": 3455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3453,
														"name": "_scriptURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3432,
														"src": "468:10:15",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
															"typeString": "string storage ref[] storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3454,
														"name": "newScriptURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3445,
														"src": "481:12:15",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
															"typeString": "string memory[] memory"
														}
													},
													"src": "468:25:15",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
														"typeString": "string storage ref[] storage ref"
													}
												},
												"id": 3456,
												"nodeType": "ExpressionStatement",
												"src": "468:25:15"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 3458,
															"name": "newScriptURI",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3445,
															"src": "522:12:15",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
																"typeString": "string memory[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
																"typeString": "string memory[] memory"
															}
														],
														"id": 3457,
														"name": "ScriptUpdate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3493,
														"src": "509:12:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (string memory[] memory)"
														}
													},
													"id": 3459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "509:26:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3460,
												"nodeType": "EmitStatement",
												"src": "504:31:15"
											}
										]
									},
									"functionSelector": "e3d61eb3",
									"id": 3462,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setScriptURI",
									"nameLocation": "352:12:15",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3447,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "404:8:15"
									},
									"parameters": {
										"id": 3446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3445,
												"mutability": "mutable",
												"name": "newScriptURI",
												"nameLocation": "381:12:15",
												"nodeType": "VariableDeclaration",
												"scope": 3462,
												"src": "365:28:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
													"typeString": "string[]"
												},
												"typeName": {
													"baseType": {
														"id": 3443,
														"name": "string",
														"nodeType": "ElementaryTypeName",
														"src": "365:6:15",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage_ptr",
															"typeString": "string"
														}
													},
													"id": 3444,
													"nodeType": "ArrayTypeName",
													"src": "365:8:15",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
														"typeString": "string[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "364:30:15"
									},
									"returnParameters": {
										"id": 3448,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "413:0:15"
									},
									"scope": 3485,
									"src": "343:199:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3476,
										"nodeType": "Block",
										"src": "630:65:15",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 3474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3469,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3464,
														"src": "647:11:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3471,
																	"name": "IERC5169",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3508,
																	"src": "667:8:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC5169_$3508_$",
																		"typeString": "type(contract IERC5169)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC5169_$3508_$",
																		"typeString": "type(contract IERC5169)"
																	}
																],
																"id": 3470,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "662:4:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3472,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "662:14:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC5169_$3508",
																"typeString": "type(contract IERC5169)"
															}
														},
														"id": 3473,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "677:11:15",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "662:26:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "647:41:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3468,
												"id": 3475,
												"nodeType": "Return",
												"src": "640:48:15"
											}
										]
									},
									"functionSelector": "01ffc9a7",
									"id": 3477,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "557:17:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3464,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "582:11:15",
												"nodeType": "VariableDeclaration",
												"scope": 3477,
												"src": "575:18:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 3463,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "575:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "574:20:15"
									},
									"returnParameters": {
										"id": 3468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3467,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3477,
												"src": "624:4:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3466,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "624:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "623:6:15"
									},
									"scope": 3485,
									"src": "548:147:15",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 3478,
										"nodeType": "StructuredDocumentation",
										"src": "701:382:15",
										"text": " @dev Function that should revert when `msg.sender` is not authorized to set script URI. Called by\n {setScriptURI}.\n Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n ```solidity\n function _authorizeSetScripts(string[] memory) internal override onlyOwner {}\n ```"
									},
									"id": 3484,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_authorizeSetScripts",
									"nameLocation": "1097:20:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3481,
												"mutability": "mutable",
												"name": "newScriptURI",
												"nameLocation": "1134:12:15",
												"nodeType": "VariableDeclaration",
												"scope": 3484,
												"src": "1118:28:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
													"typeString": "string[]"
												},
												"typeName": {
													"baseType": {
														"id": 3479,
														"name": "string",
														"nodeType": "ElementaryTypeName",
														"src": "1118:6:15",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage_ptr",
															"typeString": "string"
														}
													},
													"id": 3480,
													"nodeType": "ArrayTypeName",
													"src": "1118:8:15",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
														"typeString": "string[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1117:30:15"
									},
									"returnParameters": {
										"id": 3483,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1164:0:15"
									},
									"scope": 3485,
									"src": "1088:77:15",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 3486,
							"src": "155:1012:15",
							"usedErrors": [],
							"usedEvents": [
								3493
							]
						}
					],
					"src": "103:1065:15"
				},
				"id": 15
			},
			"stl-contracts/ERC/IERC5169.sol": {
				"ast": {
					"absolutePath": "stl-contracts/ERC/IERC5169.sol",
					"exportedSymbols": {
						"IERC5169": [
							3508
						]
					},
					"id": 3509,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3487,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:16"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC5169",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 3508,
							"linearizedBaseContracts": [
								3508
							],
							"name": "IERC5169",
							"nameLocation": "139:8:16",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3488,
										"nodeType": "StructuredDocumentation",
										"src": "154:130:16",
										"text": "@dev This event emits when the scriptURI is updated,\n so wallets implementing this interface can update a cached script"
									},
									"eventSelector": "9538911740e5519a40db77fb5f637de0d56cdd804318d81ae270cc24fbd8479e",
									"id": 3493,
									"name": "ScriptUpdate",
									"nameLocation": "295:12:16",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3491,
												"indexed": false,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3493,
												"src": "308:8:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
													"typeString": "string[]"
												},
												"typeName": {
													"baseType": {
														"id": 3489,
														"name": "string",
														"nodeType": "ElementaryTypeName",
														"src": "308:6:16",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage_ptr",
															"typeString": "string"
														}
													},
													"id": 3490,
													"nodeType": "ArrayTypeName",
													"src": "308:8:16",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
														"typeString": "string[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "307:10:16"
									},
									"src": "289:29:16"
								},
								{
									"documentation": {
										"id": 3494,
										"nodeType": "StructuredDocumentation",
										"src": "324:76:16",
										"text": "@notice Get the scriptURI for the contract\n @return The scriptURI"
									},
									"functionSelector": "4bb30912",
									"id": 3500,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "scriptURI",
									"nameLocation": "414:9:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3495,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "423:2:16"
									},
									"returnParameters": {
										"id": 3499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3498,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3500,
												"src": "449:15:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
													"typeString": "string[]"
												},
												"typeName": {
													"baseType": {
														"id": 3496,
														"name": "string",
														"nodeType": "ElementaryTypeName",
														"src": "449:6:16",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage_ptr",
															"typeString": "string"
														}
													},
													"id": 3497,
													"nodeType": "ArrayTypeName",
													"src": "449:8:16",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
														"typeString": "string[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "448:17:16"
									},
									"scope": 3508,
									"src": "405:61:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 3501,
										"nodeType": "StructuredDocumentation",
										"src": "472:75:16",
										"text": "@notice Update the scriptURI\n emits event ScriptUpdate(string[])"
									},
									"functionSelector": "e3d61eb3",
									"id": 3507,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setScriptURI",
									"nameLocation": "561:12:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3504,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3507,
												"src": "574:15:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
													"typeString": "string[]"
												},
												"typeName": {
													"baseType": {
														"id": 3502,
														"name": "string",
														"nodeType": "ElementaryTypeName",
														"src": "574:6:16",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage_ptr",
															"typeString": "string"
														}
													},
													"id": 3503,
													"nodeType": "ArrayTypeName",
													"src": "574:8:16",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
														"typeString": "string[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "573:17:16"
									},
									"returnParameters": {
										"id": 3506,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "599:0:16"
									},
									"scope": 3508,
									"src": "552:48:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3509,
							"src": "129:473:16",
							"usedErrors": [],
							"usedEvents": [
								3493
							]
						}
					],
					"src": "103:500:16"
				},
				"id": 16
			}
		}
	}
}